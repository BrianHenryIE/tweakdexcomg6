//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct DXCMTransmitterCalibrationData {
    unsigned char _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned short _field4;
    char _field5;
};

struct UIEdgeInsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct _DXCMBackfillRange {
    int _field1;
    int _field2;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct bounds {
    unsigned long long lower;
    unsigned long long upper;
};

struct timeOfDay {
    int hour;
    int minute;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned char Major;
    unsigned char Minor;
    unsigned char Revision;
    unsigned char Build;
} CDStruct_f1f8955b;

typedef struct {
    unsigned char Major;
    unsigned char Minor;
    unsigned char Revision;
} CDStruct_e4c65b9a;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
} CDStruct_cc4e5495;

#pragma mark -

//
// File: /Users/brianhenry/Sites/ios-bt-re/dexcomipa/Payload/CGM-Store.app/CGM-Store
// UUID: 2821F02F-2E7F-3576-A991-5F7778C4D25F
//
//                           Arch: arm64
//                 Source version: 0.0.0.0.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @executable_path/Frameworks
//                               = /Users/brianhenry/Sites/ios-bt-re/dexcomipa/Payload/CGM-Store.app/Frameworks
//                       Run path: @loader_path/Frameworks
//                               = /Users/brianhenry/Sites/ios-bt-re/dexcomipa/Payload/CGM-Store.app/Frameworks
//                       Run path: @executable_path/Frameworks
//                               = /Users/brianhenry/Sites/ios-bt-re/dexcomipa/Payload/CGM-Store.app/Frameworks
//                       Run path: @loader_path/Frameworks
//                               = /Users/brianhenry/Sites/ios-bt-re/dexcomipa/Payload/CGM-Store.app/Frameworks
//                       Run path: @executable_path/Frameworks
//                               = /Users/brianhenry/Sites/ios-bt-re/dexcomipa/Payload/CGM-Store.app/Frameworks
//

@protocol ABPeoplePickerNavigationControllerDelegate <NSObject>

@optional
- (_Bool)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 shouldContinueAfterSelectingPerson:(const void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 shouldContinueAfterSelectingPerson:(const void *)arg2;
- (void)peoplePickerNavigationControllerDidCancel:(ABPeoplePickerNavigationController *)arg1;
- (void)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 didSelectPerson:(const void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (void)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 didSelectPerson:(const void *)arg2;
@end

@protocol AVAudioPlayerDelegate <NSObject>

@optional
- (void)audioPlayerEndInterruption:(AVAudioPlayer *)arg1;
- (void)audioPlayerEndInterruption:(AVAudioPlayer *)arg1 withFlags:(unsigned long long)arg2;
- (void)audioPlayerEndInterruption:(AVAudioPlayer *)arg1 withOptions:(unsigned long long)arg2;
- (void)audioPlayerBeginInterruption:(AVAudioPlayer *)arg1;
- (void)audioPlayerDecodeErrorDidOccur:(AVAudioPlayer *)arg1 error:(NSError *)arg2;
- (void)audioPlayerDidFinishPlaying:(AVAudioPlayer *)arg1 successfully:(_Bool)arg2;
@end

@protocol AVCaptureMetadataOutputObjectsDelegate <NSObject>

@optional
- (void)captureOutput:(AVCaptureOutput *)arg1 didOutputMetadataObjects:(NSArray *)arg2 fromConnection:(AVCaptureConnection *)arg3;
@end

@protocol CALayerDelegate <NSObject>

@optional
- (id <CAAction>)actionForLayer:(CALayer *)arg1 forKey:(NSString *)arg2;
- (void)layoutSublayersOfLayer:(CALayer *)arg1;
- (void)layerWillDraw:(CALayer *)arg1;
- (void)drawLayer:(CALayer *)arg1 inContext:(struct CGContext *)arg2;
- (void)displayLayer:(CALayer *)arg1;
@end

@protocol CBCentralManagerDelegate <NSObject>
- (void)centralManagerDidUpdateState:(CBCentralManager *)arg1;

@optional
- (void)centralManager:(CBCentralManager *)arg1 didUpdateANCSAuthorizationForPeripheral:(CBPeripheral *)arg2;
- (void)centralManager:(CBCentralManager *)arg1 connectionEventDidOccur:(long long)arg2 forPeripheral:(CBPeripheral *)arg3;
- (void)centralManager:(CBCentralManager *)arg1 didDisconnectPeripheral:(CBPeripheral *)arg2 error:(NSError *)arg3;
- (void)centralManager:(CBCentralManager *)arg1 didFailToConnectPeripheral:(CBPeripheral *)arg2 error:(NSError *)arg3;
- (void)centralManager:(CBCentralManager *)arg1 didConnectPeripheral:(CBPeripheral *)arg2;
- (void)centralManager:(CBCentralManager *)arg1 didDiscoverPeripheral:(CBPeripheral *)arg2 advertisementData:(NSDictionary *)arg3 RSSI:(NSNumber *)arg4;
- (void)centralManager:(CBCentralManager *)arg1 willRestoreState:(NSDictionary *)arg2;
@end

@protocol CBPeripheralDelegate <NSObject>

@optional
- (void)peripheral:(CBPeripheral *)arg1 didOpenL2CAPChannel:(CBL2CAPChannel *)arg2 error:(NSError *)arg3;
- (void)peripheralIsReadyToSendWriteWithoutResponse:(CBPeripheral *)arg1;
- (void)peripheral:(CBPeripheral *)arg1 didWriteValueForDescriptor:(CBDescriptor *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didUpdateValueForDescriptor:(CBDescriptor *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didDiscoverDescriptorsForCharacteristic:(CBCharacteristic *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didUpdateNotificationStateForCharacteristic:(CBCharacteristic *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didWriteValueForCharacteristic:(CBCharacteristic *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didUpdateValueForCharacteristic:(CBCharacteristic *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didDiscoverCharacteristicsForService:(CBService *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didDiscoverIncludedServicesForService:(CBService *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didDiscoverServices:(NSError *)arg2;
- (void)peripheral:(CBPeripheral *)arg1 didReadRSSI:(NSNumber *)arg2 error:(NSError *)arg3;
- (void)peripheralDidUpdateRSSI:(CBPeripheral *)arg1 error:(NSError *)arg2;
- (void)peripheral:(CBPeripheral *)arg1 didModifyServices:(NSArray *)arg2;
- (void)peripheralDidUpdateName:(CBPeripheral *)arg1;
@end

@protocol CGMAlertLimitChangedDelegate <NSObject>
- (void)alertLimitChanged:(NSNumber *)arg1;
@end

@protocol CGMAlertScheduleDaysSelectionChangedDelegate <NSObject>
- (void)alertScheduleDaysSelectionChanged:(NSDictionary *)arg1;
@end

@protocol CGMAlertScheduleNameChangedDelegate <NSObject>
- (void)didChangeAlertScheduleName:(NSString *)arg1;
@end

@protocol CGMEGVErrorStateDelegate
- (void)onHelpButton:(unsigned long long)arg1;
- (void)onErrorButton:(unsigned long long)arg1;
@end

@protocol CGMEventDurationPickerTableViewCellDelegate
- (void)didSelectDurationWithMinutes:(int)arg1;
@end

@protocol CGMEventManagerViewDelegate
- (void)anyEventAdded;
@end

@protocol CGMSubscriberDataSource <NSObject>
- (void)notifySubscriberOfNewCGMDataUpdate:(unsigned long long)arg1;
@end

@protocol CGMWebViewDelegate <NSObject>
- (void)handleWebViewNavigation:(NSURL *)arg1;
- (_Bool)shouldHandleWebNavigation:(NSURL *)arg1;
@end

@protocol CNContactPickerDelegate <NSObject>

@optional
- (void)contactPicker:(CNContactPickerViewController *)arg1 didSelectContactProperties:(NSArray *)arg2;
- (void)contactPicker:(CNContactPickerViewController *)arg1 didSelectContacts:(NSArray *)arg2;
- (void)contactPicker:(CNContactPickerViewController *)arg1 didSelectContactProperty:(CNContactProperty *)arg2;
- (void)contactPicker:(CNContactPickerViewController *)arg1 didSelectContact:(CNContact *)arg2;
- (void)contactPickerDidCancel:(CNContactPickerViewController *)arg1;
@end

@protocol CPTLayerDelegate <CALayerDelegate>
@end

@protocol CPTPlotDataSource <NSObject>
- (unsigned long long)numberOfRecordsForPlot:(CPTPlot *)arg1;

@optional
- (CPTLayer *)dataLabelForPlot:(CPTPlot *)arg1 recordIndex:(unsigned long long)arg2;
- (NSArray *)dataLabelsForPlot:(CPTPlot *)arg1 recordIndexRange:(struct _NSRange)arg2;
- (CPTNumericData *)dataForPlot:(CPTPlot *)arg1 recordIndexRange:(struct _NSRange)arg2;
- (CPTNumericData *)dataForPlot:(CPTPlot *)arg1 field:(unsigned long long)arg2 recordIndexRange:(struct _NSRange)arg3;
- (double)doubleForPlot:(CPTPlot *)arg1 field:(unsigned long long)arg2 recordIndex:(unsigned long long)arg3;
- (double *)doublesForPlot:(CPTPlot *)arg1 field:(unsigned long long)arg2 recordIndexRange:(struct _NSRange)arg3;
- (id)numberForPlot:(CPTPlot *)arg1 field:(unsigned long long)arg2 recordIndex:(unsigned long long)arg3;
- (NSArray *)numbersForPlot:(CPTPlot *)arg1 field:(unsigned long long)arg2 recordIndexRange:(struct _NSRange)arg3;
@end

@protocol CPTPlotDelegate <CPTLayerDelegate>

@optional
- (void)didFinishDrawing:(CPTPlot *)arg1;
- (void)plot:(CPTPlot *)arg1 dataLabelTouchUpAtRecordIndex:(unsigned long long)arg2 withEvent:(UIEvent *)arg3;
- (void)plot:(CPTPlot *)arg1 dataLabelTouchUpAtRecordIndex:(unsigned long long)arg2;
- (void)plot:(CPTPlot *)arg1 dataLabelTouchDownAtRecordIndex:(unsigned long long)arg2 withEvent:(UIEvent *)arg3;
- (void)plot:(CPTPlot *)arg1 dataLabelTouchDownAtRecordIndex:(unsigned long long)arg2;
- (void)plot:(CPTPlot *)arg1 dataLabelWasSelectedAtRecordIndex:(unsigned long long)arg2 withEvent:(UIEvent *)arg3;
- (void)plot:(CPTPlot *)arg1 dataLabelWasSelectedAtRecordIndex:(unsigned long long)arg2;
@end

@protocol CPTPlotSpaceDelegate <NSObject>

@optional
- (_Bool)plotSpace:(CPTPlotSpace *)arg1 shouldHandlePointingDeviceUpEvent:(UIEvent *)arg2 atPoint:(struct CGPoint)arg3;
- (_Bool)plotSpace:(CPTPlotSpace *)arg1 shouldHandlePointingDeviceCancelledEvent:(UIEvent *)arg2;
- (_Bool)plotSpace:(CPTPlotSpace *)arg1 shouldHandlePointingDeviceDraggedEvent:(UIEvent *)arg2 atPoint:(struct CGPoint)arg3;
- (_Bool)plotSpace:(CPTPlotSpace *)arg1 shouldHandlePointingDeviceDownEvent:(UIEvent *)arg2 atPoint:(struct CGPoint)arg3;
- (void)plotSpace:(CPTPlotSpace *)arg1 didChangePlotRangeForCoordinate:(long long)arg2;
- (CPTPlotRange *)plotSpace:(CPTPlotSpace *)arg1 willChangePlotRangeTo:(CPTPlotRange *)arg2 forCoordinate:(long long)arg3;
- (struct CGPoint)plotSpace:(CPTPlotSpace *)arg1 willDisplaceBy:(struct CGPoint)arg2;
- (_Bool)plotSpace:(CPTPlotSpace *)arg1 shouldScaleBy:(double)arg2 aboutPoint:(struct CGPoint)arg3;
@end

@protocol CPTScatterPlotDataSource <CPTPlotDataSource>

@optional
- (CPTPlotSymbol *)symbolForScatterPlot:(CPTScatterPlot *)arg1 recordIndex:(unsigned long long)arg2;
- (NSArray *)symbolsForScatterPlot:(CPTScatterPlot *)arg1 recordIndexRange:(struct _NSRange)arg2;
@end

@protocol CPTScatterPlotDelegate <CPTPlotDelegate>

@optional
- (void)scatterPlot:(CPTScatterPlot *)arg1 prepareForDrawingPlotLine:(const struct CGPath *)arg2 inContext:(struct CGContext *)arg3;
- (void)scatterPlot:(CPTScatterPlot *)arg1 dataLineTouchUpWithEvent:(UIEvent *)arg2;
- (void)scatterPlotDataLineTouchUp:(CPTScatterPlot *)arg1;
- (void)scatterPlot:(CPTScatterPlot *)arg1 dataLineTouchDownWithEvent:(UIEvent *)arg2;
- (void)scatterPlotDataLineTouchDown:(CPTScatterPlot *)arg1;
- (void)scatterPlot:(CPTScatterPlot *)arg1 dataLineWasSelectedWithEvent:(UIEvent *)arg2;
- (void)scatterPlotDataLineWasSelected:(CPTScatterPlot *)arg1;
- (void)scatterPlot:(CPTScatterPlot *)arg1 plotSymbolTouchUpAtRecordIndex:(unsigned long long)arg2 withEvent:(UIEvent *)arg3;
- (void)scatterPlot:(CPTScatterPlot *)arg1 plotSymbolTouchUpAtRecordIndex:(unsigned long long)arg2;
- (void)scatterPlot:(CPTScatterPlot *)arg1 plotSymbolTouchDownAtRecordIndex:(unsigned long long)arg2 withEvent:(UIEvent *)arg3;
- (void)scatterPlot:(CPTScatterPlot *)arg1 plotSymbolTouchDownAtRecordIndex:(unsigned long long)arg2;
- (void)scatterPlot:(CPTScatterPlot *)arg1 plotSymbolWasSelectedAtRecordIndex:(unsigned long long)arg2 withEvent:(UIEvent *)arg3;
- (void)scatterPlot:(CPTScatterPlot *)arg1 plotSymbolWasSelectedAtRecordIndex:(unsigned long long)arg2;
@end

@protocol DDLogFormatter <NSObject>
- (NSString *)formatLogMessage:(DDLogMessage *)arg1;

@optional
- (void)willRemoveFromLogger:(id <DDLogger>)arg1;
- (void)didAddToLogger:(id <DDLogger>)arg1 inQueue:(NSObject<OS_dispatch_queue> *)arg2;
- (void)didAddToLogger:(id <DDLogger>)arg1;
@end

@protocol DDLogger <NSObject>
@property(retain, nonatomic) id <DDLogFormatter> logFormatter;
- (void)logMessage:(DDLogMessage *)arg1;

@optional
@property(readonly, copy, nonatomic) NSString *loggerName;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *loggerQueue;
- (void)flush;
- (void)willRemoveLogger;
- (void)didAddLoggerInQueue:(NSObject<OS_dispatch_queue> *)arg1;
- (void)didAddLogger;
@end

@protocol DXCMBaseViewControllerDelegate
- (void)baseViewControllerDidFinish:(DXCMBaseViewController *)arg1;
@end

@protocol DXCMEventHistoryDelegate
- (void)eventHistoryController:(DXCMEventHistoryTableViewController *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2 forEvent:(id <DXCMEventDisplayProtocol>)arg3;
- (void)deleteEvent:(id <DXCMEventDisplayProtocol>)arg1;

@optional
- (void)launchClarityAppFromEvents;
- (unsigned long long)supportedInterfaceOrientationMasks;
- (NSArray *)fetchAllEvents;
@end

@protocol DXCMEventInfo <NSObject>
@property(readonly, nonatomic) NSString *calloutDetails;
@property(readonly, nonatomic) NSString *calloutTitle;
@property(nonatomic) int eventValue;
@property(readonly, nonatomic) NSDate *eventEndTime;
@property(nonatomic) double eventDuration;
@property(retain, nonatomic) NSDate *eventStartTime;
@property(nonatomic) unsigned long long eventSubkind;
@property(nonatomic) unsigned long long eventKind;
- (NSString *)summaryDetailForEvents:(NSArray *)arg1;
- (NSString *)summaryTitleForEvents:(NSArray *)arg1;
@end

@protocol DXCMLegalAgreementsProtocol <NSObject>

@optional
- (void)serverAcceptanceStatusReceived:(unsigned long long)arg1;
- (void)applicationPresentLegalURL:(NSURL *)arg1;
@end

@protocol DXCMLegalAgreementsVCDelegate <NSObject>
- (void)userAgreed;
@end

@protocol DXCMNotificationDelegate <NSObject>

@optional
- (void)processNotificationAppWasAlreadyInForeground:(UNNotificationRequest *)arg1 alertType:(unsigned long long)arg2;
- (void)processNotificationAcknowledgementFromSwipe:(UNNotificationRequest *)arg1 alertType:(unsigned long long)arg2;
- (void)processNotificationAppCameToForeground:(unsigned long long)arg1;
@end

@protocol DXCMTransmitterDelegate <NSObject>

@optional
- (void)dxcmTransmitter:(DXCMTransmitter *)arg1 transmitterDidPair:(NSString *)arg2;
- (void)dxcmTransmitter:(DXCMTransmitter *)arg1 transmitterDidStopSession:(NSString *)arg2 withType:(long long)arg3;
- (void)dxcmTransmitter:(DXCMTransmitter *)arg1 transmitterDidStartSession:(NSString *)arg2 withType:(long long)arg3;
- (void)dxcmTransmitter:(DXCMTransmitter *)arg1 transmitterDidDisconnect:(NSString *)arg2;
- (void)dxcmTransmitter:(DXCMTransmitter *)arg1 transmitterDidConnect:(NSString *)arg2;
@end

@protocol INUIAddVoiceShortcutViewControllerDelegate <NSObject>
- (void)addVoiceShortcutViewControllerDidCancel:(INUIAddVoiceShortcutViewController *)arg1;
- (void)addVoiceShortcutViewController:(INUIAddVoiceShortcutViewController *)arg1 didFinishWithVoiceShortcut:(INVoiceShortcut *)arg2 error:(NSError *)arg3;
@end

@protocol INUIEditVoiceShortcutViewControllerDelegate <NSObject>
- (void)editVoiceShortcutViewControllerDidCancel:(INUIEditVoiceShortcutViewController *)arg1;
- (void)editVoiceShortcutViewController:(INUIEditVoiceShortcutViewController *)arg1 didDeleteVoiceShortcutWithIdentifier:(NSUUID *)arg2;
- (void)editVoiceShortcutViewController:(INUIEditVoiceShortcutViewController *)arg1 didUpdateVoiceShortcut:(INVoiceShortcut *)arg2 error:(NSError *)arg3;
@end

@protocol KSCrashReportFilter <NSObject>
- (void)filterReports:(NSArray *)arg1 onCompletion:(void (^)(NSArray *, _Bool, NSError *))arg2;
@end

@protocol MFMailComposeViewControllerDelegate <NSObject>

@optional
- (void)mailComposeController:(MFMailComposeViewController *)arg1 didFinishWithResult:(long long)arg2 error:(NSError *)arg3;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSObject
@property(nonatomic, readonly) NSString *description;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
@property(nonatomic, readonly) Class superclass;
@property(nonatomic, readonly) long long hash;
- (_Bool)isEqual:(id)arg1;

@optional
@property(nonatomic, readonly) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol SetupWizardBaseViewControllerDelegate <NSObject>
@property(nonatomic, readonly) UIView *view;

@optional
- (void)addLayoutConstraintsWithLabel:(UILabel *)arg1;
- (void)removePlayVideoText;
- (NSString *)localizedPlayVideoText;
- (void)setupVideoImageButton:(UIButton *)arg1;
- (void)setupVideoImageView:(UIImageView *)arg1;
- (void)addContentWithCustomView:(UIView *)arg1 constraints:(NSArray *)arg2;
- (void)addContentWithDescription:(NSAttributedString *)arg1 imageView:(UIView *)arg2 caption:(NSAttributedString *)arg3 accessibilityIdentifier:(NSArray *)arg4;
@end

@protocol UIAccessibilityIdentification <NSObject>
@property(copy, nonatomic) NSString *accessibilityIdentifier;
@end

@protocol UIAdaptivePresentationControllerDelegate <NSObject>

@optional
- (void)presentationControllerDidAttemptToDismiss:(UIPresentationController *)arg1;
- (void)presentationControllerDidDismiss:(UIPresentationController *)arg1;
- (void)presentationControllerWillDismiss:(UIPresentationController *)arg1;
- (_Bool)presentationControllerShouldDismiss:(UIPresentationController *)arg1;
- (void)presentationController:(UIPresentationController *)arg1 willPresentWithAdaptiveStyle:(long long)arg2 transitionCoordinator:(id <UIViewControllerTransitionCoordinator>)arg3;
- (UIViewController *)presentationController:(UIPresentationController *)arg1 viewControllerForAdaptivePresentationStyle:(long long)arg2;
- (long long)adaptivePresentationStyleForPresentationController:(UIPresentationController *)arg1 traitCollection:(UITraitCollection *)arg2;
- (long long)adaptivePresentationStyleForPresentationController:(UIPresentationController *)arg1;
@end

@protocol UIApplicationDelegate <NSObject>

@optional
@property(retain, nonatomic) UIWindow *window;
- (void)application:(UIApplication *)arg1 didDiscardSceneSessions:(NSSet *)arg2;
- (UISceneConfiguration *)application:(UIApplication *)arg1 configurationForConnectingSceneSession:(UISceneSession *)arg2 options:(UISceneConnectionOptions *)arg3;
- (void)application:(UIApplication *)arg1 userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata *)arg2;
- (void)application:(UIApplication *)arg1 didUpdateUserActivity:(NSUserActivity *)arg2;
- (void)application:(UIApplication *)arg1 didFailToContinueUserActivityWithType:(NSString *)arg2 error:(NSError *)arg3;
- (_Bool)application:(UIApplication *)arg1 continueUserActivity:(NSUserActivity *)arg2 restorationHandler:(void (^)(NSArray *))arg3;
- (_Bool)application:(UIApplication *)arg1 willContinueUserActivityWithType:(NSString *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldRestoreApplicationState:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldSaveApplicationState:(NSCoder *)arg2;
- (void)application:(UIApplication *)arg1 didDecodeRestorableStateWithCoder:(NSCoder *)arg2;
- (void)application:(UIApplication *)arg1 willEncodeRestorableStateWithCoder:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldRestoreSecureApplicationState:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldSaveSecureApplicationState:(NSCoder *)arg2;
- (UIViewController *)application:(UIApplication *)arg1 viewControllerWithRestorationIdentifierPath:(NSArray *)arg2 coder:(NSCoder *)arg3;
- (_Bool)application:(UIApplication *)arg1 shouldAllowExtensionPointIdentifier:(NSString *)arg2;
- (unsigned long long)application:(UIApplication *)arg1 supportedInterfaceOrientationsForWindow:(UIWindow *)arg2;
- (void)applicationProtectedDataDidBecomeAvailable:(UIApplication *)arg1;
- (void)applicationProtectedDataWillBecomeUnavailable:(UIApplication *)arg1;
- (void)applicationWillEnterForeground:(UIApplication *)arg1;
- (void)applicationDidEnterBackground:(UIApplication *)arg1;
- (void)application:(UIApplication *)arg1 handleIntent:(INIntent *)arg2 completionHandler:(void (^)(INIntentResponse *))arg3;
- (id)application:(UIApplication *)arg1 handlerForIntent:(INIntent *)arg2;
- (void)applicationShouldRequestHealthAuthorization:(UIApplication *)arg1;
- (void)application:(UIApplication *)arg1 handleWatchKitExtensionRequest:(NSDictionary *)arg2 reply:(void (^)(NSDictionary *))arg3;
- (void)application:(UIApplication *)arg1 handleEventsForBackgroundURLSession:(NSString *)arg2 completionHandler:(void (^)(void))arg3;
- (void)application:(UIApplication *)arg1 performActionForShortcutItem:(UIApplicationShortcutItem *)arg2 completionHandler:(void (^)(_Bool))arg3;
- (void)application:(UIApplication *)arg1 performFetchWithCompletionHandler:(void (^)(unsigned long long))arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2 fetchCompletionHandler:(void (^)(unsigned long long))arg3;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 didReceiveLocalNotification:(UILocalNotification *)arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2;
- (void)application:(UIApplication *)arg1 didFailToRegisterForRemoteNotificationsWithError:(NSError *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterUserNotificationSettings:(UIUserNotificationSettings *)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarOrientation:(long long)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarOrientation:(long long)arg2 duration:(double)arg3;
- (void)applicationSignificantTimeChange:(UIApplication *)arg1;
- (void)applicationWillTerminate:(UIApplication *)arg1;
- (void)applicationDidReceiveMemoryWarning:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 options:(NSDictionary *)arg3;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 sourceApplication:(NSString *)arg3 annotation:(id)arg4;
- (_Bool)application:(UIApplication *)arg1 handleOpenURL:(NSURL *)arg2;
- (void)applicationWillResignActive:(UIApplication *)arg1;
- (void)applicationDidBecomeActive:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 didFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (_Bool)application:(UIApplication *)arg1 willFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (void)applicationDidFinishLaunching:(UIApplication *)arg1;
@end

@protocol UIGestureRecognizerDelegate <NSObject>

@optional
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveEvent:(UIEvent *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceivePress:(UIPress *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
@end

@protocol UIImagePickerControllerDelegate <NSObject>

@optional
- (void)imagePickerControllerDidCancel:(UIImagePickerController *)arg1;
- (void)imagePickerController:(UIImagePickerController *)arg1 didFinishPickingMediaWithInfo:(NSDictionary *)arg2;
- (void)imagePickerController:(UIImagePickerController *)arg1 didFinishPickingImage:(UIImage *)arg2 editingInfo:(NSDictionary *)arg3;
@end

@protocol UINavigationControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(UIViewController *)arg3 toViewController:(UIViewController *)arg4;
- (id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)arg1;
- (void)navigationController:(UINavigationController *)arg1 didShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
- (void)navigationController:(UINavigationController *)arg1 willShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
@end

@protocol UIPickerViewAccessibilityDelegate <UIPickerViewDelegate>

@optional
- (NSArray *)pickerView:(UIPickerView *)arg1 accessibilityAttributedUserInputLabelsForComponent:(long long)arg2;
- (NSAttributedString *)pickerView:(UIPickerView *)arg1 accessibilityAttributedHintForComponent:(long long)arg2;
- (NSAttributedString *)pickerView:(UIPickerView *)arg1 accessibilityAttributedLabelForComponent:(long long)arg2;
- (NSArray *)pickerView:(UIPickerView *)arg1 accessibilityUserInputLabelsForComponent:(long long)arg2;
- (NSString *)pickerView:(UIPickerView *)arg1 accessibilityHintForComponent:(long long)arg2;
- (NSString *)pickerView:(UIPickerView *)arg1 accessibilityLabelForComponent:(long long)arg2;
@end

@protocol UIPickerViewDataSource <NSObject>
- (long long)pickerView:(UIPickerView *)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(UIPickerView *)arg1;
@end

@protocol UIPickerViewDelegate <NSObject>

@optional
- (void)pickerView:(UIPickerView *)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (UIView *)pickerView:(UIPickerView *)arg1 viewForRow:(long long)arg2 forComponent:(long long)arg3 reusingView:(UIView *)arg4;
- (NSAttributedString *)pickerView:(UIPickerView *)arg1 attributedTitleForRow:(long long)arg2 forComponent:(long long)arg3;
- (NSString *)pickerView:(UIPickerView *)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (double)pickerView:(UIPickerView *)arg1 rowHeightForComponent:(long long)arg2;
- (double)pickerView:(UIPickerView *)arg1 widthForComponent:(long long)arg2;
@end

@protocol UIPopoverPresentationControllerDelegate <UIAdaptivePresentationControllerDelegate>

@optional
- (void)popoverPresentationController:(UIPopoverPresentationController *)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverPresentationControllerDidDismissPopover:(UIPopoverPresentationController *)arg1;
- (_Bool)popoverPresentationControllerShouldDismissPopover:(UIPopoverPresentationController *)arg1;
- (void)prepareForPopoverPresentation:(UIPopoverPresentationController *)arg1;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidChangeAdjustedContentInset:(UIScrollView *)arg1;
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (void)tableView:(UITableView *)arg1 willEndContextMenuInteractionWithConfiguration:(UIContextMenuConfiguration *)arg2 animator:(id <UIContextMenuInteractionAnimating>)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayContextMenuWithConfiguration:(UIContextMenuConfiguration *)arg2 animator:(id <UIContextMenuInteractionAnimating>)arg3;
- (void)tableView:(UITableView *)arg1 willPerformPreviewActionForMenuWithConfiguration:(UIContextMenuConfiguration *)arg2 animator:(id <UIContextMenuInteractionCommitAnimating>)arg3;
- (UITargetedPreview *)tableView:(UITableView *)arg1 previewForDismissingContextMenuWithConfiguration:(UIContextMenuConfiguration *)arg2;
- (UITargetedPreview *)tableView:(UITableView *)arg1 previewForHighlightingContextMenuWithConfiguration:(UIContextMenuConfiguration *)arg2;
- (UIContextMenuConfiguration *)tableView:(UITableView *)arg1 contextMenuConfigurationForRowAtIndexPath:(NSIndexPath *)arg2 point:(struct CGPoint)arg3;
- (void)tableViewDidEndMultipleSelectionInteraction:(UITableView *)arg1;
- (void)tableView:(UITableView *)arg1 didBeginMultipleSelectionInteractionAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldBeginMultipleSelectionInteractionAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldSpringLoadRowAtIndexPath:(NSIndexPath *)arg2 withContext:(id <UISpringLoadedInteractionContext>)arg3;
- (NSIndexPath *)indexPathForPreferredFocusedViewInTableView:(UITableView *)arg1;
- (void)tableView:(UITableView *)arg1 didUpdateFocusInContext:(UITableViewFocusUpdateContext *)arg2 withAnimationCoordinator:(UIFocusAnimationCoordinator *)arg3;
- (_Bool)tableView:(UITableView *)arg1 shouldUpdateFocusInContext:(UITableViewFocusUpdateContext *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canFocusRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (UISwipeActionsConfiguration *)tableView:(UITableView *)arg1 trailingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath *)arg2;
- (UISwipeActionsConfiguration *)tableView:(UITableView *)arg1 leadingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (void)textFieldDidChangeSelection:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1 reason:(long long)arg2;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@protocol UITextViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithTextAttachment:(NSTextAttachment *)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithURL:(NSURL *)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithTextAttachment:(NSTextAttachment *)arg2 inRange:(struct _NSRange)arg3 interaction:(long long)arg4;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithURL:(NSURL *)arg2 inRange:(struct _NSRange)arg3 interaction:(long long)arg4;
- (void)textViewDidChangeSelection:(UITextView *)arg1;
- (void)textViewDidChange:(UITextView *)arg1;
- (_Bool)textView:(UITextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)textViewDidEndEditing:(UITextView *)arg1;
- (void)textViewDidBeginEditing:(UITextView *)arg1;
- (_Bool)textViewShouldEndEditing:(UITextView *)arg1;
- (_Bool)textViewShouldBeginEditing:(UITextView *)arg1;
@end

@protocol UNUserNotificationCenterDelegate <NSObject>

@optional
- (void)userNotificationCenter:(UNUserNotificationCenter *)arg1 openSettingsForNotification:(UNNotification *)arg2;
- (void)userNotificationCenter:(UNUserNotificationCenter *)arg1 didReceiveNotificationResponse:(UNNotificationResponse *)arg2 withCompletionHandler:(void (^)(void))arg3;
- (void)userNotificationCenter:(UNUserNotificationCenter *)arg1 willPresentNotification:(UNNotification *)arg2 withCompletionHandler:(void (^)(unsigned long long))arg3;
@end

@protocol WCSessionDelegate <NSObject>
- (void)sessionDidDeactivate:(WCSession *)arg1;
- (void)sessionDidBecomeInactive:(WCSession *)arg1;
- (void)session:(WCSession *)arg1 activationDidCompleteWithState:(long long)arg2 error:(NSError *)arg3;

@optional
- (void)session:(WCSession *)arg1 didReceiveFile:(WCSessionFile *)arg2;
- (void)session:(WCSession *)arg1 didFinishFileTransfer:(WCSessionFileTransfer *)arg2 error:(NSError *)arg3;
- (void)session:(WCSession *)arg1 didReceiveUserInfo:(NSDictionary *)arg2;
- (void)session:(WCSession *)arg1 didFinishUserInfoTransfer:(WCSessionUserInfoTransfer *)arg2 error:(NSError *)arg3;
- (void)session:(WCSession *)arg1 didReceiveApplicationContext:(NSDictionary *)arg2;
- (void)session:(WCSession *)arg1 didReceiveMessageData:(NSData *)arg2 replyHandler:(void (^)(NSData *))arg3;
- (void)session:(WCSession *)arg1 didReceiveMessageData:(NSData *)arg2;
- (void)session:(WCSession *)arg1 didReceiveMessage:(NSDictionary *)arg2 replyHandler:(void (^)(NSDictionary *))arg3;
- (void)session:(WCSession *)arg1 didReceiveMessage:(NSDictionary *)arg2;
- (void)sessionReachabilityDidChange:(WCSession *)arg1;
- (void)sessionCompanionAppInstalledDidChange:(WCSession *)arg1;
- (void)sessionWatchStateDidChange:(WCSession *)arg1;
@end

@protocol WKNavigationDelegate <NSObject>

@optional
- (void)webView:(WKWebView *)arg1 navigationResponse:(WKNavigationResponse *)arg2 didBecomeDownload:(WKDownload *)arg3;
- (void)webView:(WKWebView *)arg1 navigationAction:(WKNavigationAction *)arg2 didBecomeDownload:(WKDownload *)arg3;
- (void)webView:(WKWebView *)arg1 authenticationChallenge:(NSURLAuthenticationChallenge *)arg2 shouldAllowDeprecatedTLS:(void (^)(_Bool))arg3;
- (void)webViewWebContentProcessDidTerminate:(WKWebView *)arg1;
- (void)webView:(WKWebView *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)webView:(WKWebView *)arg1 didFailNavigation:(WKNavigation *)arg2 withError:(NSError *)arg3;
- (void)webView:(WKWebView *)arg1 didFinishNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didCommitNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didFailProvisionalNavigation:(WKNavigation *)arg2 withError:(NSError *)arg3;
- (void)webView:(WKWebView *)arg1 didReceiveServerRedirectForProvisionalNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didStartProvisionalNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 decidePolicyForNavigationResponse:(WKNavigationResponse *)arg2 decisionHandler:(void (^)(long long))arg3;
- (void)webView:(WKWebView *)arg1 decidePolicyForNavigationAction:(WKNavigationAction *)arg2 preferences:(WKWebpagePreferences *)arg3 decisionHandler:(void (^)(long long, WKWebpagePreferences *))arg4;
- (void)webView:(WKWebView *)arg1 decidePolicyForNavigationAction:(WKNavigationAction *)arg2 decisionHandler:(void (^)(long long))arg3;
@end

@protocol _TtP16DXCMUAMFramework28UAMWebViewControllerDelegate_

@optional
- (unsigned long long)supportedInterfaceOrientationMask;
- (void)errorButtonPressed;
@end

@protocol _TtP3CGM26DPPublicDataSourceProtocol_
- (NSArray *)getAlertStatusRecordsFrom:(int)arg1 to:(int)arg2;
- (NSArray *)getWorkoutEventRecordsFrom:(int)arg1 to:(int)arg2;
- (NSArray *)getNutritionRecordsFrom:(int)arg1 to:(int)arg2;
- (_TtC3CGM10DeviceInfo *)getDeviceInfoRecordFrom:(int)arg1 to:(int)arg2;
- (_TtC3CGM21AlertScheduleSnapshot *)getAlertScheduleInfo;
- (NSArray *)getUserEventRecordsFrom:(int)arg1 to:(int)arg2;
- (NSArray *)getSensorSessionRecordsFrom:(int)arg1 to:(int)arg2;
- (NSArray *)getMeterDataRecordsFrom:(int)arg1 to:(int)arg2;
- (NSArray *)getGlucoseRecordsFrom:(int)arg1 to:(int)arg2;
@end

@protocol _TtP3CGM27CGMTimeValueChangedDelegate_
- (void)timeValueChanged:(NSNumber *)arg1;
@end

@protocol _TtP3CGM28CGMAlertSettingsTimeDelegate_
- (void)timeChanged:(NSNumber *)arg1;
@end

@protocol _TtP3CGM34CGMAlertSettingsAlertLimitDelegate_
- (void)alertLimitChanged:(NSNumber *)arg1;
@end

@interface UAMController : NSObject
{
    // Error parsing type: , name: uamManager
}

+ (_Bool)isInvalidGrantError:(id)arg1;
+ (long long)getDataConsentStatus:(id)arg1;
+ (id)getAccountId:(id)arg1;
+ (id)getConfiguration;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)resetManager;
- (void)resetUAMValues;
- (void)setUAMValuesWithAccessToken:(id)arg1 parameters:(id)arg2;
- (void)renewAccessToken:(CDUnknownBlockType)arg1;
- (void)setLinkWithAuthorizeUrl:(id)arg1 withRefreshTokenUrl:(id)arg2;
- (id)init;
@property(nonatomic, retain) UAMManager *uamManager; // @synthesize uamManager;

@end

@interface AlertStateHistoryEntry : CGMBaseDataObject
{
    // Error parsing type: , name: record_id
    // Error parsing type: , name: alert_type
    // Error parsing type: , name: name
    // Error parsing type: , name: state
    // Error parsing type: , name: alert_id
    // Error parsing type: , name: recorded_system_time_sec
}

- (void).cxx_destruct;
- (id)init;
- (id)initWithDictionary:(id)arg1;
- (id)initWithAlertType:(unsigned long long)arg1 state:(unsigned long long)arg2 eventId:(id)arg3;
@property(nonatomic) double recorded_system_time_sec; // @synthesize recorded_system_time_sec;
@property(nonatomic, copy) NSString *alert_id;
@property(nonatomic) unsigned long long state; // @synthesize state;
@property(nonatomic, copy) NSString *name;
@property(nonatomic) unsigned long long alert_type; // @synthesize alert_type;
@property(nonatomic) unsigned int record_id; // @synthesize record_id;
@property(nonatomic, copy) NSString *recorded_time;
@property(nonatomic) double recordedTimeSec;
@property(nonatomic, copy) NSUUID *alertId;
@property(nonatomic) unsigned long long alertState;
@property(nonatomic, copy) NSString *alertName;
@property(nonatomic) unsigned int recordId;
@property(nonatomic) unsigned long long alertType;

@end

@interface _TtC3CGM32LocatingSensorCodeViewController : SetupWizardBaseViewController
{
    // Error parsing type: , name: $__lazy_storage_$_helper
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)close;
- (void)viewDidLoad;

@end

@interface _TtC3CGM24LocatingSensorCodeHelper : StoryboardWizardHelper
{
    // Error parsing type: , name: enterCodeButton
    // Error parsing type: , name: noCodeButton
}

- (void).cxx_destruct;
- (id)initWithDelegate:(id)arg1;
- (void)displaySensorCodeOptionsScreen;
@property(nonatomic, readonly) DXCMBlockButton *noCodeButton; // @synthesize noCodeButton;
@property(nonatomic, readonly) DXCMBlockButton *enterCodeButton; // @synthesize enterCodeButton;

@end

@interface AlertHistoryDao : CGMBaseDao
{
}

- (id)init;
- (id)initWithDatabase:(id)arg1 daoMgr:(id)arg2;
- (void)resetDataModel;
- (void)setupDataModelIfNeeded;
- (unsigned int)getMaxRecordId;
- (unsigned int)getMinRecordId;
- (id)fetchAlertHistoryDictionaryAfterSystemTime:(double)arg1;
- (id)getEventIdForAlertType:(unsigned long long)arg1;
- (id)getRecordsBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (void)insert:(id)arg1;

@end

@interface _TtC3CGM34CGMAlertSettingsTimeViewController : DXCMBaseViewController
{
    // Error parsing type: , name: navigationTitle
    // Error parsing type: , name: userAlert
    // Error parsing type: , name: timeDelegate
    // Error parsing type: , name: selectedTimeValue
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)willMoveToParentViewController:(id)arg1;
- (void)timeValueChanged:(id)arg1;
- (void)viewDidLoad;
@property(nonatomic) __weak id <_TtP3CGM28CGMAlertSettingsTimeDelegate_> timeDelegate; // @synthesize timeDelegate;
@property(nonatomic) __weak CGMUserAlert *userAlert; // @synthesize userAlert;
@property(nonatomic, copy) NSString *navigationTitle;

@end

@interface _TtC3CGM25CGMEditTimeViewController : DXCMBaseViewController <UIPickerViewDelegate, UIPickerViewDataSource, UITableViewDelegate, UITableViewDataSource>
{
    // Error parsing type: , name: timePicker
    // Error parsing type: , name: tableView
    // Error parsing type: , name: filteredPickerData
    // Error parsing type: , name: hourComponent
    // Error parsing type: , name: minuteComponent
    // Error parsing type: , name: defaultTimeValue
    // Error parsing type: , name: timeDescription
    // Error parsing type: , name: dataChangedDelegate
    // Error parsing type: , name: minTime
    // Error parsing type: , name: maxTime
    // Error parsing type: , name: stepMinutes
    // Error parsing type: , name: forbiddenTimes
    // Error parsing type: , name: hours
    // Error parsing type: , name: minutes
    // Error parsing type: , name: previousSelectedPickerHoursRow
    // Error parsing type: , name: previousSelectedPickerMinutesRow
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)movePickerToNextValidMinuteValue:(long long)arg1 selectedHourRow:(long long)arg2;
- (_Bool)forbiddenTimeSelected:(long long)arg1;
- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (double)pickerView:(id)arg1 widthForComponent:(long long)arg2;
- (id)pickerView:(id)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(id)arg1;
- (void)setPickerValueWithAnimation:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, copy) NSArray *forbiddenTimes;
@property(nonatomic) long long stepMinutes; // @synthesize stepMinutes;
@property(nonatomic) long long maxTime; // @synthesize maxTime;
@property(nonatomic) long long minTime; // @synthesize minTime;
@property(nonatomic) __weak id <_TtP3CGM27CGMTimeValueChangedDelegate_> dataChangedDelegate; // @synthesize dataChangedDelegate;
@property(nonatomic, copy) NSString *timeDescription;
@property(nonatomic, retain) NSNumber *defaultTimeValue; // @synthesize defaultTimeValue;
@property(nonatomic, readonly) long long minuteComponent; // @synthesize minuteComponent;
@property(nonatomic, readonly) long long hourComponent; // @synthesize hourComponent;
@property(nonatomic) __weak UITableView *tableView; // @synthesize tableView;
@property(nonatomic) __weak UIPickerView *timePicker; // @synthesize timePicker;

@end

@interface _TtC3CGM14DXCMHelpButton : UIButton
{
}

- (void)showBorder:(_Bool)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

@end

@interface _TtC3CGM29UAMReAuthNavigationController : DXCMBaseNavigationController
{
    // Error parsing type: , name: nonEnglishSupport
}

- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithRootViewController:(id)arg1;
- (id)initWithNavigationBarClass:(Class)arg1 toolbarClass:(Class)arg2;
@property(nonatomic) _Bool nonEnglishSupport; // @synthesize nonEnglishSupport;

@end

@interface _TtC3CGM18CGMDataPostManager : NSObject <CGMSubscriberDataSource>
{
    // Error parsing type: , name: backgroundTask
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (double)backgroundTimeRemaining;
- (void)endBackgroundTask;
- (void)beginBackgroundTask;
- (void)notifySubscriberOfNewCGMDataUpdate:(unsigned long long)arg1;
- (id)init;

@end

@interface _TtC3CGM16DXCMReachability : NSObject
{
    // Error parsing type: , name: isReachable
    // Error parsing type: , name: reach
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)start;
- (id)init;
@property(nonatomic) _Bool isReachable; // @synthesize isReachable;

@end

@interface _TtC3CGM18DPAlertEventRecord : DPBaseObject
{
    // Error parsing type: , name: RecordVersion
    // Error parsing type: , name: Timestamp
    // Error parsing type: , name: AlertId
    // Error parsing type: , name: AlertName
    // Error parsing type: , name: AlertState
    // Error parsing type: , name: RecordedTime
}

+ (id)convertAlertStateIntoString:(unsigned long long)arg1;
- (void).cxx_destruct;
- (id)init;
- (id)initWithBase64String:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithDictionary:(id)arg1;
@property(nonatomic, copy) NSString *RecordedTime;
@property(nonatomic, copy) NSString *AlertState;
@property(nonatomic, copy) NSString *AlertName;
@property(nonatomic, copy) NSString *AlertId;
@property(nonatomic, copy) NSString *Timestamp;
@property(nonatomic, readonly) NSString *RecordVersion;

@end

@interface _TtC3CGM27SensorCodePostSetupWizardVC : SetupWizardBaseViewController
{
    // Error parsing type: , name: $__lazy_storage_$_helper
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface _TtC3CGM31SensorCodePostSetupWizardHelper : StoryboardWizardHelper
{
    // Error parsing type: , name: enterCodeButton
    // Error parsing type: , name: noCodeButton
    // Error parsing type: , name: iUnderstandButton
}

- (void).cxx_destruct;
- (id)initWithDelegate:(id)arg1;
- (void)displaySensorCodePostSetupWizardScreen:(_Bool)arg1;
@property(nonatomic, readonly) DXCMBlockButton *iUnderstandButton; // @synthesize iUnderstandButton;
@property(nonatomic, readonly) DXCMBlockButton *noCodeButton; // @synthesize noCodeButton;
@property(nonatomic, readonly) DXCMBlockButton *enterCodeButton; // @synthesize enterCodeButton;

@end

@interface _TtC3CGM24SensorCodeViewController : SetupWizardBaseViewController
{
    // Error parsing type: , name: customView
    // Error parsing type: , name: scanCodeButton
    // Error parsing type: , name: enterManuallyButton
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;

@end

@interface _TtC3CGM15QualtricsHelper : NSObject
{
}

+ (void)initQualtricsWithInterceptId:(id)arg1 projectId:(id)arg2 brandId:(id)arg3;
- (id)init;

@end

@interface _TtC3CGM32TreatmentDecisionsViewController : SetupWizardBaseViewController
{
    // Error parsing type: , name: $__lazy_storage_$_helper
    // Error parsing type: , name: index
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)videoImageTappedWithRecognizer:(id)arg1;
- (void)moviePlaybackDidFinish;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)next;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic) long long index; // @synthesize index;
@property(nonatomic, retain) _TtC3CGM30TreatmentDecisionsWizardHelper *helper;

@end

@interface _TtC3CGM30TreatmentDecisionsWizardHelper : StoryboardWizardHelper
{
    // Error parsing type: , name: iUnderstand
    // Error parsing type: , name: fullSafety
    // Error parsing type: , name: nextButton
}

- (void).cxx_destruct;
- (id)initWithDelegate:(id)arg1;
- (id)bottomButtonForTreatmentDecisionsScreen:(long long)arg1;
- (id)topButtonForTreatmentDecisionsScreen:(long long)arg1;
- (id)getVideoScreenText;
- (id)getDecisionInfoScreenText;
- (void)displayTreatmentDecisionsScreenWithIndex:(long long)arg1 videoImageView:(id)arg2;
@property(nonatomic, readonly) DXCMBlockButton *nextButton; // @synthesize nextButton;
@property(nonatomic, readonly) DXCMBlockButton *fullSafety; // @synthesize fullSafety;
@property(nonatomic, readonly) DXCMBlockButton *iUnderstand; // @synthesize iUnderstand;

@end

@interface StoryboardWizardHelper : NSObject
{
    // Error parsing type: , name: delegate
    // Error parsing type: , name: defaultBulletIndentation
}

- (void).cxx_destruct;
- (id)init;
- (void)setupVideoImageButton:(id)arg1;
- (void)setupVideoImageView:(id)arg1;
- (void)removePlayVideoText;
- (id)localizedPlayVideoText;
- (id)getItalicDefaultAttributedString:(id)arg1;
- (id)getDefaultAttributedString:(id)arg1;
- (void)setupWizardStoryboard:(id)arg1 constraints:(id)arg2;
- (void)setupWizardStoryboard:(id)arg1 imageView:(id)arg2 caption:(id)arg3 accessibilityIdentifier:(id)arg4;
- (id)initWithDelegate:(id)arg1;
@property(nonatomic, readonly) double defaultBulletIndentation; // @synthesize defaultBulletIndentation;
@property(nonatomic) __weak id <SetupWizardBaseViewControllerDelegate> delegate; // @synthesize delegate;

@end

@interface _TtC3CGM21DPAlertScheduleRecord : DPBaseRecord
{
    // Error parsing type: , name: RecordVersion
    // Error parsing type: , name: AlertScheduleList
    // Error parsing type: , name: RecordedTime
}

- (void).cxx_destruct;
- (id)init;
- (id)initWithBase64String:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)dictionary;
@property(nonatomic, copy) NSString *RecordedTime;
@property(nonatomic, copy) NSArray *AlertScheduleList;
@property(nonatomic, readonly) NSString *RecordVersion;

@end

@interface _TtC3CGM19DPAlertScheduleList : DPBaseRecord
{
    // Error parsing type: , name: AlertScheduleSettings
    // Error parsing type: , name: AlertSettings
}

- (void).cxx_destruct;
- (id)init;
- (id)initWithBase64String:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)dictionary;
@property(nonatomic, copy) NSArray *AlertSettings;
@property(nonatomic, retain) _TtC3CGM23DPAlertScheduleSettings *AlertScheduleSettings; // @synthesize AlertScheduleSettings;

@end

@interface _TtC3CGM23DPAlertScheduleSettings : DPBaseRecord
{
    // Error parsing type: , name: AlertScheduleName
    // Error parsing type: , name: IsAlertScheduleEnabled
    // Error parsing type: , name: AlwaysSound
    // Error parsing type: , name: StartTime
    // Error parsing type: , name: EndTime
    // Error parsing type: , name: DaysOfWeek
    // Error parsing type: , name: IsDefaultSchedule
}

- (void).cxx_destruct;
- (id)init;
- (id)initWithBase64String:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithAlertSchedule:(id)arg1;
@property(nonatomic) _Bool IsDefaultSchedule; // @synthesize IsDefaultSchedule;
@property(nonatomic, copy) NSArray *DaysOfWeek;
@property(nonatomic, copy) NSString *EndTime;
@property(nonatomic, copy) NSString *StartTime;
@property(nonatomic) _Bool AlwaysSound; // @synthesize AlwaysSound;
@property(nonatomic) _Bool IsAlertScheduleEnabled; // @synthesize IsAlertScheduleEnabled;
@property(nonatomic, copy) NSString *AlertScheduleName;

@end

@interface _TtC3CGM23DPRealTimeGlucoseRecord : DPBaseRecord
{
    // Error parsing type: , name: RecordVersion
    // Error parsing type: , name: RecordedTime
    // Error parsing type: , name: Value
    // Error parsing type: , name: TrendRate
    // Error parsing type: , name: TrendArrow
    // Error parsing type: , name: AlgState
    // Error parsing type: , name: IsBackfilled
    // Error parsing type: , name: Timestamp
    // Error parsing type: , name: TXId
    // Error parsing type: , name: TXTime
    // Error parsing type: , name: TXSessionStartTime
    // Error parsing type: , name: PredictedValue
    // Error parsing type: , name: Source
    // Error parsing type: , name: EventType
}

- (void).cxx_destruct;
- (id)init;
- (id)initWithBase64String:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)dictionary;
- (id)initWithEgv:(id)arg1;
@property(nonatomic, copy) NSString *EventType;
@property(nonatomic, copy) NSString *Source;
@property(nonatomic, copy) NSString *TXId;
@property(nonatomic, copy) NSString *Timestamp;
@property(nonatomic, copy) NSString *AlgState;
@property(nonatomic, copy) NSString *TrendArrow;
@property(nonatomic, copy) NSString *RecordedTime;
@property(nonatomic, copy) NSString *RecordVersion;

@end

@interface _TtC3CGM29DefaultSettingsViewController : SetupWizardBaseViewController
{
    // Error parsing type: , name: nextButton
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewDidLoad;

@end

@interface _TtC3CGM21CGMSnapshotDataHelper : _TtCs12_SwiftObject
{
    // Error parsing type: , name: subscriptionId
    // Error parsing type: , name: currentEGV
    // Error parsing type: , name: egvValues
    // Error parsing type: , name: alertsDictionary
    // Error parsing type: , name: maxGraphYAxisValue
    // Error parsing type: , name: isAppValid
    // Error parsing type: , name: timeDelta
}

@end

@interface _TtC3CGM21AlertScheduleSnapshot : NSObject
{
    // Error parsing type: , name: defaultSchedule
    // Error parsing type: , name: defaultAlertSettings
    // Error parsing type: , name: customSchedule
    // Error parsing type: , name: customAlertSettings
    // Error parsing type: , name: lastUpdateTime
}

- (void).cxx_destruct;
- (id)init;
@property(nonatomic) int lastUpdateTime; // @synthesize lastUpdateTime;
@property(nonatomic, copy) NSArray *customAlertSettings;
@property(nonatomic, retain) CGMAlertSchedule *customSchedule; // @synthesize customSchedule;
@property(nonatomic, copy) NSArray *defaultAlertSettings;
@property(nonatomic, retain) CGMAlertSchedule *defaultSchedule; // @synthesize defaultSchedule;

@end

@interface SafetyStoryboardWizardHelper : StoryboardWizardHelper
{
    // Error parsing type: , name: separatorHeight
}

- (id)initWithDelegate:(id)arg1;
- (void)displaySafetyFilmReel;
- (void)displaySafetyScreenWithIndex:(long long)arg1;
@property(nonatomic, readonly) double separatorHeight; // @synthesize separatorHeight;

@end

@interface _TtC3CGM25CGMFeedbackViewController : CGMWebViewController
{
    // Error parsing type: , name: qualtricsInitialURL
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)updateErrorHTML;
- (void)viewDidLoad;

@end

@interface _TtC3CGM13UAMConfigFile : NSObject
{
}

+ (id)getValueFromConfigFileForKey:(long long)arg1;
- (void).cxx_destruct;
- (id)init;

@end

@interface _TtC3CGM12WidgetHelper : NSObject
{
    // Error parsing type: , name: currentSnapshotData
}

+ (void)updateWidget;
+ (id)shared;
- (void).cxx_destruct;
- (id)init;

@end

@interface _TtC3CGM22UAMLoginViewController : DXCMBaseViewController
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewDidLoad;

@end

@interface _TtC3CGM15DXCMTimeManager : NSObject
{
}

+ (void)accelerateTime:(double)arg1;
+ (void)setOffset:(double)arg1;
+ (void)resetTimeOffset;
- (id)init;

@end

@interface _TtC3CGM28ImportSettingsViewController : SetupWizardBaseViewController
{
    // Error parsing type: , name: $__lazy_storage_$_helper
    // Error parsing type: , name: actionTimer
    // Error parsing type: , name: actionTimerValue
    // Error parsing type: , name: killActionTime
    // Error parsing type: , name: kActionTimerInterval
    // Error parsing type: , name: importButton
    // Error parsing type: , name: importLabel
    // Error parsing type: , name: baseIndex
    // Error parsing type: , name: $__lazy_storage_$_ringView
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)endActionTimer;
- (void)actionTimerFired:(id)arg1;
- (void)startActionTimer;
- (void)setStateFor:(id)arg1 enabled:(_Bool)arg2;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)next;
- (void)viewDidLoad;
@property(nonatomic, retain) DXCMRingView *ringView;
@property(nonatomic) long long baseIndex; // @synthesize baseIndex;
@property(nonatomic, retain) UILabel *importLabel; // @synthesize importLabel;
@property(nonatomic, retain) DXCMBlockButton *importButton; // @synthesize importButton;
@property(nonatomic, readonly) float kActionTimerInterval; // @synthesize kActionTimerInterval;
@property(nonatomic, readonly) float killActionTime; // @synthesize killActionTime;
@property(nonatomic) float actionTimerValue; // @synthesize actionTimerValue;
@property(nonatomic, retain) NSTimer *actionTimer; // @synthesize actionTimer;
@property(nonatomic, retain) _TtC3CGM26ImportSettingsWizardHelper *helper;

@end

@interface _TtC3CGM26ImportSettingsWizardHelper : StoryboardWizardHelper
{
}

- (id)initWithDelegate:(id)arg1;
- (id)buttonForImportSettingsScreen:(long long)arg1;
- (void)displayImportSettingsScreenWithIndex:(long long)arg1;

@end

@interface _TtC3CGM20DPWorkoutEventRecord : DPBaseRecord
{
    // Error parsing type: , name: Duration
    // Error parsing type: , name: EnergyBurned
    // Error parsing type: , name: EventId
    // Error parsing type: , name: StartTime
    // Error parsing type: , name: EndTime
    // Error parsing type: , name: Name
    // Error parsing type: , name: SourceId
    // Error parsing type: , name: SourceName
    // Error parsing type: , name: DataSource
    // Error parsing type: , name: SourceVersion
    // Error parsing type: , name: RecordVersion
    // Error parsing type: , name: RecordStatus
    // Error parsing type: , name: RecordedTime
}

- (void).cxx_destruct;
- (id)init;
- (id)initWithBase64String:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithDictionary:(id)arg1;
@property(nonatomic, copy) NSString *RecordedTime;
@property(nonatomic, copy) NSString *RecordStatus;
@property(nonatomic, copy) NSString *RecordVersion;
@property(nonatomic, copy) NSString *SourceVersion;
@property(nonatomic, copy) NSString *DataSource;
@property(nonatomic, copy) NSString *SourceName;
@property(nonatomic, copy) NSString *SourceId;
@property(nonatomic, copy) NSString *Name;
@property(nonatomic, copy) NSString *EndTime;
@property(nonatomic, copy) NSString *StartTime;
@property(nonatomic, copy) NSString *EventId;
@property(nonatomic) long long EnergyBurned; // @synthesize EnergyBurned;
@property(nonatomic) long long Duration; // @synthesize Duration;

@end

@interface _TtC3CGM32CGMAlertSettingsMenuItemsManager : NSObject
{
    // Error parsing type: , name: minUserDefinedAlertScheduleRowCount
    // Error parsing type: , name: maxUserDefinedAlertScheduleRowCount
    // Error parsing type: , name: resetAlertSettingsRowCount
    // Error parsing type: , name: alwaysSoundSettingsRowCount
    // Error parsing type: , name: emptyString
    // Error parsing type: , name: onString
    // Error parsing type: , name: offString
    // Error parsing type: , name: alertSettingsRowTitleList
    // Error parsing type: , name: alertSettingsRowAlertName
    // Error parsing type: , name: alertSettingsNotSchedulable
    // Error parsing type: , name: coreDbMgr
    // Error parsing type: , name: defaultAlertSchedule
    // Error parsing type: , name: defaultAlertSettingsArray
    // Error parsing type: , name: userDefinedAlertSchedule
    // Error parsing type: , name: alertScheduleAlertSettingsArray
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)notifySubscriberOfNewCGMDataUpdate:(unsigned long long)arg1;
- (_Bool)isAlertScheduleSelectedDaysError;
- (_Bool)isAlertScheduleSelectedDaysAtIndexPath:(id)arg1;
- (_Bool)isResetAlertSettingsAtIndexPath:(id)arg1;
- (id)menuItemAtIndexPath:(id)arg1;
- (id)footerAccessibilityIdInSection:(long long)arg1;
- (id)footerTitleOfItemsInSection:(long long)arg1;
- (double)heightForFooterInSection:(long long)arg1;
- (double)heightForHeaderInSection:(long long)arg1;
- (id)headerAccessibilityIdInSection:(long long)arg1;
- (id)headerTitleOfItemsInSection:(long long)arg1;
- (long long)numberOfItemsInSection:(long long)arg1;
- (long long)numberOfSections;
- (_Bool)userDefinedAlertScheduleExists;
- (void)fetchAlertSettings;
- (id)init;

@end

@interface _TtC3CGM22DPNutritionEventRecord : DPBaseRecord
{
    // Error parsing type: , name: StartTime
    // Error parsing type: , name: EndTime
    // Error parsing type: , name: EventId
    // Error parsing type: , name: MealName
    // Error parsing type: , name: FoodItem
    // Error parsing type: , name: Fiber
    // Error parsing type: , name: Carbs
    // Error parsing type: , name: FatTotal
    // Error parsing type: , name: Protein
    // Error parsing type: , name: Calories
    // Error parsing type: , name: Sugar
    // Error parsing type: , name: SourceId
    // Error parsing type: , name: SourceName
    // Error parsing type: , name: DataSource
    // Error parsing type: , name: SourceVersion
    // Error parsing type: , name: RecordVersion
    // Error parsing type: , name: RecordStatus
    // Error parsing type: , name: RecordedTime
}

- (void).cxx_destruct;
- (id)init;
- (id)initWithBase64String:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithDictionary:(id)arg1;
@property(nonatomic, copy) NSString *RecordedTime;
@property(nonatomic, copy) NSString *RecordStatus;
@property(nonatomic, copy) NSString *RecordVersion;
@property(nonatomic, copy) NSString *SourceVersion;
@property(nonatomic, copy) NSString *DataSource;
@property(nonatomic, copy) NSString *SourceName;
@property(nonatomic, copy) NSString *SourceId;
@property(nonatomic) double Sugar; // @synthesize Sugar;
@property(nonatomic) double Calories; // @synthesize Calories;
@property(nonatomic) double Protein; // @synthesize Protein;
@property(nonatomic) double FatTotal; // @synthesize FatTotal;
@property(nonatomic) double Carbs; // @synthesize Carbs;
@property(nonatomic) double Fiber; // @synthesize Fiber;
@property(nonatomic, copy) NSString *FoodItem;
@property(nonatomic, copy) NSString *MealName;
@property(nonatomic, copy) NSString *EventId;
@property(nonatomic, copy) NSString *EndTime;
@property(nonatomic, copy) NSString *StartTime;

@end

@interface _TtC3CGM20UAMWebAPIAccountInfo : NSObject
{
    // Error parsing type: , name: id
    // Error parsing type: , name: loginId
    // Error parsing type: , name: firstName
    // Error parsing type: , name: lastName
    // Error parsing type: , name: displayName
    // Error parsing type: , name: dateOfBirth
    // Error parsing type: , name: gender
    // Error parsing type: , name: email
    // Error parsing type: , name: countryCode
    // Error parsing type: , name: postalCode
    // Error parsing type: , name: cultureCode
    // Error parsing type: , name: dateCreated
    // Error parsing type: , name: dateModified
    // Error parsing type: , name: dateVerified
    // Error parsing type: , name: isActive
}

- (void).cxx_destruct;
- (id)init;
- (id)initWithDictionary:(id)arg1;
@property(nonatomic) _Bool isActive; // @synthesize isActive;
@property(nonatomic, copy) NSString *dateVerified;
@property(nonatomic, copy) NSString *dateModified;
@property(nonatomic, copy) NSString *dateCreated;
@property(nonatomic, copy) NSString *cultureCode;
@property(nonatomic, copy) NSString *postalCode;
@property(nonatomic, copy) NSString *countryCode;
@property(nonatomic, copy) NSString *email;
@property(nonatomic, copy) NSString *gender;
@property(nonatomic, copy) NSString *dateOfBirth;
@property(nonatomic, copy) NSString *displayName;
@property(nonatomic, copy) NSString *lastName;
@property(nonatomic, copy) NSString *firstName;
@property(nonatomic, copy) NSString *loginId;
@property(nonatomic, copy) NSString *id;

@end

@interface _TtC3CGM10DeviceInfo : NSObject
{
    // Error parsing type: , name: language
    // Error parsing type: , name: isMmolDisplayMode
    // Error parsing type: , name: is24HourMode
    // Error parsing type: , name: isBlindedMode
    // Error parsing type: , name: transmitterId
    // Error parsing type: , name: softwareNumber
    // Error parsing type: , name: softwareVersion
}

- (void).cxx_destruct;
- (id)init;
@property(nonatomic, copy) NSString *softwareVersion;
@property(nonatomic, copy) NSString *softwareNumber;
@property(nonatomic, copy) NSString *transmitterId;
@property(nonatomic) _Bool isBlindedMode; // @synthesize isBlindedMode;
@property(nonatomic) _Bool is24HourMode; // @synthesize is24HourMode;
@property(nonatomic) _Bool isMmolDisplayMode; // @synthesize isMmolDisplayMode;
@property(nonatomic, copy) NSString *language;

@end

@interface _TtC3CGM21DataConsentUAMManager : NSObject
{
    // Error parsing type: , name: entrypoint
    // Error parsing type: , name: viewController
    // Error parsing type: , name: currentOptInStatus
    // Error parsing type: , name: navigationBarHidden
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)showWebViewWithAnimation:(_Bool)arg1;
- (void)setupWithEntrypoint:(unsigned long long)arg1 viewController:(id)arg2 navigationBarHidden:(_Bool)arg3;
- (id)init;

@end

@interface _TtC3CGM23UAMReAuthViewController : DXCMBaseViewController
{
    // Error parsing type: , name: minimumSpacing
    // Error parsing type: , name: maximumSpacing
    // Error parsing type: , name: buttonSpacing
    // Error parsing type: , name: loginButtonsSpacing
    // Error parsing type: , name: nonEnglishSupport
    // Error parsing type: , name: accessErrorDescriptionLabel
    // Error parsing type: , name: reLogin
    // Error parsing type: , name: loginLater
    // Error parsing type: , name: callTechSupport
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)callTechSupportAlertHandler;
- (void)cancelButtonPressed;
- (void)viewDidLoad;

@end

@interface _TtC3CGM40CGMAlertSettingsAlertLimitViewController : DXCMBaseViewController <CGMAlertLimitChangedDelegate>
{
    // Error parsing type: , name: navigationTitle
    // Error parsing type: , name: userAlert
    // Error parsing type: , name: alertLimitDelegate
    // Error parsing type: , name: selectedAlertLimit
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)willMoveToParentViewController:(id)arg1;
- (void)alertLimitChanged:(id)arg1;
- (void)viewDidLoad;
@property(nonatomic) __weak id <_TtP3CGM34CGMAlertSettingsAlertLimitDelegate_> alertLimitDelegate; // @synthesize alertLimitDelegate;
@property(nonatomic, retain) CGMUserAlert *userAlert; // @synthesize userAlert;
@property(nonatomic, copy) NSString *navigationTitle;

@end

@interface _TtC3CGM27NonAdjunctiveViewController : DXCMBaseViewController
{
    // Error parsing type: , name: watchVideo
    // Error parsing type: , name: skipVideo
    // Error parsing type: , name: descriptionLabel
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)moviePlaybackDidFinish;
- (void)viewDidLoad;

@end

@interface _TtC3CGM28DPPartnerInsulinDeviceRecord : DPBaseRecord
{
    // Error parsing type: , name: RecordVersion
    // Error parsing type: , name: Timestamp
    // Error parsing type: , name: AppVersion
    // Error parsing type: , name: DeviceVersion
    // Error parsing type: , name: DeviceModel
    // Error parsing type: , name: DeviceId
    // Error parsing type: , name: UDI
    // Error parsing type: , name: UnregisterDate
}

- (void).cxx_destruct;
- (id)init;
- (id)initWithBase64String:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithDictionary:(id)arg1;
@property(nonatomic, copy) NSString *UnregisterDate;
@property(nonatomic, copy) NSString *UDI;
@property(nonatomic, copy) NSString *DeviceId;
@property(nonatomic, copy) NSString *DeviceModel;
@property(nonatomic, copy) NSString *DeviceVersion;
@property(nonatomic, copy) NSString *AppVersion;
@property(nonatomic, copy) NSString *Timestamp;
@property(nonatomic, readonly) NSString *RecordVersion;

@end

@interface _TtC3CGM18WidgetSnapshotData : NSObject
{
    // Error parsing type: , name: egvData
    // Error parsing type: , name: md5Digest
    // Error parsing type: , name: isEncrypted
    // Error parsing type: , name: isAppValid
    // Error parsing type: , name: date
    // Error parsing type: , name: alertsDictionary
    // Error parsing type: , name: settingsDataSource
    // Error parsing type: , name: egvsArray
    // Error parsing type: , name: egv
    // Error parsing type: , name: maxGraphYAxisValue
    // Error parsing type: , name: timeDelta
    // Error parsing type: , name: timeStamp
}

- (void).cxx_destruct;
- (id)init;

@end

@interface _TtC3CGM21DPBundleBuilderHelper : NSObject
{
}

+ (id)unitsTypeStringFromEvent:(id)arg1;
+ (id)createAlertScheduleRecordFromSnapshot:(id)arg1;
+ (id)createAlertEntryRecordFromAlertStateHistory:(id)arg1;
+ (id)createUserEventRecordFromEvent:(id)arg1;
+ (id)createWorkoutEventRecordFromWorkout:(id)arg1;
+ (id)createNutritionEventRecordFromMeal:(id)arg1;
+ (id)createMeterRecordFromMeter:(id)arg1;
- (id)init;

@end

@interface _TtC3CGM17HomeWidgetPlotter : NSObject
{
    // Error parsing type: , name: hoursToPlot
    // Error parsing type: , name: plottingSnapshot
    // Error parsing type: , name: plotForPreview
    // Error parsing type: , name: alertsDataSource
    // Error parsing type: , name: egvDataSource
    // Error parsing type: , name: baseRect
    // Error parsing type: , name: plotSize
    // Error parsing type: , name: highAlertEnabled
    // Error parsing type: , name: lowAlertEnabled
    // Error parsing type: , name: fixedlowAlertEnabled
    // Error parsing type: , name: urgentLowSoonAlertEnabled
    // Error parsing type: , name: highAlertValue
    // Error parsing type: , name: lowAlertValue
    // Error parsing type: , name: fixedLowAlertValue
    // Error parsing type: , name: yIncrement
    // Error parsing type: , name: xIncrement
    // Error parsing type: , name: maxYAxisValue
    // Error parsing type: , name: kPointsPerHour
    // Error parsing type: , name: kPointsPerHourInt
    // Error parsing type: , name: kLowerPlotRange
    // Error parsing type: , name: kYAxisInset
    // Error parsing type: , name: kAlertLineThickness
    // Error parsing type: , name: kAxisLineThickness
}

- (void).cxx_destruct;
- (id)init;
- (void)dealloc;

@end

@interface CGMBaseHeaderFooterView : UITableViewHeaderFooterView
{
    UILabel *_label;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UILabel *label; // @synthesize label=_label;
- (id)initWithReuseIdentifier:(id)arg1;

@end

@interface DXCMTransmitterConnectionLog : NSObject
{
    double _connectTime;
    double _disconnectTime;
    long long _rssi;
    long long _backfillCount;
    unsigned long long _logRowCount;
    long long _advertiseDurationMs;
    unsigned int _connectDurationMs;
    long long _disconnectStatus;
    NSDate *_egvSystemTime;
    unsigned int _egvTxTime;
    unsigned int _sessionStartTime;
    NSString *_txId;
    NSString *_appState;
    unsigned long long _txStatusCode;
    _Bool _connectionSuccess;
    NSMutableArray *_warnings;
}

- (void).cxx_destruct;
- (void)setTxStatusCode:(unsigned long long)arg1;
- (void)setAppState:(id)arg1;
- (void)setTransmitterId:(id)arg1;
- (void)setEgvData:(id)arg1 egvTxTime:(unsigned int)arg2 sessionStartTime:(unsigned int)arg3;
- (void)addWarning:(id)arg1;
- (void)setLoggerRowCount:(unsigned long long)arg1;
- (void)setBackfillCount:(long long)arg1;
- (void)setAdvertisementDuration:(unsigned long long)arg1;
- (void)setRSSI:(long long)arg1;
- (void)setDisconnectStatus:(long long)arg1;
- (void)markDisconnectTime;
- (void)markConnectTime;
- (_Bool)IsConnectionSuccess;
- (void)markConnectionSuccess;
- (id)getConnectionFailureLog;
- (id)getConnectionSuccessLog;
- (id)init;

@end

@interface DXCMTransmitterEGVBackFill : NSObject
{
    unsigned int _transmitterSessionStartTime;
    NSString *_transmitterId;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *transmitterId; // @synthesize transmitterId=_transmitterId;
- (id)parseResponseStreamIntoEGVRecords:(id)arg1;
- (id)createCGMEGVRecordFromServiceEGVRecord:(id)arg1 transmitterTimeOffset:(unsigned int)arg2;
- (_Bool)isSequenceNumberGap:(id)arg1 current:(id)arg2;
- (int)getStartTime:(id)arg1 minimumTime:(int)arg2;
- (int)getTransmitterTimeOffset:(id)arg1;
- (int)getStartTimeIfOtherTransmitter:(int)arg1 startTxTime:(int)arg2 records:(id)arg3;
- (struct _DXCMBackfillRange)algorithmGapDetector:(id)arg1 minStartTime:(unsigned int)arg2;
- (struct _DXCMBackfillRange)getGapInfo:(id)arg1 transmitterTimeOffset:(unsigned int)arg2 minStartTime:(unsigned int)arg3;
- (id)initWithParameters:(id)arg1 transmitterSessionStartTime:(unsigned int)arg2;

@end

@interface DCGMServiceDataStreamRecord : NSObject
{
    unsigned char _streamStatus;
    unsigned char _streamID;
    unsigned short _streamCRC;
    unsigned int _startTime;
    unsigned int _endTime;
    unsigned int _streamLength;
}

+ (id)recordWithData:(id)arg1;
@property(readonly) unsigned short streamCRC; // @synthesize streamCRC=_streamCRC;
@property(readonly) unsigned int streamLength; // @synthesize streamLength=_streamLength;
@property(readonly) unsigned int endTime; // @synthesize endTime=_endTime;
@property(readonly) unsigned int startTime; // @synthesize startTime=_startTime;
@property(readonly) unsigned char streamID; // @synthesize streamID=_streamID;
@property(readonly) unsigned char streamStatus; // @synthesize streamStatus=_streamStatus;
- (id)initWithDictionary:(id)arg1;
- (id)initWithValues:(unsigned char)arg1 streamID:(unsigned char)arg2 startTime:(unsigned int)arg3 endTime:(unsigned int)arg4 streamLength:(unsigned int)arg5 streamCRC:(unsigned short)arg6;

@end

@interface DCGMServiceTypesInternal : NSObject
{
}

@end

@interface DCGMServiceTransmitterExtendedVersionRecord : NSObject
{
    unsigned char _sessionDays;
    _Bool _dataStreamingAvailable;
    _Bool _predictiveEgvSupported;
    _Bool _backfillSupported;
    _Bool _separateIntervals;
    _Bool _motionDataSupported;
    unsigned short _warmupLength;
}

+ (id)recordWithData:(id)arg1;
@property(readonly) _Bool motionDataSupported; // @synthesize motionDataSupported=_motionDataSupported;
@property(readonly) _Bool separateIntervals; // @synthesize separateIntervals=_separateIntervals;
@property(readonly) _Bool backfillSupported; // @synthesize backfillSupported=_backfillSupported;
@property(readonly) _Bool predictiveEgvSupported; // @synthesize predictiveEgvSupported=_predictiveEgvSupported;
@property(readonly) _Bool dataStreamingAvailable; // @synthesize dataStreamingAvailable=_dataStreamingAvailable;
@property(readonly) unsigned short warmupLength; // @synthesize warmupLength=_warmupLength;
@property(readonly) unsigned char sessionDays; // @synthesize sessionDays=_sessionDays;
- (id)initWithDictionary:(id)arg1;
- (id)initWithValues:(unsigned char)arg1 warmupLength:(unsigned short)arg2 streamingAvailable:(_Bool)arg3 predictiveEgvSupported:(_Bool)arg4 backfillSupported:(_Bool)arg5 separateIntervals:(_Bool)arg6 motionDataSupported:(_Bool)arg7;
- (id)initWithValues:(unsigned char)arg1 streamingAvailable:(_Bool)arg2 predictiveEgvSupported:(_Bool)arg3 backfillSupported:(_Bool)arg4;

@end

@interface DCGMServiceTypes : NSObject
{
}

+ (id)sessionLogAsString:(long long)arg1;
+ (id)calibrationModeAsString:(unsigned char)arg1;
+ (id)batteryStatusString:(long long)arg1;
+ (id)txErrorString:(long long)arg1;
+ (id)unicodeArrowForTrend:(long long)arg1;
+ (long long)trendArrowFromString:(id)arg1;
+ (id)trendArrowStringFromArrow:(long long)arg1;
+ (id)trendArrowString:(BOOL)arg1;
+ (long long)trendArrow:(BOOL)arg1;
+ (id)calStateString:(unsigned char)arg1;
+ (unsigned char)stringToAlgState:(id)arg1;
+ (id)algStateString:(unsigned char)arg1;
+ (id)localizedInvalidCharsListForTransmitterType:(unsigned char)arg1;
+ (id)invalidCharsForTransmitterType:(unsigned char)arg1;
+ (id)prefixForTransmitterType:(unsigned char)arg1;

@end

@interface CGMKeyValueTables : CGMBaseDao
{
}

- (void)eraseDataFromTable:(id)arg1;
- (id)queryAllValuesFromTable:(id)arg1;
- (void)deleteItemForKey:(id)arg1 inTable:(id)arg2;
- (_Bool)valueExistsForKey:(id)arg1 inTable:(id)arg2;
- (id)getStringForKey:(id)arg1 inTable:(id)arg2;
- (void)setString:(id)arg1 forKey:(id)arg2 inTable:(id)arg3;
- (void)setInt:(int)arg1 forKey:(id)arg2 tableName:(id)arg3;
- (void)setupDataModelIfNeededWithName:(id)arg1;
- (void)setupDataModelIfNeeded;

@end

@interface CGMSupportLogger : NSObject
{
    CGMDataMgr *_dataMgr;
}

+ (id)instance;
- (void).cxx_destruct;
@property(retain, nonatomic) CGMDataMgr *dataMgr; // @synthesize dataMgr=_dataMgr;
- (id)methodName:(SEL)arg1;
- (id)displayNameFromClassName:(id)arg1;
- (id)controlViewControllerClassName:(id)arg1;
- (void)save:(unsigned long long)arg1 subtype:(id)arg2 data:(id)arg3 date:(long long)arg4;
- (void)logUserActivity:(unsigned long long)arg1 subtype:(id)arg2 data:(id)arg3;
- (void)logUserActivity:(unsigned long long)arg1 subtype:(id)arg2 data:(id)arg3 date:(long long)arg4;
- (void)logUserActivity:(unsigned long long)arg1 data:(id)arg2 view:(id)arg3 duration:(double)arg4;
- (void)logUserActivity:(unsigned long long)arg1 data:(id)arg2 view:(id)arg3;
- (void)logDataEntryActivityOn:(id)arg1 dataType:(id)arg2 dataSubtype:(id)arg3 dataValue:(id)arg4;
- (unsigned int)numberOfRowsInTable;
- (void)logUpdatingScreenEGV:(id)arg1 state:(id)arg2 egvValue:(id)arg3 trendArrow:(id)arg4;
- (void)logUpdatingScreenActivityOn:(id)arg1 state:(id)arg2 text:(id)arg3;
- (void)processEvent:(SEL)arg1 from:(id)arg2;
- (id)initWithDataMgr:(id)arg1;

@end

@interface CGMEventsDao : CGMBaseDao
{
    NSString *_logName;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *logName; // @synthesize logName=_logName;
- (id)fetchExerciseSinceDate:(id)arg1 withRecordStatus:(id)arg2;
- (id)fetchEventsWithType:(long long)arg1 SinceDate:(id)arg2 withRecordStatus:(id)arg3;
- (id)fetchLastEventWithType:(long long)arg1 subType:(long long)arg2 SinceDate:(id)arg3 withRecordStatus:(id)arg4;
- (id)convertDBResultToCGMEventBaseArray:(id)arg1;
- (id)fetchEventsWithType:(long long)arg1 subType:(long long)arg2 SinceDate:(id)arg3 withRecordStatus:(id)arg4;
- (id)fetchLastEventRecordedTimeWithType:(int)arg1 subType:(int)arg2 withRecordStatus:(id)arg3;
- (id)fetchEventsDictionaryAfterEventTime:(double)arg1;
- (id)fetchEventsAfterEventTime:(double)arg1;
- (id)fetchEventsSinceDate:(id)arg1 withRecordStatus:(id)arg2;
- (void)resetDataModel;
- (void)setupDataModelIfNeeded;
- (id)fetchWithID:(id)arg1;
- (void)deleteBaseEvent:(id)arg1;
- (int)actuallyInsertEventWithType:(int)arg1 subType:(unsigned long long)arg2 time:(int)arg3 value:(int)arg4;
- (int)insertHealthEvent:(id)arg1;
- (int)insertExerciseEvent:(id)arg1;
- (int)insertInsulinEvent:(id)arg1;
- (int)insertCarbsEvent:(id)arg1;
- (int)insertEvent:(id)arg1;
- (id)getRecordsBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)getUserEventsInRange:(unsigned long long)arg1 last:(unsigned long long)arg2;
- (int)getMaxRecordId;
- (int)getMinRecordId;

@end

@interface CGMAPIRealTimeEvent : DSAPIBaseAPI
{
    NSString *serverURL;
}

+ (id)instance;
- (void).cxx_destruct;
- (long long)eventTypeFromName:(id)arg1;
- (id)getStringForEventType:(long long)arg1;
- (id)getStringOfEventTypes:(long long)arg1;
- (void)deleteDeviceKey;
- (id)ListPublisherAccountSubscriptionsEx2;
- (void)UpdatePublisherAccountRuntimeInfo2;
- (void)ResumeSubscription2:(id)arg1;
- (void)UpdateContact:(id)arg1 emailAddress:(id)arg2 contactName:(id)arg3;
- (void)UpdateSubscriptionPermissions2:(id)arg1 permission:(id)arg2;
- (void)DeleteContact2:(id)arg1;
- (id)CreateFollowerInvitation2:(id)arg1 emailAddress:(id)arg2 languageCode:(id)arg3 countryCode:(id)arg4 patientName:(id)arg5 contactSettings:(id)arg6;
- (id)ReadPublisherLatestGlucoseValues2;
- (void)PauseSubscription2:(id)arg1;
- (void)StartRemoteMonitoringSession2:(id)arg1;
- (id)ReadLastEventPosted:(long long)arg1;
- (id)ReadEvents:(long long)arg1 sinceDate:(id)arg2;
- (void)logShareEventWithPostSize:(unsigned long long)arg1 withException:(id)arg2;
- (_Bool)PostEvents:(id)arg1;
- (id)getServer;
- (void)setServer:(id)arg1;
- (void)setServerToDefault;
- (id)init;

@end

@interface CGMAlertSettingsViewController : DXCMBaseViewController
{
    _Bool _needsReload;
    UITableView *_tableView;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool needsReload; // @synthesize needsReload=_needsReload;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void)pushViewControllerNamed:(id)arg1 StoryBoardNamed:(id)arg2 viewControllerTitleNamed:(id)arg3 dataDict:(id)arg4;
- (id)actionSheetForResetAlertSettings;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)alwaysSoundEnabled:(_Bool)arg1 isDefault:(_Bool)arg2;
- (void)alertScheduleEnabled:(_Bool)arg1;
- (_Bool)isDisabledForPro:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayHeaderView:(id)arg2 forSection:(long long)arg3;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface CGMWebViewController : DXCMBaseViewController <WKNavigationDelegate>
{
    _Bool _autoUpdateTitle;
    _Bool _addSession;
    _Bool _navigationCancelled;
    _Bool _needsDismissButton;
    _Bool _webViewBackNavigationAllowed;
    id <CGMWebViewDelegate> _webViewDelegate;
    NSString *_mTitle;
    NSString *_mUrl;
    NSDictionary *_mHeaders;
    WKWebView *_mWebView;
    NSTimer *_pageTimeoutTimer;
}

+ (_Bool)internetAvailable;
- (void).cxx_destruct;
@property(retain, nonatomic) NSTimer *pageTimeoutTimer; // @synthesize pageTimeoutTimer=_pageTimeoutTimer;
@property(retain, nonatomic) WKWebView *mWebView; // @synthesize mWebView=_mWebView;
@property(retain, nonatomic) NSDictionary *mHeaders; // @synthesize mHeaders=_mHeaders;
@property(retain, nonatomic) NSString *mUrl; // @synthesize mUrl=_mUrl;
@property(retain, nonatomic) NSString *mTitle; // @synthesize mTitle=_mTitle;
@property(retain, nonatomic) id <CGMWebViewDelegate> webViewDelegate; // @synthesize webViewDelegate=_webViewDelegate;
@property(nonatomic) _Bool webViewBackNavigationAllowed; // @synthesize webViewBackNavigationAllowed=_webViewBackNavigationAllowed;
@property(nonatomic) _Bool needsDismissButton; // @synthesize needsDismissButton=_needsDismissButton;
@property(nonatomic) _Bool navigationCancelled; // @synthesize navigationCancelled=_navigationCancelled;
@property(nonatomic) _Bool addSession; // @synthesize addSession=_addSession;
@property(nonatomic) _Bool autoUpdateTitle; // @synthesize autoUpdateTitle=_autoUpdateTitle;
- (void)dismissTapped;
- (void)goToURL:(id)arg1;
- (void)loadHTMLString:(id)arg1;
- (void)updateErrorHTML;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)goBack:(id)arg1;
- (void)addCustomBackButtonIfNeeded;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)cancelPageTimeoutTimer;
- (void)startPageTimeoutTimer;
- (void)commonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMDatePickerTableViewCell : UITableViewCell
{
    UIDatePicker *_picker;
}

+ (id)reuseIdentifier;
- (void).cxx_destruct;
@property(retain, nonatomic) UIDatePicker *picker; // @synthesize picker=_picker;
- (void)addAccessibilityIdWithSuffix:(id)arg1;
- (void)layoutSubviews;
- (void)_init;
- (void)awakeFromNib;
- (id)init;

@end

@interface TransmitterInfoViewController : DXCMBaseViewController
{
    UITableView *_tableView;
    DXCMBlockButton *_pairButton;
}

- (void).cxx_destruct;
@property(retain) DXCMBlockButton *pairButton; // @synthesize pairButton=_pairButton;
@property(nonatomic) __weak UITableView *tableView; // @synthesize tableView=_tableView;
- (void)segueToNewTransmitterScreen;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewDidLoad;

@end

@interface DPHeader : DPBaseObject
{
    NSString *_PatientId;
    NSString *_SourceStream;
    unsigned long long _SequenceNumber;
    NSString *_TransmitterNumber;
    NSString *_ReceiverNumber;
    NSString *_Tag;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *Tag; // @synthesize Tag=_Tag;
@property(retain, nonatomic) NSString *ReceiverNumber; // @synthesize ReceiverNumber=_ReceiverNumber;
@property(retain, nonatomic) NSString *TransmitterNumber; // @synthesize TransmitterNumber=_TransmitterNumber;
@property(nonatomic) unsigned long long SequenceNumber; // @synthesize SequenceNumber=_SequenceNumber;
@property(retain, nonatomic) NSString *SourceStream; // @synthesize SourceStream=_SourceStream;
@property(retain, nonatomic) NSString *PatientId; // @synthesize PatientId=_PatientId;

@end

@interface CGMEventBase : CGMBaseDataObject <DXCMEventInfo>
{
    int eventValue;
    int _recorded_system_time_sec;
    int _record_id;
    int _event_time;
    unsigned long long eventKind;
    unsigned long long eventSubkind;
    NSDate *eventStartTime;
    double eventDuration;
    NSDate *eventEndTime;
    NSString *calloutTitle;
    NSString *calloutDetails;
    unsigned long long _event_sub_type;
    NSString *_event_record_status;
    NSString *_event_id;
}

+ (id)eventWithType:(long long)arg1;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *event_id; // @synthesize event_id=_event_id;
@property(readonly, nonatomic) NSString *event_record_status; // @synthesize event_record_status=_event_record_status;
@property int event_time; // @synthesize event_time=_event_time;
@property(readonly, nonatomic) int record_id; // @synthesize record_id=_record_id;
@property(readonly, nonatomic) int recorded_system_time_sec; // @synthesize recorded_system_time_sec=_recorded_system_time_sec;
@property unsigned long long event_sub_type; // @synthesize event_sub_type=_event_sub_type;
@property(nonatomic) int eventValue; // @synthesize eventValue;
@property(nonatomic) double eventDuration; // @synthesize eventDuration;
@property(retain, nonatomic) NSDate *eventStartTime; // @synthesize eventStartTime;
@property(nonatomic) unsigned long long eventSubkind; // @synthesize eventSubkind;
@property(nonatomic) unsigned long long eventKind; // @synthesize eventKind;
- (id)summaryDetailForEvents:(id)arg1;
- (id)summaryTitleForEvents:(id)arg1;
@property(readonly, nonatomic) NSString *calloutDetails; // @synthesize calloutDetails;
@property(readonly, nonatomic) NSString *calloutTitle; // @synthesize calloutTitle;
@property(readonly, nonatomic) NSDate *eventEndTime; // @synthesize eventEndTime;
- (_Bool)isShortActingInsulinEvent;
- (void)setUnixTimeForGraphing:(int)arg1;
- (int)unixTimeForGraphing;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)isoDisplayDateString;
@property(readonly, nonatomic) NSDate *event_date;
- (id)dataPostSubType;
- (id)humanReadableValueWithUnits;
- (id)humanReadableSubTypeEnglish;
- (id)humanReadableSubType;
- (id)humanReadableTypeEnglish;
- (id)humanReadableType;
- (int)getValue;
- (unsigned long long)getSubtype;
@property(readonly, nonatomic) long long event_type; // @dynamic event_type;
- (id)initWithDictionary:(id)arg1;
- (_Bool)isHealthKitEvent;
- (_Bool)isEditable;
- (id)eventDetailText;
- (id)eventDate;
- (id)eventDescription;
- (int)eventType;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMWorkOutDao : CGMBaseDao
{
}

- (id)displayNameForWorkoutType:(id)arg1;
@property(readonly) NSDictionary *dictHKWorkoutActivityTypeTitles;
- (long long)insertWorkoutData:(id)arg1;
- (id)getRecordsBetweenStartTime:(long long)arg1 andEndTime:(long long)arg2;
- (id)fetchWorkoutEventsAfterStartTimeStamp:(double)arg1;
- (id)fetchWorkoutWithID:(id)arg1;
- (id)fetchWorkoutEventsDictionarySinceDate:(id)arg1 isDeleted:(_Bool)arg2;
- (id)fetchWorkoutEventsSinceDate:(id)arg1;
- (void)deleteWorkoutWithUUID:(id)arg1;
- (void)resetDataModel;
- (_Bool)hasWorkoutWithUUID:(id)arg1;
- (void)setupDataModelIfNeeded;
- (id)init;

@end

@interface CGMHealthKitDao : CGMBaseDao
{
}

- (id)getCGMHealthKitRecordDictsInRange:(unsigned long long)arg1 last:(unsigned long long)arg2;
- (unsigned int)getMaxRecordId;
- (unsigned int)getMinRecordId;
- (unsigned int)getRecordCount;
- (id)getLastNumEGVs:(unsigned long long)arg1;
- (double)systemTime;
- (unsigned int)getLastSavedTransmitterTime;
- (void)updateEgvsAsSavedToHealthKit:(id)arg1;
- (id)unsavedEgvsOlderThanDelay;
- (_Bool)isDuplicateEGVRecordwithTxTimeStamp:(unsigned int)arg1 withGlucoseValue:(unsigned int)arg2;
- (unsigned long long)insertEGV:(id)arg1;
- (void)eraseData;
- (void)resetDataModel;
- (void)setupDataModelIfNeeded;

@end

@interface CGMReflectionViewDataSource : NSObject
{
}

- (id)fetchInsulinEventsSinceDate:(id)arg1;
- (id)insulinEventsFromDate:(id)arg1 eventType:(long long)arg2;
- (double)insulinGraphBarCornerRadius:(long long)arg1;
- (id)insulinGraphBarBorderColor:(long long)arg1;
- (double)insulinGraphBarBorderWidth:(long long)arg1;
- (double)insulinGraphBarWidth:(long long)arg1;
- (id)insulinGraphFillPattern:(long long)arg1;
- (id)insulinGraphFillColor:(long long)arg1;
- (id)insulinGraphGroupType:(long long)arg1 fromDate:(id)arg2;
- (id)fetchNonInsulinEventsSinceDate:(id)arg1;
- (id)nonInsulinCalloutIcon:(long long)arg1;
- (id)nonInsulinGraphIcon:(long long)arg1;
- (id)eventsFromDate:(id)arg1 eventType:(long long)arg2;
- (id)nonInsulinGraphGroupType:(long long)arg1 fromDate:(id)arg2;

@end

@interface DPAlertSettingsLogRecord : DPBaseRecord
{
    NSNumber *_Enabled;
    NSString *_Name;
    long long _Value;
    long long _Delay;
    long long _Snooze;
    NSString *_Sound;
}

- (void).cxx_destruct;
@property(retain) NSString *Sound; // @synthesize Sound=_Sound;
@property long long Snooze; // @synthesize Snooze=_Snooze;
@property long long Delay; // @synthesize Delay=_Delay;
@property long long Value; // @synthesize Value=_Value;
@property(retain) NSString *Name; // @synthesize Name=_Name;
@property(retain) NSNumber *Enabled; // @synthesize Enabled=_Enabled;
- (id)initWithUserAlertDictionary:(id)arg1;
- (id)initWithUserAlert:(id)arg1;

@end

@interface CGMTheme : NSObject
{
}

+ (void)initTheme;
+ (void)customizeAppearance;

@end

@interface SetupLowAlertViewController : SetupWizardBaseViewController <CGMAlertLimitChangedDelegate>
{
    NSNumber *_selectedAlertLimit;
    CGMEditAlertLimitViewController *_childViewController;
    DXCMBlockButton *_saveButton;
}

- (void).cxx_destruct;
@property(retain, nonatomic) DXCMBlockButton *saveButton; // @synthesize saveButton=_saveButton;
@property(retain, nonatomic) CGMEditAlertLimitViewController *childViewController; // @synthesize childViewController=_childViewController;
@property(retain, nonatomic) NSNumber *selectedAlertLimit; // @synthesize selectedAlertLimit=_selectedAlertLimit;
- (id)userDefaultLimitForLowAlert;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)segueToHighAlert;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)alertLimitChanged:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DPContent : DPBaseObject
{
    NSArray *_Entries;
}

- (void).cxx_destruct;
@property(retain) NSArray *Entries; // @synthesize Entries=_Entries;

@end

@interface CGMEditAlertLimitViewController : DXCMBaseViewController <UIPickerViewDelegate, UIPickerViewDataSource>
{
    NSString *_descriptionText;
    NSString *_alertName;
    NSNumber *_defaultLimitValue;
    NSString *_descriptionTextAccessibilityId;
    id <CGMAlertLimitChangedDelegate> _dataChangedDelegate;
    UILabel *_descriptionLabel;
    UIPickerView *_alertLimitPicker;
    NSArray *_pickerData;
    NSString *_pickerUnit;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *pickerUnit; // @synthesize pickerUnit=_pickerUnit;
@property(retain, nonatomic) NSArray *pickerData; // @synthesize pickerData=_pickerData;
@property(nonatomic) __weak UIPickerView *alertLimitPicker; // @synthesize alertLimitPicker=_alertLimitPicker;
@property(nonatomic) __weak UILabel *descriptionLabel; // @synthesize descriptionLabel=_descriptionLabel;
@property(nonatomic) __weak id <CGMAlertLimitChangedDelegate> dataChangedDelegate; // @synthesize dataChangedDelegate=_dataChangedDelegate;
@property(retain, nonatomic) NSString *descriptionTextAccessibilityId; // @synthesize descriptionTextAccessibilityId=_descriptionTextAccessibilityId;
@property(nonatomic) NSNumber *defaultLimitValue; // @synthesize defaultLimitValue=_defaultLimitValue;
@property(retain, nonatomic) NSString *alertName; // @synthesize alertName=_alertName;
@property(retain, nonatomic) NSString *descriptionText; // @synthesize descriptionText=_descriptionText;
- (void)updateMarginConstraintsForDescription:(double)arg1 topMargin:(double)arg2 rightMargin:(double)arg3 bottomMargin:(double)arg4;
- (id)selectedAlertLimit;
- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (double)pickerView:(id)arg1 widthForComponent:(long long)arg2;
- (id)pickerView:(id)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(id)arg1;
- (id)getDefaultConfigLimitValue:(id)arg1;
- (void)setAlertNameWithZeroValue:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMEGVWidget : NSObject
{
    BOOL _trendRate;
    unsigned int _value;
    unsigned int _predictedValue;
    unsigned int _transmitterSystemTime;
}

@property(nonatomic) BOOL trendRate; // @synthesize trendRate=_trendRate;
@property(nonatomic) unsigned int transmitterSystemTime; // @synthesize transmitterSystemTime=_transmitterSystemTime;
@property(nonatomic) unsigned int predictedValue; // @synthesize predictedValue=_predictedValue;
@property(nonatomic) unsigned int value; // @synthesize value=_value;
- (_Bool)isUrgentLowSoon;
@property(readonly, nonatomic) long long trendArrow;
@property(readonly, nonatomic) _Bool isCurrent;
@property(readonly, nonatomic) _Bool isValid;

@end

@interface ShareFollowerCell : DXCMCGMBaseTableViewCell
{
    DSAPIContact *_contact;
    UILabel *_displayNameLabel;
    UILabel *_statusLabel;
    UIImageView *_trendIconImageView;
    UIImageView *_alertsIconImageView;
    NSLayoutConstraint *_trendIconImageViewWidthConstraint;
    NSLayoutConstraint *_alertsIconImageViewWidthConstraint;
    NSLayoutConstraint *_statusLabelMinWidthConstraint;
}

- (void).cxx_destruct;
@property(nonatomic) __weak NSLayoutConstraint *statusLabelMinWidthConstraint; // @synthesize statusLabelMinWidthConstraint=_statusLabelMinWidthConstraint;
@property(nonatomic) __weak NSLayoutConstraint *alertsIconImageViewWidthConstraint; // @synthesize alertsIconImageViewWidthConstraint=_alertsIconImageViewWidthConstraint;
@property(nonatomic) __weak NSLayoutConstraint *trendIconImageViewWidthConstraint; // @synthesize trendIconImageViewWidthConstraint=_trendIconImageViewWidthConstraint;
@property(nonatomic) __weak UIImageView *alertsIconImageView; // @synthesize alertsIconImageView=_alertsIconImageView;
@property(nonatomic) __weak UIImageView *trendIconImageView; // @synthesize trendIconImageView=_trendIconImageView;
@property(nonatomic) __weak UILabel *statusLabel; // @synthesize statusLabel=_statusLabel;
@property(nonatomic) __weak UILabel *displayNameLabel; // @synthesize displayNameLabel=_displayNameLabel;
@property(retain, nonatomic) DSAPIContact *contact; // @synthesize contact=_contact;
- (void)addCommonIdWithSuffix:(id)arg1;
- (void)layoutSubviews;
- (void)awakeFromNib;

@end

@interface DXCMConfigFile : NSObject
{
}

+ (_Bool)testServiceDefault;
+ (id)pathToCustomConfigFile:(id)arg1;
+ (id)pathToOriginalConfigFile:(id)arg1;
+ (id)getValueFromConfigFileForKey:(id)arg1;
+ (id)getDefaultNightModeEndTime;
+ (id)getDefaultNightModeStartTime;
+ (_Bool)getDefaultNightModeEnabled;
+ (id)getDefaultNightModeSettings;
+ (id)getDefaultRecommendedFollowerSettingForAlert:(id)arg1;
+ (id)getDefaultAlertSchedule;
+ (id)getDefaultAlertDict:(id)arg1 daytime:(_Bool)arg2;
+ (id)getLimitOptionsGlucoseUnitsForAlertType:(id)arg1;
+ (id)getRepeatOptions;
+ (id)getLimitOptionsArrayForAlertType:(id)arg1;
+ (id)getQualtricsBrandId;
+ (id)getQualtricsProjectId;
+ (id)getQualtricsInterceptId;
+ (_Bool)areAppAnalyticsEnabled;
+ (id)getClarityAppStoreGuid;
+ (id)getOnduoAppGuid;
+ (id)getAppCompatibilityAppGuid;
+ (id)getDataPostAppGuid;
+ (id)getShareAppGuid;
+ (id)getHelpTitleForKey:(id)arg1;
+ (id)getHelpURLForKey:(id)arg1;
+ (id)getAccountURLForKey:(id)arg1;
+ (id)getClarityAppStoreUrlFromConfigFile;
+ (id)getLegalURLForKey:(id)arg1;
+ (id)getLegalClientIdFromConfigFile;
+ (id)getTechSupportFormUrlFromConfigFile;
+ (id)getBaseWebUrlFromConfigFile;
+ (id)getBaseServicesUrlFromConfigFile;
+ (id)getCompatibilityUrlFromConfigFile;
+ (id)getDataPostUrlFromConfigFile;
+ (id)getShareUrlFromConfigFile;
+ (int)getDebugUploadLevel;
+ (int)getDebugLogLevel;
+ (id)getLegalUrlsFromConfigFile;

@end

@interface CGMAlertScheduleWizardAlwaysSoundViewController : DXCMBaseAlertScheduleSetupViewController <UITableViewDelegate, UITableViewDataSource>
{
    _Bool _alwaysSoundEnabled;
    UITableView *_tableView;
    UILabel *_descriptionTxtLbl;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool alwaysSoundEnabled; // @synthesize alwaysSoundEnabled=_alwaysSoundEnabled;
@property(nonatomic) __weak UILabel *descriptionTxtLbl; // @synthesize descriptionTxtLbl=_descriptionTxtLbl;
@property(nonatomic) __weak UITableView *tableView; // @synthesize tableView=_tableView;
- (void)updateAlertScheduleData;
- (void)getStoredAlwaysSoundOptionValue;
- (void)getDefaultAlwaysSoundOptionValue;
- (void)didReceiveMemoryWarning;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)setUpTableView;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMAlertScheduleWizardStartTimeViewController : DXCMBaseAlertScheduleSetupViewController
{
    UILabel *_descriptionLabel;
    UIDatePicker *_startTimePicker;
}

- (void).cxx_destruct;
@property(nonatomic) __weak UIDatePicker *startTimePicker; // @synthesize startTimePicker=_startTimePicker;
@property(nonatomic) __weak UILabel *descriptionLabel; // @synthesize descriptionLabel=_descriptionLabel;
- (void)startTimePickerValueChanged:(id)arg1;
- (void)updateAlertScheduleData;
- (void)viewDidLoad;

@end

@interface DSAPIHelper : NSObject
{
}

+ (id)dequoteString:(id)arg1;
+ (unsigned long long)getAlertType:(id)arg1;
+ (id)SubscriptionStateString:(unsigned long long)arg1;
+ (id)convertIntToTimeSpanString:(unsigned long long)arg1;
+ (unsigned long long)convertTimeSpanStringToInt:(id)arg1;
+ (long long)dateFromJSONString:(id)arg1;
+ (id)methodName:(SEL)arg1;

@end

@interface DEXSoundPlayers : NSObject
{
    NSMutableDictionary *playersRepository;
}

- (void).cxx_destruct;
- (id)getPlayerForSoundFile:(id)arg1;
- (id)getPlayerForSoundInCategory:(id)arg1 inCategory:(id)arg2;
- (void)addPlayerForSoundInCategory:(id)arg1 forSound:(id)arg2 inCategory:(id)arg3;
- (id)init;

@end

@interface DXCMBluetoothTypes : NSObject
{
}

+ (id)dxcmResultString:(long long)arg1;
+ (long long)convertToDXCMResult:(id)arg1;
+ (unsigned short)crc16:(char *)arg1 start:(unsigned long long)arg2 end:(unsigned long long)arg3;

@end

@interface CGMAlertSettingsDetailViewController : DXCMBaseViewController <_TtP3CGM34CGMAlertSettingsAlertLimitDelegate_, _TtP3CGM28CGMAlertSettingsTimeDelegate_>
{
    _Bool daytimeSelected;
    _Bool _hasDetailChanged;
    UITableView *_tableView;
    CGMUserAlert *_userAlert;
}

+ (void)saveSingleAlertToAppAnalytics:(id)arg1 daytime:(_Bool)arg2;
- (void).cxx_destruct;
@property(nonatomic) _Bool hasDetailChanged; // @synthesize hasDetailChanged=_hasDetailChanged;
@property(retain, nonatomic) CGMUserAlert *userAlert; // @synthesize userAlert=_userAlert;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void)willMoveToParentViewController:(id)arg1;
- (void)timeChanged:(id)arg1;
- (void)alertLimitChanged:(id)arg1;
- (void)flipEnabled:(id)arg1;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)showSoundPicker;
- (void)updateSwitchCellAccessibilityId:(id)arg1;
- (_Bool)isRepeatOptionDisabledForPro;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface CGMAlertScheduleWizardNameViewController : DXCMBaseAlertScheduleSetupViewController <CGMAlertScheduleNameChangedDelegate>
{
    UILabel *_descriptionLabel;
    UILabel *_bottomDescriptionLabel;
    NSString *_alertScheduleName;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *alertScheduleName; // @synthesize alertScheduleName=_alertScheduleName;
@property(nonatomic) __weak UILabel *bottomDescriptionLabel; // @synthesize bottomDescriptionLabel=_bottomDescriptionLabel;
@property(nonatomic) __weak UILabel *descriptionLabel; // @synthesize descriptionLabel=_descriptionLabel;
- (id)childAlertScheduleNameEditViewController;
- (void)updateAlertScheduleData;
- (void)didChangeAlertScheduleName:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMSystemState : CGMBaseDataObject
{
    unsigned int _cgm_alert_count;
    int _cgm_state;
    long long _system_time_sec;
    NSString *_app_version;
    NSString *_cgm_icon_path;
}

- (void).cxx_destruct;
@property(nonatomic) int cgm_state; // @synthesize cgm_state=_cgm_state;
@property(nonatomic) unsigned int cgm_alert_count; // @synthesize cgm_alert_count=_cgm_alert_count;
@property(copy, nonatomic) NSString *cgm_icon_path; // @synthesize cgm_icon_path=_cgm_icon_path;
@property(copy, nonatomic) NSString *app_version; // @synthesize app_version=_app_version;
@property(nonatomic) long long system_time_sec; // @synthesize system_time_sec=_system_time_sec;

@end

@interface DexPlotView : CPTGraphHostingView <CPTPlotDataSource, CPTScatterPlotDataSource, CPTScatterPlotDelegate, CPTPlotSpaceDelegate, UIAccessibilityIdentification>
{
    _Bool _allowsUserScroll;
    _Bool _urgentlowSoonAlertEnabled;
    _Bool _lowAlertThresholdEnabled;
    _Bool _highAlertThresholdEnabled;
    _Bool _needsUpdate;
    _Bool _showXAxisLabels;
    _Bool _showYAxisLabels;
    NSString *accessibilityIdentifier;
    CGMEGV *_lastKnownEGV;
    NSArray *_egvArray;
    long long _lowAlertThresholdValue;
    long long _highAlertThresholdValue;
    long long _maxGraphYaxisValue;
    CPTColor *_shadedRegionColor;
    NSDate *_latestVisibleDate;
    unsigned long long _plotMode;
    CPTScatterPlot *_egvPlot;
    CPTScatterPlot *_highLinePlot;
    CPTScatterPlot *_lowLinePlot;
    CPTGraphHostingView *_hostView;
    unsigned long long _leftBorderPosition;
    double _cornerRadius;
    NSDate *_earliestVisibleDate;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSDate *earliestVisibleDate; // @synthesize earliestVisibleDate=_earliestVisibleDate;
@property(nonatomic) double cornerRadius; // @synthesize cornerRadius=_cornerRadius;
@property(nonatomic) _Bool showYAxisLabels; // @synthesize showYAxisLabels=_showYAxisLabels;
@property(nonatomic) _Bool showXAxisLabels; // @synthesize showXAxisLabels=_showXAxisLabels;
@property(nonatomic) unsigned long long leftBorderPosition; // @synthesize leftBorderPosition=_leftBorderPosition;
@property(retain, nonatomic) CPTGraphHostingView *hostView; // @synthesize hostView=_hostView;
@property(retain, nonatomic) CPTScatterPlot *lowLinePlot; // @synthesize lowLinePlot=_lowLinePlot;
@property(retain, nonatomic) CPTScatterPlot *highLinePlot; // @synthesize highLinePlot=_highLinePlot;
@property(retain, nonatomic) CPTScatterPlot *egvPlot; // @synthesize egvPlot=_egvPlot;
@property(nonatomic) _Bool needsUpdate; // @synthesize needsUpdate=_needsUpdate;
@property(nonatomic) unsigned long long plotMode; // @synthesize plotMode=_plotMode;
@property(retain, nonatomic) NSDate *latestVisibleDate; // @synthesize latestVisibleDate=_latestVisibleDate;
@property(retain, nonatomic) CPTColor *shadedRegionColor; // @synthesize shadedRegionColor=_shadedRegionColor;
@property(nonatomic) long long maxGraphYaxisValue; // @synthesize maxGraphYaxisValue=_maxGraphYaxisValue;
@property(nonatomic) _Bool highAlertThresholdEnabled; // @synthesize highAlertThresholdEnabled=_highAlertThresholdEnabled;
@property(nonatomic) long long highAlertThresholdValue; // @synthesize highAlertThresholdValue=_highAlertThresholdValue;
@property(nonatomic) _Bool lowAlertThresholdEnabled; // @synthesize lowAlertThresholdEnabled=_lowAlertThresholdEnabled;
@property(nonatomic) long long lowAlertThresholdValue; // @synthesize lowAlertThresholdValue=_lowAlertThresholdValue;
@property(nonatomic) _Bool urgentlowSoonAlertEnabled; // @synthesize urgentlowSoonAlertEnabled=_urgentlowSoonAlertEnabled;
@property(copy, nonatomic) NSArray *egvArray; // @synthesize egvArray=_egvArray;
@property(retain, nonatomic) CGMEGV *lastKnownEGV; // @synthesize lastKnownEGV=_lastKnownEGV;
@property(nonatomic) _Bool allowsUserScroll; // @synthesize allowsUserScroll=_allowsUserScroll;
@property(copy, nonatomic) NSString *accessibilityIdentifier; // @synthesize accessibilityIdentifier;
- (unsigned long long)indexOfEGVClosestToTime:(double)arg1 withData:(id)arg2 maximumDistance:(double)arg3;
- (id)closestEGVToDate:(id)arg1 maximumDistance:(double)arg2;
- (id)dateForPointWithXCoordinate:(double)arg1;
- (id)xAxisUpperBoundDate:(id)arg1 calendar:(id)arg2;
- (_Bool)shouldHighlightPlotPointForEGV:(id)arg1;
- (id)symbolForEGVScatterPlot:(id)arg1 recordIndex:(unsigned long long)arg2;
- (id)symbolForScatterPlot:(id)arg1 recordIndex:(unsigned long long)arg2;
- (void)correctCoordinatesForX:(double *)arg1 y:(double *)arg2;
- (void)correctCoordinatesforEGV:(id)arg1 x:(double *)arg2 y:(double *)arg3;
- (id)numberForEgvPlot:(id)arg1 field:(unsigned long long)arg2 recordIndex:(unsigned long long)arg3;
- (id)numberForLoLinePlot:(id)arg1 field:(unsigned long long)arg2 recordIndex:(unsigned long long)arg3;
- (id)numberForHiLinePlot:(id)arg1 field:(unsigned long long)arg2 recordIndex:(unsigned long long)arg3;
- (id)numberForPlot:(id)arg1 field:(unsigned long long)arg2 recordIndex:(unsigned long long)arg3;
- (unsigned long long)numberOfRecordsForEgvPlot:(id)arg1;
- (unsigned long long)numberOfRecordsForLoLinePlot:(id)arg1;
- (unsigned long long)numberOfRecordsForHiLinePlot:(id)arg1;
- (unsigned long long)numberOfRecordsForPlot:(id)arg1;
- (void)configureYAxis:(id)arg1 withAxisLineStyle:(id)arg2 axisTitleStyle:(id)arg3 axisTextStyle:(id)arg4 tickLineStyle:(id)arg5;
- (void)configureXAxis:(id)arg1 withAxisLineStyle:(id)arg2 axisTitleStyle:(id)arg3 axisTextStyle:(id)arg4 tickLineStyle:(id)arg5;
- (void)configureAxes;
- (void)configurePlots;
- (void)configureGraph;
- (void)refreshShadedRegions;
- (void)addLabelsForYAxis;
- (id)xRangeForVisibleDates;
- (id)xAxisLowerBoundDate:(id)arg1 calendar:(id)arg2;
- (_Bool)isMajorTickForXAxis:(id)arg1 calendar:(id)arg2;
- (id)dateComponentsForXAxisIncrement;
- (id)majorXTickIntervalDateFormatterWithDate:(id)arg1 includeAMPM:(_Bool)arg2;
- (double)offsetForX;
- (void)addTimeLabelsForXAxis;
- (void)setupPlotSpace;
- (void)refreshEGVPlot;
- (void)updateIfNeeded;
- (void)dealloc;
- (void)removeFromSuperview;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 showXAxisLabels:(_Bool)arg2 showYAxisLabels:(_Bool)arg3 cornerRadius:(double)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DPErrorLogRecord : DPBaseRecord
{
    int _RowID;
    NSString *_Location;
    NSString *_Message;
}

- (void).cxx_destruct;
@property(retain) NSString *Message; // @synthesize Message=_Message;
@property(retain) NSString *Location; // @synthesize Location=_Location;
@property int RowID; // @synthesize RowID=_RowID;

@end

@interface SignedRequestEncryptionKey : NSObject
{
    long long _keyId;
    NSString *_stringKey;
    NSString *_stringIV;
}

- (void).cxx_destruct;
- (id)toDictionary;
- (id)initWithKeyId:(long long)arg1 withStringKey:(id)arg2 withStringIV:(id)arg3;

@end

@interface CGMEGVErrorStateView : CGMBaseEGVView
{
    NSArray *errorDictsArray;
    unsigned long long currentState;
    id <CGMEGVErrorStateDelegate> _delegate;
    UIButton *_error_button;
    UIButton *_error_secondaryButton;
    UILabel *_error_title;
    UILabel *_error_instruction;
    UILabel *_error_description;
    UIImageView *_error_imageView;
    UIStackView *_errorStackView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIStackView *errorStackView; // @synthesize errorStackView=_errorStackView;
@property(retain, nonatomic) UIImageView *error_imageView; // @synthesize error_imageView=_error_imageView;
@property(retain, nonatomic) UILabel *error_description; // @synthesize error_description=_error_description;
@property(retain, nonatomic) UILabel *error_instruction; // @synthesize error_instruction=_error_instruction;
@property(retain, nonatomic) UILabel *error_title; // @synthesize error_title=_error_title;
@property(retain, nonatomic) UIButton *error_secondaryButton; // @synthesize error_secondaryButton=_error_secondaryButton;
@property(retain, nonatomic) UIButton *error_button; // @synthesize error_button=_error_button;
@property(nonatomic) __weak id <CGMEGVErrorStateDelegate> delegate; // @synthesize delegate=_delegate;
- (void)initErrorDictArray;
- (id)errorText;
- (void)helpButtonTap:(id)arg1;
- (void)errorButtonTap:(id)arg1;
- (void)newSensorTap;
- (void)startSensorTap;
- (unsigned long long)getCGMCircleError;
- (id)getErrorTitle;
- (void)updateErrorSecondaryButton:(id)arg1;
- (void)updateErrorButton:(id)arg1;
- (void)updateErrorDescription:(id)arg1;
- (void)updateErrorInstruction:(id)arg1;
- (void)updateErrorTitle:(id)arg1;
- (void)updateErrorImageView:(id)arg1;
- (void)updateErrorUI:(id)arg1;
- (void)setErrorTitle:(id)arg1;
- (void)resetCGMCircleError;
- (void)setCGMCircleError:(unsigned long long)arg1;
- (void)layoutSubviews;
- (void)initEGVErrorStateView;
- (id)createStackView:(id)arg1;
- (void)initErrorUI;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface SignedRequestHeader : NSObject
{
    NSString *_accId;
    NSString *_appId;
    _Bool _isZip;
    NSString *_timestamp;
    SignedRequestEncryptionKey *_encKey;
}

- (void).cxx_destruct;
- (id)getAccountId;
- (id)toJSON:(_Bool)arg1;
- (id)initWithAccId:(id)arg1 withAppId:(id)arg2 withIsPayloadZip:(_Bool)arg3 withPublicKeyIndex:(long long)arg4 withEncryptedEncryptionKey:(id)arg5 withEncryptedIV:(id)arg6;

@end

@interface CGMAlertStateDao : CGMBaseDao
{
}

- (id)getActiveAlarmingAlertTypes;
- (id)getActiveAlertTypes;
- (id)getAlertStatesInRange:(unsigned long long)arg1 last:(unsigned long long)arg2;
- (unsigned int)getMaxRecordId;
- (unsigned int)getMinRecordId;
- (void)resetDataModel;
- (void)setupDataModelIfNeeded;
- (id)getRecordsBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (void)setAllAlertsInactive;
- (void)updateAlertState:(id)arg1;
- (id)readAlertStateForType:(unsigned long long)arg1;
- (void)insertAlertState:(id)arg1;
- (void)insertIfNotExistsAlertState:(unsigned long long)arg1;

@end

@interface CGMVeilViewController : DXCMBaseViewController
{
}

- (long long)preferredInterfaceOrientationForPresentation;
- (unsigned long long)supportedInterfaceOrientations;

@end

@interface CGMEGVAnimatedStateView : CGMBaseEGVView
{
    long long totalTimeInSec;
    long long timeUsedInSec;
    long long timeLeftInSec;
    UILabel *_textLabel;
    UILabel *_timeLabel;
    DXCMRingView *_progressView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) DXCMRingView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) UILabel *timeLabel; // @synthesize timeLabel=_timeLabel;
@property(retain, nonatomic) UILabel *textLabel; // @synthesize textLabel=_textLabel;
- (id)getTimeLeftInString;
- (void)updateLabels;
- (void)initAnimatedCircleStuff;
- (long long)getTimeLeft;
- (void)updateTimeLeft:(long long)arg1;
- (void)initTime;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface CGMVoiceShortcutDataManager : NSObject
{
    NSArray *_voiceShortcuts;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(retain) NSArray *voiceShortcuts; // @synthesize voiceShortcuts=_voiceShortcuts;
- (void)updateVoiceShortcut;
- (id)init;

@end

@interface CGMReflectionViewController : DXCMBaseViewController <CGMSubscriberDataSource>
{
    _Bool _hasBeenDismissed;
    _Bool _showInsulin;
    DXCMCalloutSliderControl *_calloutView;
    UIView *_safeAreaView;
    UIView *_toolAreaView;
    UISegmentedControl *_timeScaleControl;
    UIButton *_exitButton;
    UIButton *_clarityButton;
    DexPlotView *_graphView;
    DXCMEventPlotView *_eventPlotView;
    DXCMInsulinPlotView *_insulinPlotView;
    DXCMTimeAxisPlotView *_timeAxisPlotView;
    UILabel *_eventLabel;
    UILabel *_insulinLabel;
    UILabel *_noEventsMessageLabel;
    UILabel *_noInsulinEventsMessageLabel;
    NSDate *_plotStartTime;
    NSDate *_plotEndTime;
    CGMReflectionViewDataSource *_dataSource;
    NSArray *_nonInsulinEvents;
    NSArray *_insulinEvents;
    NSTimer *_graphRefreshTimer;
    double _touchToleranceInTime;
}

- (void).cxx_destruct;
@property(nonatomic) double touchToleranceInTime; // @synthesize touchToleranceInTime=_touchToleranceInTime;
@property(retain, nonatomic) NSTimer *graphRefreshTimer; // @synthesize graphRefreshTimer=_graphRefreshTimer;
@property(retain, nonatomic) NSArray *insulinEvents; // @synthesize insulinEvents=_insulinEvents;
@property(retain, nonatomic) NSArray *nonInsulinEvents; // @synthesize nonInsulinEvents=_nonInsulinEvents;
@property(retain, nonatomic) CGMReflectionViewDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) NSDate *plotEndTime; // @synthesize plotEndTime=_plotEndTime;
@property(retain, nonatomic) NSDate *plotStartTime; // @synthesize plotStartTime=_plotStartTime;
@property(nonatomic) _Bool showInsulin; // @synthesize showInsulin=_showInsulin;
@property(retain, nonatomic) UILabel *noInsulinEventsMessageLabel; // @synthesize noInsulinEventsMessageLabel=_noInsulinEventsMessageLabel;
@property(retain, nonatomic) UILabel *noEventsMessageLabel; // @synthesize noEventsMessageLabel=_noEventsMessageLabel;
@property(retain, nonatomic) UILabel *insulinLabel; // @synthesize insulinLabel=_insulinLabel;
@property(retain, nonatomic) UILabel *eventLabel; // @synthesize eventLabel=_eventLabel;
@property(retain, nonatomic) DXCMTimeAxisPlotView *timeAxisPlotView; // @synthesize timeAxisPlotView=_timeAxisPlotView;
@property(retain, nonatomic) DXCMInsulinPlotView *insulinPlotView; // @synthesize insulinPlotView=_insulinPlotView;
@property(retain, nonatomic) DXCMEventPlotView *eventPlotView; // @synthesize eventPlotView=_eventPlotView;
@property(retain, nonatomic) DexPlotView *graphView; // @synthesize graphView=_graphView;
@property(retain, nonatomic) UIButton *clarityButton; // @synthesize clarityButton=_clarityButton;
@property(retain, nonatomic) UIButton *exitButton; // @synthesize exitButton=_exitButton;
@property(retain, nonatomic) UISegmentedControl *timeScaleControl; // @synthesize timeScaleControl=_timeScaleControl;
@property(retain, nonatomic) UIView *toolAreaView; // @synthesize toolAreaView=_toolAreaView;
@property(retain, nonatomic) UIView *safeAreaView; // @synthesize safeAreaView=_safeAreaView;
@property(retain, nonatomic) DXCMCalloutSliderControl *calloutView; // @synthesize calloutView=_calloutView;
@property(nonatomic) _Bool hasBeenDismissed; // @synthesize hasBeenDismissed=_hasBeenDismissed;
- (void)launchClarityAppIfInstalled;
- (void)notifySubscriberOfNewCGMDataUpdate:(unsigned long long)arg1;
- (void)updateViewAtIndex:(unsigned long long *)arg1 column:(unsigned long long *)arg2 width:(double *)arg3 height:(double *)arg4 fromSwimlanes:(id)arg5 eventClass:(Class)arg6 eventSubkind:(int)arg7;
- (void)updateDetailsInCallout:(id)arg1;
- (void)updateBannerInCallout:(id)arg1;
- (unsigned long long)findEventsNearDate:(id)arg1;
- (void)touchUpInCallout:(id)arg1;
- (void)touchDownInCallout:(id)arg1;
- (void)timeScaleControlChanged:(id)arg1;
- (void)updateTimeAxisGraph;
- (void)updateInsulinEventGraph;
- (void)updateNonInsulinEventGraph;
- (void)updateGraphs;
- (void)startGraphUpdateTimer;
- (void)exitReflectionView;
- (void)deviceOrientationDidChange:(id)arg1;
- (void)showFirstTimeHelpHUD;
- (void)calculateTouchTolerance;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)viewWillLayoutSubviews;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (long long)preferredInterfaceOrientationForPresentation;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)prefersStatusBarHidden;
- (_Bool)shouldAutorotate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DSAPILanguage : NSObject <NSCoding>
{
    NSString *_englishName;
    NSString *_name;
    NSString *_nativeName;
}

- (void).cxx_destruct;
@property(copy, nonatomic) NSString *nativeName; // @synthesize nativeName=_nativeName;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *englishName; // @synthesize englishName=_englishName;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface ShareExplanationViewController : DXCMBaseShareViewController
{
    UIImageView *_magGlassIcon;
    UIImageView *_shareStatusImageView;
}

- (void).cxx_destruct;
@property(nonatomic) __weak UIImageView *shareStatusImageView; // @synthesize shareStatusImageView=_shareStatusImageView;
@property(nonatomic) __weak UIImageView *magGlassIcon; // @synthesize magGlassIcon=_magGlassIcon;
- (void)viewDidLoad;

@end

@interface CGMCoachMarkViewController : DXCMBaseViewController
{
    UILabel *_messageLabel;
    NSString *_message;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *message; // @synthesize message=_message;
@property(retain, nonatomic) UILabel *messageLabel; // @synthesize messageLabel=_messageLabel;
- (void)popupTapped;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface CGMBaseDataObject : NSObject
{
}

- (void)setUnixTimeForGraphing:(int)arg1;
- (int)unixTimeForGraphing;
- (_Bool)isPropertyNameInvalid:(id)arg1;
- (void)doSomethingToAllProperties:(CDUnknownBlockType)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)dictionary;
- (id)description;
- (int)age;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface CGMKeyValueTable : NSObject
{
    _Bool _useCache;
    NSString *_tableName;
    NSMutableDictionary *_cache;
    NSObject<OS_dispatch_queue> *_cacheQueue;
    CGMDataMgr *_dataMgr;
}

+ (id)tableWithName:(id)arg1;
+ (id)share;
+ (id)crashlogs;
+ (id)transmitter;
+ (id)datapost;
+ (id)settings;
- (void).cxx_destruct;
@property _Bool useCache; // @synthesize useCache=_useCache;
@property(retain) CGMDataMgr *dataMgr; // @synthesize dataMgr=_dataMgr;
@property(retain) NSObject<OS_dispatch_queue> *cacheQueue; // @synthesize cacheQueue=_cacheQueue;
@property(retain) NSMutableDictionary *cache; // @synthesize cache=_cache;
@property(retain, nonatomic) NSString *tableName; // @synthesize tableName=_tableName;
- (void)reloadCache;
- (double)getDoubleForKey:(id)arg1 defaultValue:(double)arg2;
- (double)getDoubleForKey:(id)arg1;
- (void)setDouble:(double)arg1 forKey:(id)arg2;
- (unsigned int)getUIntForKey:(id)arg1 defaultValue:(unsigned int)arg2;
- (unsigned int)getUIntForKey:(id)arg1;
- (void)setUInt:(unsigned int)arg1 forKey:(id)arg2;
- (int)getIntForKey:(id)arg1 defaultValue:(int)arg2;
- (int)getIntForKey:(id)arg1;
- (void)setInt:(int)arg1 forKey:(id)arg2;
- (_Bool)getBoolForKey:(id)arg1 defaultValue:(_Bool)arg2;
- (_Bool)getBoolForKey:(id)arg1;
- (void)setBool:(_Bool)arg1 forKey:(id)arg2;
- (id)getDictionaryForKey:(id)arg1;
- (void)setDictionary:(id)arg1 forKey:(id)arg2;
- (void)setArray:(id)arg1 forKey:(id)arg2;
- (id)getArrayForKey:(id)arg1;
- (id)getDataForKey:(id)arg1;
- (void)setData:(id)arg1 forKey:(id)arg2;
- (id)getStringForKey:(id)arg1 defaultValue:(id)arg2;
- (id)getStringForKey:(id)arg1;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (void)eraseData;
- (id)queryAllValues;
- (void)deleteValueForKey:(id)arg1;
- (id)initWithName:(id)arg1 withCache:(_Bool)arg2;

@end

@interface CGMCPTheme : NSObject
{
}

+ (void)initTheme;

@end

@interface DCGMControlPointCharacteristicResponse : NSObject
{
    unsigned long long _responseCode;
    NSData *_payload;
}

- (void).cxx_destruct;
@property(retain) NSData *payload; // @synthesize payload=_payload;
@property(nonatomic) unsigned long long responseCode; // @synthesize responseCode=_responseCode;

@end

@interface CGMTrendViewController : DXCMBaseViewController <UIGestureRecognizerDelegate, CGMEventManagerViewDelegate>
{
    UIStackView *_trendStackView;
    CGMGraphStackSubview *_graphView;
    CGMEGVStackSubview *_egvView;
    DXCMBadgeBarItem *_calibrationBadgeButton;
    DXCMBadgeBarItem *_shareBadgeButton;
    DXCMSettingsStackSubview *_eventHistoryView;
    DXCMSettingsStackSubview *_settingsView;
    DXCMNotificationStackSubview *_notificationView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) DXCMNotificationStackSubview *notificationView; // @synthesize notificationView=_notificationView;
@property(retain, nonatomic) DXCMSettingsStackSubview *settingsView; // @synthesize settingsView=_settingsView;
@property(retain, nonatomic) DXCMSettingsStackSubview *eventHistoryView; // @synthesize eventHistoryView=_eventHistoryView;
@property(retain, nonatomic) DXCMBadgeBarItem *shareBadgeButton; // @synthesize shareBadgeButton=_shareBadgeButton;
@property(retain, nonatomic) DXCMBadgeBarItem *calibrationBadgeButton; // @synthesize calibrationBadgeButton=_calibrationBadgeButton;
@property(retain, nonatomic) CGMEGVStackSubview *egvView; // @synthesize egvView=_egvView;
@property(retain, nonatomic) CGMGraphStackSubview *graphView; // @synthesize graphView=_graphView;
@property(nonatomic) __weak UIStackView *trendStackView; // @synthesize trendStackView=_trendStackView;
- (void)refreshNotificationCardVisibility;
- (void)shouldShowNotificationsDisabledBanner:(CDUnknownBlockType)arg1;
- (_Bool)shouldShowUrgentLowSoonBanner;
- (_Bool)shouldShowUrgentLowBanner;
- (void)anyEventAdded;
- (void)hideShareButtonIfNeeded;
- (void)showCalibrateButton;
- (void)addDebugMenuGestures;
- (void)showEventEntry:(id)arg1;
- (void)onLongActingInsulinEventEntry:(id)arg1;
- (void)onFastActingInsulinEventEntry:(id)arg1;
- (void)onEventEntry;
- (void)onSoundButton:(id)arg1;
- (void)onShareButton:(id)arg1;
- (void)onCalibrationButton:(id)arg1;
- (void)onSettingsButton:(id)arg1;
- (void)onEventsButton:(id)arg1;
- (void)onNotificationTouch:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)enterReflectionView;
- (void)deviceOrientationDidChange:(id)arg1;
- (void)appDidEnterBackground:(id)arg1;
- (void)didBecomeActive:(id)arg1;
- (void)showWhatsNewIfNecessary;
- (_Bool)shouldShowNoAlarmsOrAlertsBanner;
@property(readonly, nonatomic) _Bool isInWarmup;
@property(readonly, nonatomic) _Bool isAnotherViewBeingShown;
- (_Bool)isBlockingViewBeingShown;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)didCancelAuthorization;
- (void)didCompleteAuthorization;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadViews;
- (void)viewDidLoad;
- (long long)preferredInterfaceOrientationForPresentation;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)prefersStatusBarHidden;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DCSAPIBaseAPI : NSObject
{
    _Bool _networkError;
    _Bool _serverDown;
    NSDictionary *_mDataDictionary;
    NSObject<OS_dispatch_semaphore> *_mSynchronousSemaphore;
}

- (void).cxx_destruct;
@property(retain) NSObject<OS_dispatch_semaphore> *mSynchronousSemaphore; // @synthesize mSynchronousSemaphore=_mSynchronousSemaphore;
@property(retain) NSDictionary *mDataDictionary; // @synthesize mDataDictionary=_mDataDictionary;
@property(readonly) _Bool serverDown; // @synthesize serverDown=_serverDown;
@property(readonly) _Bool networkError; // @synthesize networkError=_networkError;
- (id)arrayFromJSON:(id)arg1;
- (id)dictionaryFromJSON:(id)arg1;
- (id)stringFromJSON:(id)arg1;
- (id)toJSON:(id)arg1;
- (id)sendRequest:(id)arg1 urlString:(id)arg2 bodyData:(id)arg3;
- (id)init;

@end

@interface DCSAPICompatibilityAPI : DCSAPIBaseAPI
{
    NSString *serverURL;
    NSString *_appID;
}

+ (id)instance;
- (void).cxx_destruct;
@property(retain, nonatomic) NSString *appID; // @synthesize appID=_appID;
- (id)Ping;
- (id)GetMessage:(id)arg1 culture:(id)arg2;
- (id)CheckValidity:(id)arg1 appNumber:(id)arg2 appVersion:(id)arg3 deviceManufacturer:(id)arg4 deviceModel:(id)arg5 deviceOsName:(id)arg6 deviceOsVersion:(id)arg7;
- (_Bool)hasInternet;
- (id)makeCallWithObjectReply:(CDUnknownBlockType)arg1;
- (void)makeCallWithVoidReply:(CDUnknownBlockType)arg1;
- (id)getServer;
- (void)setServer:(id)arg1 withPhpAttached:(_Bool)arg2;
- (void)setServerToDefault;
- (id)init;

@end

@interface DXCMFileUtils : NSObject
{
}

+ (id)memoryFormatter:(long long)arg1;
+ (id)freeDiskSpaceFormatted;
+ (long long)freeDiskSpaceInSizeUnit:(unsigned long long)arg1;
+ (long long)totalDiskSpace;
+ (void)setRemainingDiskSpaceInMegaBytes:(int)arg1;
+ (id)plistPath:(id)arg1;
+ (_Bool)writePlist:(id)arg1 fileName:(id)arg2;
+ (id)readPlist:(id)arg1;
+ (id)listFilesInDirectory:(long long)arg1 withExtension:(id)arg2;
+ (_Bool)deleteAllFilesWithExtension:(id)arg1 inDirectory:(long long)arg2;
+ (void)doSomethingToAllFilesWithExtension:(id)arg1 inDirectory:(long long)arg2 something:(CDUnknownBlockType)arg3;
+ (_Bool)deleteFile:(id)arg1 ext:(id)arg2 inDirectory:(long long)arg3;
+ (_Bool)writeFile:(id)arg1 file:(id)arg2 ext:(id)arg3 inDirectory:(long long)arg4;
+ (id)readFile:(id)arg1 ext:(id)arg2 inDirectory:(long long)arg3;
+ (_Bool)doesFileExist:(id)arg1 ext:(id)arg2 inDirectory:(long long)arg3;
+ (id)makePathForFile:(id)arg1 ext:(id)arg2 inDirectory:(long long)arg3;
+ (id)getPathForDirectory:(long long)arg1;
+ (id)sharedDirectory;
+ (id)documentsDirectory;
+ (id)libraryDirectory;

@end

@interface CGMAppDelegate : UIResponder <DXCMLegalAgreementsProtocol, UIApplicationDelegate>
{
    NSString *_logName;
    UIWindow *_window;
    UIView *_previousAccessibilityView;
    UIWindow *_veilWindow;
    CGMShortcutsMenu *_shortcutsMenu;
    DXCMFMDBLogger *_sqliteLogger;
}

- (void).cxx_destruct;
@property(retain, nonatomic) DXCMFMDBLogger *sqliteLogger; // @synthesize sqliteLogger=_sqliteLogger;
@property(retain, nonatomic) CGMShortcutsMenu *shortcutsMenu; // @synthesize shortcutsMenu=_shortcutsMenu;
@property(retain, nonatomic) UIWindow *veilWindow; // @synthesize veilWindow=_veilWindow;
@property(retain, nonatomic) UIView *previousAccessibilityView; // @synthesize previousAccessibilityView=_previousAccessibilityView;
@property(retain, nonatomic) UIWindow *window; // @synthesize window=_window;
@property(retain, nonatomic) NSString *logName; // @synthesize logName=_logName;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2 fetchCompletionHandler:(CDUnknownBlockType)arg3;
- (void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2;
- (void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2;
- (void)applicationDidReceiveMemoryWarning:(id)arg1;
- (id)parseQueryString:(id)arg1;
- (void)installCrashHandler;
- (void)checkSetDatabaseKey;
- (void)configureLogger;
- (void)serverAcceptanceStatusReceived:(unsigned long long)arg1;
- (_Bool)application:(id)arg1 shouldAllowExtensionPointIdentifier:(id)arg2;
- (unsigned long long)application:(id)arg1 supportedInterfaceOrientationsForWindow:(id)arg2;
- (_Bool)application:(id)arg1 openURL:(id)arg2 options:(id)arg3;
- (void)application:(id)arg1 performFetchWithCompletionHandler:(CDUnknownBlockType)arg2;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (_Bool)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(CDUnknownBlockType)arg3;
- (void)startCheckingCriticalAlerts;
- (void)startupComplete;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (void)application:(id)arg1 didLaunchForFirstTimeWithOptions:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMDataPostServices : NSObject
{
    unsigned long long _backgroundTask;
}

+ (id)sharedInstance;
@property unsigned long long backgroundTask; // @synthesize backgroundTask=_backgroundTask;
@property int lastRefreshTokenCheckTime;
@property int lastPostSequenceNumber;
@property int lastPostTime;
@property int lastCheckTime;
@property _Bool wasLastPostSuccessful;
- (void)endBackgroundTask;
- (void)beginBackgroundTask;
- (void)doSomethingOnBackgroundTask:(CDUnknownBlockType)arg1;
- (void)post;
- (void)postFromQueue;
- (void)createAndQueuePost;
- (void)doPostLogic;
- (void)forcePost;
- (void)logDataPostEventWithException:(id)arg1;
- (void)handleTokenReset;
- (int)FindLastSequenceNumber;
- (int)timeNow;
- (void)handlePotentialPostEvent;
- (void)applicationWillEnterForeground;
- (void)userDidLogout;
- (void)applicationDidLaunchForFirstTime;
- (id)init;

@end

@interface DCGMServiceStartResponseRecord : NSObject
{
    unsigned char _responseStatus;
    unsigned int _ackSessionStartTime;
    DCGMServiceTransmitterTimeRecord *_timeRecord;
}

+ (id)recordWithData:(id)arg1;
- (void).cxx_destruct;
@property(readonly) DCGMServiceTransmitterTimeRecord *timeRecord; // @synthesize timeRecord=_timeRecord;
@property(readonly) unsigned int ackSessionStartTime; // @synthesize ackSessionStartTime=_ackSessionStartTime;
@property(readonly) unsigned char responseStatus; // @synthesize responseStatus=_responseStatus;
- (id)initWithValues:(unsigned char)arg1 transmitterTime:(unsigned int)arg2 sessionSignature:(unsigned int)arg3 sessionStartTime:(unsigned int)arg4;

@end

@interface DataConsentDeclineModalAlert : DXCMBaseModalViewController
{
    CDUnknownBlockType _declinePressedBlock;
    CDUnknownBlockType _cancelPressedBlock;
    DXCMBlockButton *_declineButton;
    DXCMBlockButton *_cancelButton;
    UIImageView *_notConnectedImageView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIImageView *notConnectedImageView; // @synthesize notConnectedImageView=_notConnectedImageView;
@property(retain, nonatomic) DXCMBlockButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(retain, nonatomic) DXCMBlockButton *declineButton; // @synthesize declineButton=_declineButton;
@property(copy, nonatomic) CDUnknownBlockType cancelPressedBlock; // @synthesize cancelPressedBlock=_cancelPressedBlock;
@property(copy, nonatomic) CDUnknownBlockType declinePressedBlock; // @synthesize declinePressedBlock=_declinePressedBlock;
- (void)processDeclineRequest;
- (void)layoutButtons:(id)arg1 bottomButton:(id)arg2;
- (void)viewDidLoad;
- (id)init;

@end

@interface CGMAlertTypes : NSObject
{
}

+ (_Bool)isDexcomCriticalAlert:(unsigned long long)arg1;
+ (unsigned long long)priorityForGlucoseAlertType:(unsigned long long)arg1;
+ (_Bool)isGlucoseAlertType:(unsigned long long)arg1;
+ (_Bool)isTransmitterAlertType:(unsigned long long)arg1;
+ (unsigned long long)alertTypeFromAlertName:(id)arg1;
+ (id)englishAlertName:(unsigned long long)arg1;
+ (id)notificationTextForGlucoseAlertType:(unsigned long long)arg1 egv:(id)arg2 userAlert:(id)arg3;
+ (id)getNameForAlertString:(id)arg1;
+ (id)getReportableNameForAlertType:(unsigned long long)arg1;
+ (id)getStringforAlertType:(unsigned long long)arg1;

@end

@interface DXCMCrashReportFilterDatabase : NSObject <KSCrashReportFilter>
{
}

- (id)base64CrashLog:(id)arg1;
- (double)unixTimestampFromCrashLog:(id)arg1;
- (void)filterReports:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DXCMCrashInstallation : KSCrashInstallation
{
}

+ (id)sharedInstance;
- (id)sink;
- (id)init;

@end

@interface CGMDaoMgr : NSObject
{
    FMDatabase *_db;
    NSMutableDictionary *_daos;
}

+ (_Bool)resolveInstanceMethod:(SEL)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableDictionary *daos; // @synthesize daos=_daos;
@property(retain, nonatomic) FMDatabase *db; // @synthesize db=_db;
- (id)daoWithType:(Class)arg1;
- (id)init;

// Remaining properties
@property(readonly, nonatomic) AlertHistoryDao *alertHistoryDao; // @dynamic alertHistoryDao;
@property(readonly, nonatomic) CGMAlertScheduleDao *alertScheduleDao; // @dynamic alertScheduleDao;
@property(readonly, nonatomic) CGMAlertStateDao *alertStateDao; // @dynamic alertStateDao;
@property(readonly, nonatomic) CGMBondedDevicesDao *bondedDevicesDao; // @dynamic bondedDevicesDao;
@property(readonly, nonatomic) CGMTransmitterCmdQueueDao *cmdDao; // @dynamic cmdDao;
@property(readonly, nonatomic) CGMContactsDao *contactsDao; // @dynamic contactsDao;
@property(readonly, nonatomic) CGMCoreDataModel *coreDataModel; // @dynamic coreDataModel;
@property(readonly, nonatomic) CGMDiagnosticDataDao *diagnosticDataDao; // @dynamic diagnosticDataDao;
@property(readonly, nonatomic) CGMEGVDao *egvDao; // @dynamic egvDao;
@property(readonly, nonatomic) CGMEventsDao *eventsDao; // @dynamic eventsDao;
@property(readonly, nonatomic) CGMHealthKitDao *healthKitDao; // @dynamic healthKitDao;
@property(readonly, nonatomic) CGMKeyValueTables *keyValueTables; // @dynamic keyValueTables;
@property(readonly, nonatomic) CGMSampleMealDao *mealDao; // @dynamic mealDao;
@property(readonly, nonatomic) CGMMeterDao *meterDao; // @dynamic meterDao;
@property(readonly, nonatomic) CGMSessionDao *sessionDao; // @dynamic sessionDao;
@property(readonly, nonatomic) CGMShareDataModel *shareDataModel; // @dynamic shareDataModel;
@property(readonly, nonatomic) CGMShareEGVDao *shareEGVDao; // @dynamic shareEGVDao;
@property(readonly, nonatomic) CGMShareRTEventsDao *shareRTEventsDao; // @dynamic shareRTEventsDao;
@property(readonly, nonatomic) CGMSupportLoggerDao *supportLoggerDao; // @dynamic supportLoggerDao;
@property(readonly, nonatomic) CGMUserAlertsDao *userAlertsDao; // @dynamic userAlertsDao;
@property(readonly, nonatomic) CGMWorkOutDao *workOutDao; // @dynamic workOutDao;

@end

@interface CGMHealthKitSettingsViewController : DXCMBaseViewController
{
    int _numRows;
    UIButton *_helpButton;
    UITableView *_tableView;
    double _headerHeight;
    double _estimatedFooterHeight;
    UIView *_sectionHeaderSharingAuthorized;
    UIView *_sectionHeaderSharingDenied;
    long long _authorizationStatus;
}

- (void).cxx_destruct;
@property(nonatomic) long long authorizationStatus; // @synthesize authorizationStatus=_authorizationStatus;
@property(retain, nonatomic) UIView *sectionHeaderSharingDenied; // @synthesize sectionHeaderSharingDenied=_sectionHeaderSharingDenied;
@property(retain, nonatomic) UIView *sectionHeaderSharingAuthorized; // @synthesize sectionHeaderSharingAuthorized=_sectionHeaderSharingAuthorized;
@property(nonatomic) double estimatedFooterHeight; // @synthesize estimatedFooterHeight=_estimatedFooterHeight;
@property(nonatomic) double headerHeight; // @synthesize headerHeight=_headerHeight;
@property(nonatomic) int numRows; // @synthesize numRows=_numRows;
@property(nonatomic) __weak UITableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) __weak UIButton *helpButton; // @synthesize helpButton=_helpButton;
- (void)setButtonAttributes:(_Bool)arg1;
- (id)createSectionHeader:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)didBecomeActive:(id)arg1;
- (void)dealloc;
- (void)viewWillAppear:(_Bool)arg1;
- (void)setupAccessibilityIds;
- (void)viewDidLoad;
- (void)updateUI;
- (void)onAllowHealthClick;
- (void)onHelpButton:(id)arg1;

@end

@interface TrendGraphAccessViewController : DXCMBaseShareViewController <UITableViewDelegate, UITableViewDataSource>
{
    _Bool _trendGraphEnabled;
    UITableView *_tableView;
    UIView *_headerView;
    UIView *_footerView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIView *footerView; // @synthesize footerView=_footerView;
@property(retain, nonatomic) UIView *headerView; // @synthesize headerView=_headerView;
@property(nonatomic) _Bool trendGraphEnabled; // @synthesize trendGraphEnabled=_trendGraphEnabled;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (id)createViewWithTitle:(id)arg1 titleOffsetTop:(double)arg2 withAccessibilityId:(id)arg3;
- (void)configureTableView;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMMeterDao : CGMBaseDao
{
}

- (id)fetchCGMMeterDictionaryAfterSystemTime:(double)arg1;
- (id)getCGMMeterRecordLastValid;
- (id)getCGMMeterRecordDictsInRange:(unsigned long long)arg1 last:(unsigned long long)arg2;
- (id)getCGMMeterRecordsInRange:(unsigned long long)arg1 last:(unsigned long long)arg2;
- (id)getCGMMeterRecordWithRecordId:(unsigned long long)arg1;
- (unsigned int)getMaxRecordId;
- (unsigned int)getMinRecordId;
- (void)resetDataModel;
- (void)setupDataModelIfNeeded;
- (void)eraseData;
- (void)insertTransmitterEnteredMeter:(id)arg1 meterValue:(unsigned long long)arg2 meterSystemTimeSec:(int)arg3 transmitterId:(id)arg4 transmitterTime:(int)arg5 meterEntryType:(id)arg6;
- (void)insertUserEnteredMeter:(id)arg1 meterValue:(unsigned long long)arg2 transmitterId:(id)arg3;
- (id)removeKey:(id)arg1 fromEveryDictionaryInArray:(id)arg2;
- (id)getRecordsBetweenStartTime:(int)arg1 andEndTime:(int)arg2;

@end

@interface DPQueue : NSObject
{
}

+ (id)keyOfLastPost:(id)arg1;
+ (id)keyOfFirstPost:(id)arg1;
+ (id)peekPostQueueFront;
+ (id)peekPostQueueRear;
+ (void)deQueuePost;
+ (void)queuePost:(id)arg1;
+ (int)countPostsInQueue;
+ (_Bool)isQueueEmpty;
+ (_Bool)writePostQueue:(id)arg1;
+ (id)readPostQueue;

@end

@interface DSAPIEgv : NSObject
{
    long long _display_time;
    long long _system_time;
    long long _world_time;
    long long _value;
    long long _trend;
}

@property long long trend; // @synthesize trend=_trend;
@property long long value; // @synthesize value=_value;
@property long long world_time; // @synthesize world_time=_world_time;
@property long long system_time; // @synthesize system_time=_system_time;
@property long long display_time; // @synthesize display_time=_display_time;
- (id)description;

@end

@interface DXCMBaseTableViewCell : UITableViewCell
{
}

- (id)myController;
- (void)cellTapped:(id)arg1;
- (void)setup;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

@end

@interface LetsGetStartedViewController : SetupWizardBaseViewController
{
}

- (void)next;
- (void)viewDidLoad;

@end

@interface CGMBaseDao : NSObject
{
    FMDatabase *_db;
    CGMDaoMgr *_daoMgr;
}

- (void).cxx_destruct;
@property(nonatomic) __weak CGMDaoMgr *daoMgr; // @synthesize daoMgr=_daoMgr;
@property(nonatomic) __weak FMDatabase *db; // @synthesize db=_db;
- (int)latestRecordedUpdateTimeSeconds;
- (id)getRecordsBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (void)resetDataModel;
- (void)setupDataModelIfNeeded;
- (id)initWithDatabase:(id)arg1 daoMgr:(id)arg2;

@end

@interface CGMDataModel : NSObject
{
    CGMDataMgr *_coreDbMgr;
    CGMDataMgr *_shareDbMgr;
}

+ (id)sharedDataModel;
- (void).cxx_destruct;
@property(readonly, nonatomic) CGMDataMgr *shareDbMgr; // @synthesize shareDbMgr=_shareDbMgr;
@property(readonly, nonatomic) CGMDataMgr *coreDbMgr; // @synthesize coreDbMgr=_coreDbMgr;
- (id)init;

@end

@interface CGMIntentManager : NSObject
{
}

+ (void)donateShortcut;
+ (id)getViewGlucoseIntent;

@end

@interface CGMCoreDataModel : CGMBaseDao
{
}

- (void)resetDataModel;
- (void)setupDataModelIfNeeded;

@end

@interface CGMExerciseEvent : CGMEventBase
{
    int _minutes;
}

+ (id)localNameForExerciseEventEnglish:(long long)arg1;
+ (id)localNameForExerciseEvent:(long long)arg1;
@property int minutes; // @synthesize minutes=_minutes;
- (id)summaryTitleForEvents:(id)arg1;
- (id)calloutDetails;
- (id)calloutTitle;
- (double)eventDuration;
- (id)humanReadableValueWithUnits;
- (id)dataPostSubType;
- (long long)event_type;

@end

@interface DSAPIWSExceptionTypeNamesArray : NSObject
{
}

+ (id)desc:(id)arg1;
+ (int)toExceptionType:(id)arg1;
+ (void)init;

@end

@interface DSAPIWebServiceException : NSException
{
    int _codeEnum;
    long long _httpResponseCode;
}

+ (id)exception:(id)arg1 httpResponseCode:(long long)arg2 message:(id)arg3;
@property long long httpResponseCode; // @synthesize httpResponseCode=_httpResponseCode;
@property int codeEnum; // @synthesize codeEnum=_codeEnum;
- (id)description;
- (id)initWithReason:(id)arg1 reason:(id)arg2 httpResponse:(long long)arg3 userInfo:(id)arg4;

@end

@interface DXCMSettingsStackSubview : UIControl
{
    _Bool _showDisclosureIndicator;
    _Bool _showPartialBottomSeparator;
    _Bool _showBottomSeparator;
    _Bool _showTopSeparator;
    UIImage *_icon;
    NSString *_title;
    UIImageView *_iconView;
    UILabel *_titleLabel;
    UIImageView *_disclosureView;
    UIView *_topSeparatorView;
    UIView *_bottomSeparatorView;
    NSLayoutConstraint *_rightMarginConstraint;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSLayoutConstraint *rightMarginConstraint; // @synthesize rightMarginConstraint=_rightMarginConstraint;
@property(retain, nonatomic) UIView *bottomSeparatorView; // @synthesize bottomSeparatorView=_bottomSeparatorView;
@property(retain, nonatomic) UIView *topSeparatorView; // @synthesize topSeparatorView=_topSeparatorView;
@property(retain, nonatomic) UIImageView *disclosureView; // @synthesize disclosureView=_disclosureView;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIImageView *iconView; // @synthesize iconView=_iconView;
@property(nonatomic) _Bool showTopSeparator; // @synthesize showTopSeparator=_showTopSeparator;
@property(nonatomic) _Bool showBottomSeparator; // @synthesize showBottomSeparator=_showBottomSeparator;
@property(nonatomic) _Bool showPartialBottomSeparator; // @synthesize showPartialBottomSeparator=_showPartialBottomSeparator;
@property(nonatomic) _Bool showDisclosureIndicator; // @synthesize showDisclosureIndicator=_showDisclosureIndicator;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic) UIImage *icon; // @synthesize icon=_icon;
- (void)setTitleAccessibilityId:(id)arg1;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface CGMViewManager : NSObject <DXCMBaseViewControllerDelegate, UINavigationControllerDelegate>
{
    CGMTrendViewController *_trendScreen;
    UIWindow *_mainAppWindow;
    UIWindow *_alertsWindow;
    double backgroundedTimestamp;
    _Bool _needLogin;
    UIViewController *_splashViewController;
    UINavigationController *_mainNavigationController;
}

+ (id)topMostControllerForWindow:(id)arg1;
+ (id)sharedManager;
- (void).cxx_destruct;
@property(retain, nonatomic) UINavigationController *mainNavigationController; // @synthesize mainNavigationController=_mainNavigationController;
@property _Bool needLogin; // @synthesize needLogin=_needLogin;
@property(nonatomic) UIViewController *splashViewController; // @synthesize splashViewController=_splashViewController;
- (void)baseViewControllerDidFinish:(id)arg1;
- (void)hideAlertWindow;
- (void)showAlertWindow;
- (id)getAlertsViewController;
- (id)getTrendViewController;
- (void)silentEnableUpgradeAlarmsInDaoForNewUserUpgrade;
- (void)applicationDidEnterBackground;
- (_Bool)isUserOnSetupWizard;
- (_Bool)shouldWarpToMainScreen;
- (void)applicationWillEnterForeground;
- (void)productTourFinished;
- (void)showShareWithViewController:(id)arg1;
- (void)showContactViewController;
- (void)showLogin;
- (_Bool)isShowingInitialSetupWizard;
- (void)showSetupWizard;
- (void)showTransmitterNotFoundWizard;
- (void)showNewSensorWizard;
- (void)showSettingsPairTransmitterFlow;
- (void)showSimplePairingWizard;
- (void)showDebugMenuForTap:(id)arg1;
- (void)showAccessErrorAlert;
- (id)reflectionViewIsVisible;
- (void)showViewController:(id)arg1;
- (void)showCalibrationWindow;
- (void)updateHomeWidget;
- (void)showMainScreen;
- (void)showMainTrendView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMDataMgr : NSObject
{
    NSString *_databasePath;
    FMDatabaseQueue *_queue;
    CGMDaoMgr *_mgr;
    NSString *_databaseKey;
}

+ (void)setupDatabase:(id)arg1 usingKey:(id)arg2 andLogErrors:(_Bool)arg3;
+ (id)sharedDatabaseWithFullPathname:(id)arg1 usingKey:(id)arg2;
- (void).cxx_destruct;
@property(retain, nonatomic) NSString *databaseKey; // @synthesize databaseKey=_databaseKey;
@property(retain, nonatomic) CGMDaoMgr *mgr; // @synthesize mgr=_mgr;
@property(retain, nonatomic) FMDatabaseQueue *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) NSString *databasePath; // @synthesize databasePath=_databasePath;
- (void)doInReturnlessTransaction:(CDUnknownBlockType)arg1;
- (id)doInTransaction:(CDUnknownBlockType)arg1;
- (void)doInReturnlessDatabase:(CDUnknownBlockType)arg1;
- (id)doInDatabase:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initAndOpenDatabaseWithFullPathname:(id)arg1 usingKey:(id)arg2;

@end

@interface BluetoothCheckViewController : SetupWizardBaseViewController
{
    _Bool _requiresBluetoothAuthorization;
    UIImageView *_notificationsImageView;
    UIImage *_notificationsImage;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool requiresBluetoothAuthorization; // @synthesize requiresBluetoothAuthorization=_requiresBluetoothAuthorization;
@property(retain, nonatomic) UIImage *notificationsImage; // @synthesize notificationsImage=_notificationsImage;
@property(retain, nonatomic) UIImageView *notificationsImageView; // @synthesize notificationsImageView=_notificationsImageView;
- (void)bluetoothCentralDidUpdateState:(id)arg1;
- (void)checkBluetoothStatus;
- (void)segueToNewTransmitterScreen;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

@end

@interface CGMSplashViewController : UIViewController
{
    _Bool _isAnimationComplete;
    _Bool _isStartupComplete;
    _Bool _hasPostedStartupNotification;
    UILabel *_versionLabel;
    UILabel *_copyrightLabel;
    UILabel *_welcomeLabel;
    UIImageView *_dexcomLogoImgView;
    UIImageView *_waveImageView;
    NSLayoutConstraint *_dexcomLogoImgViewYConstraint;
    NSLayoutConstraint *_waveImgViewYConstraint;
    UIImageView *_ceMarkImageView;
    UIImageView *_blueManImageView;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool hasPostedStartupNotification; // @synthesize hasPostedStartupNotification=_hasPostedStartupNotification;
@property _Bool isStartupComplete; // @synthesize isStartupComplete=_isStartupComplete;
@property _Bool isAnimationComplete; // @synthesize isAnimationComplete=_isAnimationComplete;
@property(nonatomic) __weak UIImageView *blueManImageView; // @synthesize blueManImageView=_blueManImageView;
@property(nonatomic) __weak UIImageView *ceMarkImageView; // @synthesize ceMarkImageView=_ceMarkImageView;
@property(nonatomic) __weak NSLayoutConstraint *waveImgViewYConstraint; // @synthesize waveImgViewYConstraint=_waveImgViewYConstraint;
@property(retain, nonatomic) NSLayoutConstraint *dexcomLogoImgViewYConstraint; // @synthesize dexcomLogoImgViewYConstraint=_dexcomLogoImgViewYConstraint;
@property(nonatomic) __weak UIImageView *waveImageView; // @synthesize waveImageView=_waveImageView;
@property(retain, nonatomic) UIImageView *dexcomLogoImgView; // @synthesize dexcomLogoImgView=_dexcomLogoImgView;
@property(nonatomic) __weak UILabel *welcomeLabel; // @synthesize welcomeLabel=_welcomeLabel;
@property(nonatomic) __weak UILabel *copyrightLabel; // @synthesize copyrightLabel=_copyrightLabel;
@property(nonatomic) __weak UILabel *versionLabel; // @synthesize versionLabel=_versionLabel;
- (void)moveOn;
- (void)animationComplete;
- (void)startupComplete;
- (double)delayDurationForLoggedIn:(_Bool)arg1;
- (double)animationDurationForLoggedIn:(_Bool)arg1;
- (_Bool)isInTestEnvironment;
- (void)animateWithUserLoggedIn:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)prefersStatusBarHidden;
- (void)viewDidLoad;

@end

@interface CGMEGVDao : CGMBaseDao
{
}

- (id)fetchCGMEGVDictionaryAfterSystemTime:(double)arg1;
- (id)getCGMEGVRecordDictsInRange:(unsigned long long)arg1 last:(unsigned long long)arg2;
- (id)getCGMEGVRecordsInRange:(unsigned long long)arg1 last:(unsigned long long)arg2;
- (id)getCGMEGVRecordWithRecordId:(unsigned long long)arg1;
- (unsigned int)getMaxRecordId;
- (unsigned int)getMinRecordId;
- (void)resetDataModel;
- (id)getEGVWithRecordId:(unsigned long long)arg1;
- (void)setupDataModelIfNeeded;
- (id)getRecordsToPlotBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)getRecordsBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)queryCurrentEGVDictionary;
- (id)getLastEGVFromSequenceNumber:(unsigned int)arg1;
- (id)getCurrentEGV;
- (_Bool)isDuplicateEGVRecordWithTxID:(id)arg1 withTxTimeStamp:(unsigned int)arg2 withGlucoseValue:(unsigned int)arg3;
- (unsigned long long)insertEGV:(id)arg1 glucoseSystemTime:(id)arg2 txId:(id)arg3 txTimeStamp:(unsigned int)arg4 txSessionStartTimeTicks:(unsigned int)arg5 txSessionOffsetTicks:(unsigned int)arg6 seqNum:(unsigned int)arg7 glucoseValue:(unsigned int)arg8 glucoseValueFlags:(unsigned int)arg9 glucoseValuePrediction:(unsigned int)arg10 trendArrow:(id)arg11 trendRate:(BOOL)arg12 algState:(id)arg13 isImmediateMatch:(_Bool)arg14 isDisplayOnly:(_Bool)arg15 wasBackFilled:(_Bool)arg16;
- (unsigned long long)insertEGV:(id)arg1;
- (_Bool)isAdjacentCalibrationGlucose:(id)arg1 lastRecord:(id)arg2;
- (id)getEgvDictsForSharing:(unsigned int)arg1 lastSuccessfulShareTime:(unsigned int)arg2;
- (id)getEgvRecordsForSharing:(unsigned int)arg1 lastSuccessfulShareTime:(unsigned int)arg2;
- (id)getLastEgvBeforeTime:(unsigned int)arg1 transmitterId:(id)arg2;
- (id)getEgvRecordsAfterTime:(unsigned int)arg1;
- (id)getLastNumEGVs:(unsigned long long)arg1;
- (void)deleteAllEgvValues;
- (void)populateWithMockDataBeginning:(id)arg1 ending:(id)arg2;

@end

@interface CGMMeter : CGMBaseDataObject
{
    unsigned int _recorded_system_time_sec;
    unsigned int _transmitter_system_time_sec;
    unsigned int _meter_system_time_sec;
    unsigned long long _record_id;
    NSString *_recorded_system_time;
    NSString *_recorded_display_time;
    NSString *_transmitter_id;
    long long _meter_value;
    NSString *_meter_system_time;
    NSString *_meter_display_time;
    NSString *_meter_entry_type;
}

- (void).cxx_destruct;
@property(copy, nonatomic) NSString *meter_entry_type; // @synthesize meter_entry_type=_meter_entry_type;
@property(copy, nonatomic) NSString *meter_display_time; // @synthesize meter_display_time=_meter_display_time;
@property(copy, nonatomic) NSString *meter_system_time; // @synthesize meter_system_time=_meter_system_time;
@property(nonatomic) unsigned int meter_system_time_sec; // @synthesize meter_system_time_sec=_meter_system_time_sec;
@property long long meter_value; // @synthesize meter_value=_meter_value;
@property(nonatomic) unsigned int transmitter_system_time_sec; // @synthesize transmitter_system_time_sec=_transmitter_system_time_sec;
@property(copy, nonatomic) NSString *transmitter_id; // @synthesize transmitter_id=_transmitter_id;
@property(copy, nonatomic) NSString *recorded_display_time; // @synthesize recorded_display_time=_recorded_display_time;
@property(copy, nonatomic) NSString *recorded_system_time; // @synthesize recorded_system_time=_recorded_system_time;
@property(nonatomic) unsigned int recorded_system_time_sec; // @synthesize recorded_system_time_sec=_recorded_system_time_sec;
@property(nonatomic) unsigned long long record_id; // @synthesize record_id=_record_id;

@end

@interface DXCMLogFormatter : NSObject <DDLogFormatter>
{
    NSDateFormatter *_dateFormatter;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSDateFormatter *dateFormatter; // @synthesize dateFormatter=_dateFormatter;
- (id)formatLogMessage:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NameAndEmailViewController : DXCMBaseShareViewController <CNContactPickerDelegate, ABPeoplePickerNavigationControllerDelegate>
{
    DXCMBaseTextField *_nameField;
    DXCMBaseTextField *_emailField;
    DXCMBaseTextField *_confirmEmailField;
    UILabel *_enterFollowerLabel;
    UILabel *_invitaionLabel;
    UIScrollView *_scrollview;
    UITextField *_activeField;
}

- (void).cxx_destruct;
@property(nonatomic) __weak UITextField *activeField; // @synthesize activeField=_activeField;
@property(nonatomic) __weak UIScrollView *scrollview; // @synthesize scrollview=_scrollview;
@property(nonatomic) __weak UILabel *invitaionLabel; // @synthesize invitaionLabel=_invitaionLabel;
@property(nonatomic) __weak UILabel *enterFollowerLabel; // @synthesize enterFollowerLabel=_enterFollowerLabel;
@property(retain, nonatomic) DXCMBaseTextField *confirmEmailField; // @synthesize confirmEmailField=_confirmEmailField;
@property(retain, nonatomic) DXCMBaseTextField *emailField; // @synthesize emailField=_emailField;
@property(retain, nonatomic) DXCMBaseTextField *nameField; // @synthesize nameField=_nameField;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)keyboardWillBeHidden:(id)arg1;
- (void)keyboardWasShown:(id)arg1;
- (void)checkAndSetEmail:(id)arg1;
- (void)checkAndSetName:(id)arg1;
- (void)contactPicker:(id)arg1 didSelectContactProperty:(id)arg2;
- (void)contactPicker:(id)arg1 didSelectContact:(id)arg2;
- (void)onInsertFromContactsButton:(id)arg1;
- (_Bool)addContactWithStatusHUD:(id)arg1 withName:(id)arg2 andEmail:(id)arg3;
- (void)onNextButton;
- (unsigned long long)supportedInterfaceOrientations;
- (void)dealloc;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)setupEmail2Cell;
- (void)setupEmail1Cell;
- (void)setupNameCell;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DXCMBaseTextField : UITextField <UITextFieldDelegate>
{
    UILabel *border;
    UILabel *background;
    _Bool enabled;
    struct CGRect realFrame;
    _Bool _showBorder;
    _Bool _allowSQLCharacters;
    _Bool _resignKeyboardOnReturn;
    int _maxLength;
    int _maxEntries;
    NSString *_allowedChars;
    UITextField *_nextTextField;
    CDUnknownBlockType _onReturn;
    id <UITextFieldDelegate> _realDelegate;
}

- (void).cxx_destruct;
@property(nonatomic) id <UITextFieldDelegate> realDelegate; // @synthesize realDelegate=_realDelegate;
@property(copy, nonatomic) CDUnknownBlockType onReturn; // @synthesize onReturn=_onReturn;
@property(nonatomic) _Bool resignKeyboardOnReturn; // @synthesize resignKeyboardOnReturn=_resignKeyboardOnReturn;
@property(retain, nonatomic) UITextField *nextTextField; // @synthesize nextTextField=_nextTextField;
@property(nonatomic) _Bool allowSQLCharacters; // @synthesize allowSQLCharacters=_allowSQLCharacters;
@property int maxEntries; // @synthesize maxEntries=_maxEntries;
@property int maxLength; // @synthesize maxLength=_maxLength;
@property(retain) NSString *allowedChars; // @synthesize allowedChars=_allowedChars;
@property _Bool showBorder; // @synthesize showBorder=_showBorder;
- (_Bool)isGreaterThanMaxEntries:(id)arg1;
- (void)applyAttributesToPlaceholder;
- (_Bool)respondsToSelector:(SEL)arg1;
- (SEL)unMonkeyTalkCMD:(SEL)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (_Bool)textFieldShouldEndEditing:(id)arg1;
- (_Bool)textFieldShouldClear:(id)arg1;
- (_Bool)textFieldShouldBeginEditing:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)setDelegate:(id)arg1;
- (void)enableEditing:(_Bool)arg1;
- (void)onLabelButton;
- (void)makeBorders;
- (void)selectAllText;
- (void)setHeight:(double)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)setup;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DCGMServiceCalibrationResponseRecord : NSObject
{
    unsigned char _responseStatus;
    unsigned short _crc;
}

+ (id)recordWithData:(id)arg1;
@property(readonly) unsigned short crc; // @synthesize crc=_crc;
@property(readonly) unsigned char responseStatus; // @synthesize responseStatus=_responseStatus;
- (id)initWithValues:(unsigned char)arg1;

@end

@interface CGMDayNightToggleCell : UITableViewCell
{
    UISegmentedControl *_segmentedDayNight;
}

- (void).cxx_destruct;
@property(nonatomic) __weak UISegmentedControl *segmentedDayNight; // @synthesize segmentedDayNight=_segmentedDayNight;

@end

@interface CGMMenuItem : NSObject
{
    unsigned int _menuId;
    NSString *_menuTitle;
    NSString *_detail;
    long long _switchStatus;
    NSString *_destinationStoryBoardName;
    NSString *_vc_identifier;
    NSDictionary *_onSelectDataDictionary;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *onSelectDataDictionary; // @synthesize onSelectDataDictionary=_onSelectDataDictionary;
@property(readonly, nonatomic) NSString *vc_identifier; // @synthesize vc_identifier=_vc_identifier;
@property(readonly, nonatomic) NSString *destinationStoryBoardName; // @synthesize destinationStoryBoardName=_destinationStoryBoardName;
@property(readonly, nonatomic) long long switchStatus; // @synthesize switchStatus=_switchStatus;
@property(readonly, nonatomic) NSString *detail; // @synthesize detail=_detail;
@property(readonly, nonatomic) NSString *menuTitle; // @synthesize menuTitle=_menuTitle;
@property(readonly, nonatomic) unsigned int menuId; // @synthesize menuId=_menuId;
- (id)initWithId:(unsigned int)arg1 title:(id)arg2;
- (id)initWithId:(unsigned int)arg1 switchStatus:(long long)arg2 title:(id)arg3;
- (id)initWithId:(unsigned int)arg1 title:(id)arg2 detail:(id)arg3;
- (id)initWithId:(unsigned int)arg1 title:(id)arg2 destinationStoryBoardName:(id)arg3 viewControllerIdentifier:(id)arg4;
- (id)initWithId:(unsigned int)arg1 title:(id)arg2 detail:(id)arg3 switchStatus:(long long)arg4 destinationStoryBoardName:(id)arg5 viewControllerIdentifier:(id)arg6 dataDictionary:(id)arg7;

@end

@interface BluetoothExplanationViewController : SetupWizardBaseViewController
{
    UIImageView *_bluetoothExplanationImageView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIImageView *bluetoothExplanationImageView; // @synthesize bluetoothExplanationImageView=_bluetoothExplanationImageView;
- (void)updateViewConstraints;
- (void)viewDidLoad;

@end

@interface CGMAlertsManager : DXCMAlertsManager
{
}

- (id)initAlertWithType:(unsigned long long)arg1 title:(id)arg2 message:(id)arg3;

@end

@interface DXCMPlayerViewController : AVPlayerViewController
{
}

- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (long long)modalPresentationStyle;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)videoDidFinishPlaying:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;

@end

@interface CGMAlertStateEntry : CGMBaseDataObject
{
    _Bool _dirty;
    unsigned int _lastAckTime;
    unsigned long long _alertType;
    NSString *_name;
    unsigned long long _alertState;
    unsigned long long _nextEscalation;
    long long _alertCount;
    long long _lifetimeAlertCount;
}

+ (id)stringForState:(unsigned long long)arg1;
+ (id)alertStateEntry:(unsigned long long)arg1 name:(id)arg2 alertState:(unsigned long long)arg3 nextEscalation:(unsigned long long)arg4 lastAckTime:(unsigned int)arg5 alertCount:(long long)arg6 lifetimeAlertCount:(long long)arg7;
- (void).cxx_destruct;
@property(nonatomic) _Bool dirty; // @synthesize dirty=_dirty;
@property(nonatomic) long long lifetimeAlertCount; // @synthesize lifetimeAlertCount=_lifetimeAlertCount;
@property(nonatomic) long long alertCount; // @synthesize alertCount=_alertCount;
@property(nonatomic) unsigned long long nextEscalation; // @synthesize nextEscalation=_nextEscalation;
@property(nonatomic) unsigned long long alertState; // @synthesize alertState=_alertState;
@property(readonly, nonatomic) unsigned int lastAckTime; // @synthesize lastAckTime=_lastAckTime;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) unsigned long long alertType; // @synthesize alertType=_alertType;
- (void)updateDatabaseIfNeeded:(id)arg1;
- (id)initWithAlertType:(unsigned long long)arg1;
- (id)initWithAlertType:(unsigned long long)arg1 name:(id)arg2 alertState:(unsigned long long)arg3 nextEscalation:(unsigned long long)arg4 lastAckTime:(unsigned int)arg5 alertCount:(long long)arg6 lifetimeAlertCount:(long long)arg7;

@end

@interface CGMShareDataModel : CGMBaseDao
{
}

- (void)resetDataModel;
- (void)setupDataModelIfNeeded;

@end

@interface DCGMService : DXCMBluetoothService
{
    DCGMServiceSyncTime *_DCGMSyncTime;
    DCGMServiceAuthentication *_DCGMAuthentication;
    DCGMServiceControlPoint *_DCGMControlPoint;
    DCGMServiceExchangeVariable *_DCGMExchangeVariable;
}

- (void).cxx_destruct;
@property(retain, nonatomic) DCGMServiceExchangeVariable *DCGMExchangeVariable; // @synthesize DCGMExchangeVariable=_DCGMExchangeVariable;
@property(retain, nonatomic) DCGMServiceControlPoint *DCGMControlPoint; // @synthesize DCGMControlPoint=_DCGMControlPoint;
@property(retain, nonatomic) DCGMServiceAuthentication *DCGMAuthentication; // @synthesize DCGMAuthentication=_DCGMAuthentication;
@property(retain, nonatomic) DCGMServiceSyncTime *DCGMSyncTime; // @synthesize DCGMSyncTime=_DCGMSyncTime;
- (void)serviceReady;
- (id)initWithName:(id)arg1 pPeripheral:(id)arg2;

@end

@interface DCGMServiceExchangeVariable : DXCMBluetoothCharacteristic
{
    NSMutableArray *_backfilledEGVs;
    NSMutableData *_dataStreamBuffer;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableData *dataStreamBuffer; // @synthesize dataStreamBuffer=_dataStreamBuffer;
@property(retain, nonatomic) NSMutableArray *backfilledEGVs; // @synthesize backfilledEGVs=_backfilledEGVs;
- (_Bool)verifyStreamCRC:(unsigned short)arg1;
- (id)getDataStreamBuffer:(id)arg1;
- (void)clearDataStreamBuffer;
- (void)doUpdateValue:(id)arg1;
- (id)initWithName:(id)arg1 pPeripheral:(id)arg2;

@end

@interface DCGMServiceSyncTime : DXCMBluetoothCharacteristic
{
}

- (id)read;
- (id)initWithName:(id)arg1 pPeripheral:(id)arg2;

@end

@interface DCGMServiceAuthentication : DCGMControlPointCharacteristic
{
}

- (_Bool)writeRequestBond:(_Bool)arg1 delay:(double)arg2;
- (_Bool)writeConnectionKeepAlive:(unsigned char)arg1;
- (id)writeDisplayHash:(id)arg1;
- (id)readChallengeUsingAppKey:(id)arg1;
- (id)readChallengeUsingTxId:(id)arg1;
- (id)initWithName:(id)arg1 pPeripheral:(id)arg2;

@end

@interface DCGMServiceControlPoint : DCGMControlPointCharacteristic
{
}

- (_Bool)setAdvertisementParameters:(unsigned short)arg1 advertDuration:(unsigned short)arg2;
- (void)changeCommunicationIntervalTo:(unsigned char)arg1;
- (unsigned char)getCommunicationInterval;
- (void)accelerateTimeBy:(unsigned int)arg1;
- (_Bool)eraseDatabase;
- (_Bool)changeAppLevelKey:(id)arg1;
- (void)disconnect;
- (id)calibrate:(unsigned short)arg1 calTime:(unsigned int)arg2;
- (id)stopSensor:(unsigned int)arg1;
- (id)startSensorWithCommand:(id)arg1;
- (id)startSensor:(unsigned int)arg1 utcStartTime:(unsigned int)arg2 m0:(unsigned short)arg3 mf:(unsigned short)arg4;
- (id)startSensor:(unsigned int)arg1 utcStartTime:(unsigned int)arg2;
- (id)readTransmitterBattery;
- (id)readRawSensorCounts;
- (id)readCalBounds;
- (id)streamRecordFromResponse:(id)arg1 sender:(id)arg2;
- (id)readEncryptionInfo;
- (id)readManifest;
- (id)readPrivateData:(unsigned int)arg1 endTime:(unsigned int)arg2;
- (id)readStreamEGV:(unsigned int)arg1 endTime:(unsigned int)arg2;
- (id)readPredictiveEGV;
- (id)readTransmitterTime;
- (id)readTransmitterExtVersionWithWarmup;
- (id)readTransmitterExtVersion;
- (id)readTransmitterVersion;
- (id)readFirmwareVersion;
- (void)logError:(unsigned long long)arg1 operation:(id)arg2;
- (id)initWithName:(id)arg1 pPeripheral:(id)arg2;

@end

@interface DCGMServiceFirmwareVersionRecord : NSObject
{
    unsigned char _HWVersion;
    unsigned short _NordicASICHWID;
    CDStruct_e4c65b9a _NordicSoftDeviceVersion;
    CDStruct_f1f8955b _MSPVersion;
    CDStruct_f1f8955b _NordicVersion;
}

+ (id)recordWithData:(id)arg1;
@property(readonly) unsigned short NordicASICHWID; // @synthesize NordicASICHWID=_NordicASICHWID;
@property(readonly) CDStruct_e4c65b9a NordicSoftDeviceVersion; // @synthesize NordicSoftDeviceVersion=_NordicSoftDeviceVersion;
@property(readonly) unsigned char HWVersion; // @synthesize HWVersion=_HWVersion;
@property(readonly) CDStruct_f1f8955b NordicVersion; // @synthesize NordicVersion=_NordicVersion;
@property(readonly) CDStruct_f1f8955b MSPVersion; // @synthesize MSPVersion=_MSPVersion;
- (id)initWithValues:(CDStruct_f1f8955b)arg1 NordicVersion:(CDStruct_f1f8955b)arg2 HWVersion:(unsigned char)arg3 NordicSoftDeviceVersion:(CDStruct_e4c65b9a)arg4 NordicASICHWID:(unsigned short)arg5;

@end

@interface DXCMWormholeReader : NSObject <CGMSubscriberDataSource>
{
    MMWormhole *_wormhole;
}

+ (void)addLogStatement:(id)arg1 logLevel:(unsigned long long)arg2 location:(id)arg3 time:(long long)arg4;
+ (id)sharedInstance;
- (void).cxx_destruct;
@property(retain, nonatomic) MMWormhole *wormhole; // @synthesize wormhole=_wormhole;
- (void)processCommands;
- (void)notifySubscriberOfNewCGMDataUpdate:(unsigned long long)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMHKWorkOutEvent : CGMHealthkitEventBase
{
    int _workout_duration;
    double _workout_energy_burned;
    NSString *_workout_type;
}

- (void).cxx_destruct;
@property int workout_duration; // @synthesize workout_duration=_workout_duration;
@property(retain) NSString *workout_type; // @synthesize workout_type=_workout_type;
@property double workout_energy_burned; // @synthesize workout_energy_burned=_workout_energy_burned;
- (id)initWithDictionary:(id)arg1;

@end

@interface CGMSQLiteErrorManager : NSObject <DXCMNotificationDelegate>
{
    _Bool _canSendSqlErrorNotifications;
    unsigned long long _currentErrorLevel;
}

+ (id)sharedInstance;
@property(nonatomic) unsigned long long currentErrorLevel; // @synthesize currentErrorLevel=_currentErrorLevel;
@property(nonatomic) _Bool canSendSqlErrorNotifications; // @synthesize canSendSqlErrorNotifications=_canSendSqlErrorNotifications;
- (void)logErrorToBusinessAnalyticsWithErrorString:(id)arg1 withSqlString:(id)arg2;
- (id)getErrorStringFromError:(id)arg1;
- (_Bool)isRecoverableError:(id)arg1;
- (void)handleNotification;
- (_Bool)updateCurrentErrorLevelWithErrorString:(id)arg1 SQLString:(id)arg2;
- (_Bool)isErrorCode:(int)arg1;
- (void)sendAlertOrNotificationIfNeeded;
- (_Bool)isSqlError;
- (void)registerSQLError:(id)arg1 SQLString:(id)arg2;
- (void)startPostingSQLiteErrorNotifications;
- (id)init;
- (void)processNotificationAppWasAlreadyInForeground:(id)arg1 alertType:(unsigned long long)arg2;
- (void)processNotificationAppCameToForeground:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMAlertScheduleEditDaysViewController : DXCMBaseViewController <UITableViewDelegate, UITableViewDataSource>
{
    CGMAlertSchedule *_alertSchedule;
    NSMutableDictionary *_daysSelectionStatus;
    id <CGMAlertScheduleDaysSelectionChangedDelegate> _alertScheduleDelgate;
    UITableView *_tableView;
    UILabel *_descriptionLabel;
    NSArray *_cellTitles;
    NSDictionary *_daysDictionary;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSDictionary *daysDictionary; // @synthesize daysDictionary=_daysDictionary;
@property(retain, nonatomic) NSArray *cellTitles; // @synthesize cellTitles=_cellTitles;
@property(nonatomic) __weak UILabel *descriptionLabel; // @synthesize descriptionLabel=_descriptionLabel;
@property(nonatomic) __weak UITableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) __weak id <CGMAlertScheduleDaysSelectionChangedDelegate> alertScheduleDelgate; // @synthesize alertScheduleDelgate=_alertScheduleDelgate;
@property(retain, nonatomic) NSMutableDictionary *daysSelectionStatus; // @synthesize daysSelectionStatus=_daysSelectionStatus;
@property(retain, nonatomic) CGMAlertSchedule *alertSchedule; // @synthesize alertSchedule=_alertSchedule;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)willMoveToParentViewController:(id)arg1;
- (void)saveAlertScheduleDays;
- (_Bool)selectionStatusForDay:(long long)arg1;
- (void)setupDataSource;
- (void)setupTableView;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EnterBGViewController : DXCMBaseViewController <UITextFieldDelegate>
{
    double _animDuration;
    unsigned long long _animCurve;
    DXCMBaseTextField *_calValueTextField;
    UILabel *_labelUnits;
    UILabel *_calHelpInstructions;
    UIScrollView *_contentScrollView;
    UIView *_contentView;
    DXCMBlockButton *_learnMoreButton;
    UIView *_keyboardSpacerView;
    NSLayoutConstraint *_keyboardHeight;
    UIBarButtonItem *_cancelBarBtn;
    UIBarButtonItem *_saveBarBtn;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIBarButtonItem *saveBarBtn; // @synthesize saveBarBtn=_saveBarBtn;
@property(retain, nonatomic) UIBarButtonItem *cancelBarBtn; // @synthesize cancelBarBtn=_cancelBarBtn;
@property(retain, nonatomic) NSLayoutConstraint *keyboardHeight; // @synthesize keyboardHeight=_keyboardHeight;
@property(retain, nonatomic) UIView *keyboardSpacerView; // @synthesize keyboardSpacerView=_keyboardSpacerView;
@property(retain, nonatomic) DXCMBlockButton *learnMoreButton; // @synthesize learnMoreButton=_learnMoreButton;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) UIScrollView *contentScrollView; // @synthesize contentScrollView=_contentScrollView;
@property(retain, nonatomic) UILabel *calHelpInstructions; // @synthesize calHelpInstructions=_calHelpInstructions;
@property(retain, nonatomic) UILabel *labelUnits; // @synthesize labelUnits=_labelUnits;
@property(retain, nonatomic) DXCMBaseTextField *calValueTextField; // @synthesize calValueTextField=_calValueTextField;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)onSave;
- (void)showAlert:(id)arg1 message:(id)arg2;
- (void)closeView;
- (id)getCalibrationHelpText;
- (void)setupUIElements;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DCGMServiceManifestRecord : NSObject
{
    unsigned char _revision;
    NSData *_manifestData;
}

+ (id)recordWithData:(id)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) NSData *manifestData; // @synthesize manifestData=_manifestData;
@property(nonatomic) unsigned char revision; // @synthesize revision=_revision;

@end

@interface TransmitterExplanationViewController : SetupWizardBaseViewController
{
}

- (void)viewDidLoad;

@end

@interface DCGMServiceSyncTimeRecord : NSObject
{
    unsigned short _absSyncTime;
    unsigned short _relSyncTime;
    unsigned short _advertInterval;
    unsigned short _advertDuration;
    unsigned int _communicationInterval;
}

+ (id)recordWithData:(id)arg1;
@property(readonly) unsigned short advertDuration; // @synthesize advertDuration=_advertDuration;
@property(readonly) unsigned short advertInterval; // @synthesize advertInterval=_advertInterval;
@property(readonly) unsigned int communicationInterval; // @synthesize communicationInterval=_communicationInterval;
@property(readonly) unsigned short relSyncTime; // @synthesize relSyncTime=_relSyncTime;
@property(readonly) unsigned short absSyncTime; // @synthesize absSyncTime=_absSyncTime;
- (unsigned long long)absSyncTimeMs;
- (id)initWithValues:(unsigned short)arg1 relSyncTime:(unsigned short)arg2 communicationInterval:(unsigned int)arg3 advertInterval:(unsigned short)arg4 advertDuration:(unsigned short)arg5;

@end

@interface CGMDiskSpaceManager : NSObject <CGMSubscriberDataSource>
{
    unsigned long long _lastAlertType;
}

+ (id)sharedInstance;
@property(readonly, nonatomic) unsigned long long lastAlertType; // @synthesize lastAlertType=_lastAlertType;
- (id)getActivitySubtypeFromAlertType:(unsigned long long)arg1;
- (void)logDiskLowWithDiskSpace:(long long)arg1 withAlertType:(unsigned long long)arg2;
- (unsigned long long)getAlertTypeFromDiskSpace:(long long)arg1;
- (void)checkDiskSpace;
- (void)startCheckingDiskSpace;
- (id)init;
- (void)notifySubscriberOfNewCGMDataUpdate:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DXCMTransmitterAuthentication : NSObject
{
}

- (id)calculateHash:(id)arg1 clearData:(id)arg2;
- (id)calculateHash:(id)arg1 clearText:(id)arg2;
- (id)hashDisplayChallengeRequest:(id)arg1 transmitterChallengeValue:(id)arg2;
- (_Bool)IsTransmitterHashValid:(id)arg1 displayChallengeValue:(id)arg2 transmitterHash:(id)arg3;
- (unsigned char)hashTransmitterDiscovery:(id)arg1;

@end

@interface TrendViewBinning : NSObject
{
}

+ (id)populateLocalEGVList:(id)arg1;
+ (int)binForLatestEGV:(id)arg1;

@end

@interface CGMAccessibilityHelper : NSObject
{
}

+ (id)phraseForRate:(long long)arg1;
+ (id)phraseForEGV:(id)arg1 andTrend:(long long)arg2;

@end

@interface DPRealTimeEvent : DPBaseObject
{
    long long _RecordId;
    double _RecordedTime;
    unsigned long long _RecordType;
    unsigned long long _RecordSubType;
    NSArray *_Records;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSArray *Records; // @synthesize Records=_Records;
@property(nonatomic) unsigned long long RecordSubType; // @synthesize RecordSubType=_RecordSubType;
@property(nonatomic) unsigned long long RecordType; // @synthesize RecordType=_RecordType;
@property(nonatomic) double RecordedTime; // @synthesize RecordedTime=_RecordedTime;
@property(nonatomic) long long RecordId; // @synthesize RecordId=_RecordId;
- (id)removeTimestampFromDictionary:(id)arg1;
- (id)getPayloadRecordAtIndex:(unsigned long long)arg1;
- (id)initRealTimeEvent:(unsigned long long)arg1 withRecordSubType:(unsigned long long)arg2 withRecords:(id)arg3 withRecordedTime:(double)arg4 withRecordId:(long long)arg5;

@end

@interface DXCMApplication : UIApplication
{
}

- (_Bool)sendAction:(SEL)arg1 to:(id)arg2 from:(id)arg3 forEvent:(id)arg4;

@end

@interface DXCMBluetoothCharacteristic : NSObject
{
    _Bool _setNotifyPending;
    _Bool _writePending;
    _Bool _readPending;
    NSString *_name;
    CBUUID *_uuid;
    CBCharacteristic *_cbCharacteristic;
    DXCMBluetoothPeripheral *_dxcmPeripheral;
    NSError *_bleError;
    NSObject<OS_dispatch_semaphore> *_setNotifyResponseSem;
    NSObject<OS_dispatch_semaphore> *_writeResponseSem;
    NSObject<OS_dispatch_semaphore> *_readResponseSem;
}

- (void).cxx_destruct;
@property(retain) NSObject<OS_dispatch_semaphore> *readResponseSem; // @synthesize readResponseSem=_readResponseSem;
@property _Bool readPending; // @synthesize readPending=_readPending;
@property(retain) NSObject<OS_dispatch_semaphore> *writeResponseSem; // @synthesize writeResponseSem=_writeResponseSem;
@property _Bool writePending; // @synthesize writePending=_writePending;
@property(retain) NSObject<OS_dispatch_semaphore> *setNotifyResponseSem; // @synthesize setNotifyResponseSem=_setNotifyResponseSem;
@property _Bool setNotifyPending; // @synthesize setNotifyPending=_setNotifyPending;
@property(nonatomic) __weak NSError *bleError; // @synthesize bleError=_bleError;
@property(nonatomic) __weak DXCMBluetoothPeripheral *dxcmPeripheral; // @synthesize dxcmPeripheral=_dxcmPeripheral;
@property(retain) CBCharacteristic *cbCharacteristic; // @synthesize cbCharacteristic=_cbCharacteristic;
@property(retain) CBUUID *uuid; // @synthesize uuid=_uuid;
@property(retain) NSString *name; // @synthesize name=_name;
- (void)doUpdateValue:(id)arg1;
- (void)didUpdateValue:(id)arg1 withValue:(id)arg2;
- (id)readValue;
- (void)didWriteValue:(id)arg1;
- (void)writeValueNoAck:(id)arg1;
- (_Bool)writeValueAck:(id)arg1 withCustomTimeout:(unsigned long long)arg2;
- (_Bool)writeValueAck:(id)arg1;
- (void)didUpdateNotificationState:(id)arg1;
- (_Bool)setNotify:(_Bool)arg1;
- (void)characteristicDiscovered:(id)arg1 error:(id)arg2;
@property(readonly, nonatomic) _Bool isDiscovered;
- (id)initWithName:(id)arg1 pUUID:(id)arg2 pPeripheral:(id)arg3;

@end

@interface DXCMTransmitterEGVBackFillGapFinder : NSObject
{
    NSArray *_records;
    CGMEGV *_latest;
    CGMEGV *_previous;
    CGMEGV *_previousSequence;
    unsigned int _minStartTime;
    long long _currentStartIndex;
    long long _maxIndex;
    unsigned int _gapStart;
    unsigned int _gapEnd;
}

- (void).cxx_destruct;
@property(readonly) unsigned int gapEnd; // @synthesize gapEnd=_gapEnd;
@property(readonly) unsigned int gapStart; // @synthesize gapStart=_gapStart;
- (_Bool)isSessionStopped:(unsigned char)arg1;
- (_Bool)isZeroSequenceNumberExpected:(id)arg1;
- (void)setPreviousGlucose:(id)arg1;
- (_Bool)hasGap;
- (id)initWithGlucoseRecords:(id)arg1 minStartTime:(unsigned int)arg2;

@end

@interface DXCMTitleSubtitleTableViewCell : DXCMBaseTableViewCell
{
}

- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface CGMFixedAlerts : NSObject
{
    NSDictionary *_fixedAlerts;
}

+ (id)fixedAlertForAlertType:(unsigned long long)arg1;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)alertForType:(unsigned long long)arg1;
- (id)init;

@end

@interface TechSupportHelper : NSObject <MFMailComposeViewControllerDelegate>
{
    _Bool _blockCalls;
    _Bool _blockEmails;
    NSString *_logName;
    double _duration;
}

+ (id)phoneNumberForSupportType:(long long)arg1;
+ (id)sharedInstance;
- (void).cxx_destruct;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property _Bool blockEmails; // @synthesize blockEmails=_blockEmails;
@property _Bool blockCalls; // @synthesize blockCalls=_blockCalls;
@property(retain, nonatomic) NSString *logName; // @synthesize logName=_logName;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(long long)arg2 error:(id)arg3;
- (void)contactSupportEmail:(id)arg1 subject:(id)arg2 params:(id)arg3 supportType:(long long)arg4;
- (void)cannotMakeCallsTechSupportHandlerWithSupportType:(long long)arg1;
- (void)callTechSupportWithSupportType:(long long)arg1;
- (_Bool)canCallTechSupport;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DXCMTimeSync : NSObject
{
    _Bool _timeSyncEnabled;
    NSString *_logName;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(retain, nonatomic) NSString *logName; // @synthesize logName=_logName;
@property(nonatomic) _Bool timeSyncEnabled; // @synthesize timeSyncEnabled=_timeSyncEnabled;
- (void)resetTimeSync;
- (_Bool)isTimeLossEvent;
- (long long)getCurrentPhoneTimeDelta;
- (_Bool)updateServerTime;
- (void)userChangedSystemClock;
- (void)significantTimeChange;
- (void)updateTransmitterTime:(unsigned int)arg1;
- (void)dealloc;
- (id)init;

@end

@interface DataConsentRequiredModalViewController : DXCMBaseModalViewController
{
    unsigned long long _entrypoint;
    DXCMBlockButton *_iUnderstandButton;
    UIImageView *_connectedImageView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIImageView *connectedImageView; // @synthesize connectedImageView=_connectedImageView;
@property(retain, nonatomic) DXCMBlockButton *iUnderstandButton; // @synthesize iUnderstandButton=_iUnderstandButton;
@property(nonatomic) unsigned long long entrypoint; // @synthesize entrypoint=_entrypoint;
- (void)onCancel;
- (void)updateViewConstraints;
- (void)viewDidLoad;
- (id)init;

@end

@interface ShareInternetExplanationViewController : DXCMBaseShareViewController
{
    UILabel *_internetExplainationLabel;
}

- (void).cxx_destruct;
@property(nonatomic) __weak UILabel *internetExplainationLabel; // @synthesize internetExplainationLabel=_internetExplainationLabel;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface ShareThingsHappenViewController : DXCMBaseShareViewController
{
    UIImageView *_hikerNoServiceImageView;
}

- (void).cxx_destruct;
@property(nonatomic) __weak UIImageView *hikerNoServiceImageView; // @synthesize hikerNoServiceImageView=_hikerNoServiceImageView;
- (void)viewDidLoad;

@end

@interface RealtimeEventResponseContainer : NSObject
{
    NSString *_content;
    NSString *_hmac;
    _Bool _isZip;
}

- (void).cxx_destruct;
- (id)getContent:(id)arg1;
- (id)initWithData:(id)arg1;

@end

@interface CGMGraphHeightViewController : DXCMBaseViewController
{
    UITableView *_tableView;
}

- (void).cxx_destruct;
@property(nonatomic) __weak UITableView *tableView; // @synthesize tableView=_tableView;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface FollowersSettingsViewController : DXCMBaseShareViewController <CGMAlertLimitChangedDelegate, _TtP3CGM27CGMTimeValueChangedDelegate_>
{
    DXCMCGMBaseSwitchTableViewCell *urgentLowEnabledCell;
    DXCMCGMBaseTableViewCell *urgentLowThresholdCell;
    DXCMCGMBaseSwitchTableViewCell *lowEnabledCell;
    DXCMCGMBaseTableViewCell *lowThresholdCell;
    DXCMCGMBaseTableViewCell *lowDelayCell;
    DXCMCGMBaseSwitchTableViewCell *highEnabledCell;
    DXCMCGMBaseTableViewCell *highThresholdCell;
    DXCMCGMBaseTableViewCell *highDelayCell;
    DXCMCGMBaseSwitchTableViewCell *noDataEnabledCell;
    DXCMCGMBaseTableViewCell *noDataDelayCell;
    UITableView *_tableView;
    UILabel *_headerLabel;
    NSString *_selectedAlertType;
    CGMEditAlertLimitViewController *_childViewController;
    _TtC3CGM25CGMEditTimeViewController *_childTimeViewController;
}

- (void).cxx_destruct;
@property(nonatomic) __weak _TtC3CGM25CGMEditTimeViewController *childTimeViewController; // @synthesize childTimeViewController=_childTimeViewController;
@property(nonatomic) __weak CGMEditAlertLimitViewController *childViewController; // @synthesize childViewController=_childViewController;
@property(retain, nonatomic) NSString *selectedAlertType; // @synthesize selectedAlertType=_selectedAlertType;
@property(retain, nonatomic) UILabel *headerLabel; // @synthesize headerLabel=_headerLabel;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void)timeValueChanged:(id)arg1;
- (void)alertLimitChanged:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)onCellSwitchClick:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)alertNameFromSection:(int)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (id)pickerBaseCellForAlert;
- (id)enableBaseSwitchCellForAlert:(int)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DXCMFMDBLogEntry : NSObject
{
    NSNumber *_context;
    NSNumber *_level;
    NSString *_message;
    NSString *_location;
    NSDate *_timestamp;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
@property(retain, nonatomic) NSString *location; // @synthesize location=_location;
@property(retain, nonatomic) NSString *message; // @synthesize message=_message;
@property(retain, nonatomic) NSNumber *level; // @synthesize level=_level;
@property(retain, nonatomic) NSNumber *context; // @synthesize context=_context;
- (id)initWithLogMessage:(id)arg1;

@end

@interface DXCMFMDBLogger : DDAbstractDatabaseLogger <DDLogger>
{
    NSString *_logDirectory;
    NSMutableArray *_pendingLogEntries;
    FMDatabase *_database;
}

- (void).cxx_destruct;
@property(retain, nonatomic) FMDatabase *database; // @synthesize database=_database;
@property(retain, nonatomic) NSMutableArray *pendingLogEntries; // @synthesize pendingLogEntries=_pendingLogEntries;
@property(retain, nonatomic) NSString *logDirectory; // @synthesize logDirectory=_logDirectory;
- (void)db_saveAndDelete;
- (void)db_delete;
- (void)db_save;
- (_Bool)db_log:(id)arg1;
- (void)openDatabase;
- (void)validateLogDirectory;
- (id)initWithLogDirectory:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) id <DDLogFormatter> logFormatter;
@property(readonly, copy, nonatomic) NSString *loggerName;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *loggerQueue;
@property(readonly) Class superclass;

@end

@interface DXCMBluetoothCentral : NSObject <CBCentralManagerDelegate>
{
    NSMutableArray *_peripherals;
    NSNumber *_bluetoothEnabledOverride;
    CBCentralManager *_centralManager;
    NSObject<OS_dispatch_queue> *_centralManagerQueue;
    NSMutableArray *_scanningUUIDArray;
}

+ (id)getBondedDevices;
+ (_Bool)isPeripheralBonded:(id)arg1;
+ (id)sharedCentral;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableArray *scanningUUIDArray; // @synthesize scanningUUIDArray=_scanningUUIDArray;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *centralManagerQueue; // @synthesize centralManagerQueue=_centralManagerQueue;
@property(retain) CBCentralManager *centralManager; // @synthesize centralManager=_centralManager;
@property(retain, nonatomic) NSNumber *bluetoothEnabledOverride; // @synthesize bluetoothEnabledOverride=_bluetoothEnabledOverride;
@property(retain) NSMutableArray *peripherals; // @synthesize peripherals=_peripherals;
- (id)getBondedDeviceFromDxcmPeripheral:(id)arg1;
- (id)bondedPeripheralIdentifier:(id)arg1;
- (void)markPeripheralUnbonded:(id)arg1;
- (void)markPeripheralBonded:(id)arg1;
- (void)centralManager:(id)arg1 didDisconnectPeripheral:(id)arg2 error:(id)arg3;
- (void)centralManager:(id)arg1 didFailToConnectPeripheral:(id)arg2 error:(id)arg3;
- (void)centralManager:(id)arg1 didConnectPeripheral:(id)arg2;
- (void)centralManager:(id)arg1 didDiscoverPeripheral:(id)arg2 advertisementData:(id)arg3 RSSI:(id)arg4;
- (void)centralManager:(id)arg1 willRestoreState:(id)arg2;
- (void)centralManagerDidUpdateState:(id)arg1;
- (void)disconnect:(id)arg1;
- (void)reconnectWithOptions:(id)arg1 options:(id)arg2;
- (void)connectWithOptions:(id)arg1 options:(id)arg2;
- (void)stopScanForPeripherals;
- (void)scanForPeripherals:(id)arg1;
- (void)stopScan:(id)arg1;
- (void)startScan:(id)arg1;
- (_Bool)unregisterPeripheral:(id)arg1;
- (_Bool)registerPeripheral:(id)arg1;
- (id)findPeripheral:(id)arg1;
- (id)findPeripheralByName:(id)arg1;
@property(readonly, nonatomic) _Bool isAuthorized;
- (id)getListOfConnectedDevices;
@property(readonly, nonatomic) _Bool isBLEOn;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMSiriExplainViewController : SetupWizardBaseViewController <INUIAddVoiceShortcutViewControllerDelegate, SetupWizardBaseViewControllerDelegate>
{
    NSArray *_voiceShortcuts;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSArray *voiceShortcuts; // @synthesize voiceShortcuts=_voiceShortcuts;
- (void)addVoiceShortcutViewControllerDidCancel:(id)arg1;
- (void)addVoiceShortcutViewController:(id)arg1 didFinishWithVoiceShortcut:(id)arg2 error:(id)arg3;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly) UIView *view;

@end

@interface DXCMTransmitterCalibration : NSObject
{
    unsigned int _weight;
    unsigned int _err0;
    unsigned int _err1;
    unsigned int _min;
    unsigned int _max;
}

@property(readonly) unsigned int max; // @synthesize max=_max;
@property(readonly) unsigned int min; // @synthesize min=_min;
@property(readonly) unsigned int err1; // @synthesize err1=_err1;
@property(readonly) unsigned int err0; // @synthesize err0=_err0;
@property(readonly) unsigned int weight; // @synthesize weight=_weight;
- (unsigned char)processLowWedgeDisplayFirstOfTwoBGs:(unsigned short)arg1;
- (unsigned char)processHighWedgeDisplayFirstOfTwoBGs:(unsigned short)arg1;
- (unsigned char)processLinearityFitDisplay:(unsigned short)arg1;
- (unsigned char)processOutOfCalDueToOutlierTransmitter:(unsigned short)arg1;
- (unsigned char)processLinearityFitTransmitter:(unsigned short)arg1;
- (unsigned char)processLowWedgeDisplay:(unsigned short)arg1;
- (unsigned char)processHighWedgeDisplay:(unsigned short)arg1;
- (unsigned char)processLowWedgeTransmitter:(unsigned short)arg1;
- (unsigned char)processHighWedgeTransmitter:(unsigned short)arg1;
- (unsigned char)processInCalDisplay:(unsigned short)arg1;
- (unsigned char)processInCalTransmitter:(unsigned short)arg1;
- (unsigned char)processSecondOfTwoBGsRequired:(unsigned short)arg1;
- (unsigned char)processFirstOfTwoBGsRequired:(unsigned short)arg1;
- (struct DXCMTransmitterCalibrationData)processCalibration:(id)arg1 lastBG:(id)arg2 currentCalState:(unsigned char)arg3 currentEGV:(id)arg4;
- (unsigned short)bgWeightedAverage:(unsigned short)arg1 currentEGV:(unsigned int)arg2;
- (_Bool)bgMinMaxCheck:(unsigned short)arg1;
- (unsigned char)bgErr0Err1Check:(unsigned short)arg1;
- (id)initWithBounds:(unsigned int)arg1 err0:(unsigned int)arg2 err1:(unsigned int)arg3 min:(unsigned int)arg4 max:(unsigned int)arg5;

@end

@interface DSAPIContact : CGMBaseDataObject
{
    _Bool _trend_permission;
    _Bool _urgentlow_enabled;
    _Bool _low_enabled;
    _Bool _high_enabled;
    _Bool _nodata_enabled;
    NSString *_contact_id;
    NSString *_name;
    NSString *_email;
    NSString *_subscription_id;
    unsigned long long _state;
    unsigned long long _urgentlow_threshold;
    unsigned long long _low_threshold;
    unsigned long long _high_threshold;
    unsigned long long _low_delay;
    unsigned long long _high_delay;
    unsigned long long _nodata_delay;
}

- (void).cxx_destruct;
@property unsigned long long nodata_delay; // @synthesize nodata_delay=_nodata_delay;
@property unsigned long long high_delay; // @synthesize high_delay=_high_delay;
@property unsigned long long low_delay; // @synthesize low_delay=_low_delay;
@property unsigned long long high_threshold; // @synthesize high_threshold=_high_threshold;
@property unsigned long long low_threshold; // @synthesize low_threshold=_low_threshold;
@property unsigned long long urgentlow_threshold; // @synthesize urgentlow_threshold=_urgentlow_threshold;
@property _Bool nodata_enabled; // @synthesize nodata_enabled=_nodata_enabled;
@property _Bool high_enabled; // @synthesize high_enabled=_high_enabled;
@property _Bool low_enabled; // @synthesize low_enabled=_low_enabled;
@property _Bool urgentlow_enabled; // @synthesize urgentlow_enabled=_urgentlow_enabled;
@property _Bool trend_permission; // @synthesize trend_permission=_trend_permission;
@property unsigned long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSString *subscription_id; // @synthesize subscription_id=_subscription_id;
@property(retain, nonatomic) NSString *email; // @synthesize email=_email;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSString *contact_id; // @synthesize contact_id=_contact_id;
- (void)doSomethingToAllProperties:(CDUnknownBlockType)arg1;
- (id)description;
- (id)initWithDictionary:(id)arg1;

@end

@interface DXCMCGMBaseSwitchTableViewCell : UITableViewCell
{
    _Bool _switchedOn;
    NSString *_title;
    NSString *_titleAccessibilityId;
    NSString *_switchAccessibilityId;
    CDUnknownBlockType _switchValueChangeBlock;
    UILabel *_titleLabel;
    UISwitch *_onOffSwitch;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UISwitch *onOffSwitch; // @synthesize onOffSwitch=_onOffSwitch;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(copy, nonatomic) CDUnknownBlockType switchValueChangeBlock; // @synthesize switchValueChangeBlock=_switchValueChangeBlock;
@property(nonatomic) _Bool switchedOn; // @synthesize switchedOn=_switchedOn;
@property(retain, nonatomic) NSString *switchAccessibilityId; // @synthesize switchAccessibilityId=_switchAccessibilityId;
@property(retain, nonatomic) NSString *titleAccessibilityId; // @synthesize titleAccessibilityId=_titleAccessibilityId;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
- (void)addCommonIdWithSuffix:(id)arg1;
- (void)addAccessibilityIdWithSuffix:(id)arg1;
- (id)myController;
- (void)switchValueChanged:(id)arg1;
- (void)updateConstraints;
- (void)initCommon;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

@end

@interface DPBaseObject : NSObject
{
}

+ (unsigned long long)getDataStreamType;
- (void)doSomethingToAllProperties:(CDUnknownBlockType)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)base64String;
- (id)jsonString;
- (id)jsonData;
- (id)dictionary;
- (id)initWithBase64String:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface SetupWizardLegalAgreementsVC : DXCMLegalAgreementsVC <DXCMLegalAgreementsVCDelegate>
{
}

+ (void)userAgreed:(id)arg1;
+ (void)processShowIfNeeded:(id)arg1 skipLegal:(_Bool)arg2;
+ (_Bool)isSetupWizardDebug;
+ (void)showIfNeeded:(id)arg1;
- (void)userAgreed;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMAlertScheduleWizardDaysViewController : DXCMBaseAlertScheduleSetupViewController <CGMAlertScheduleDaysSelectionChangedDelegate>
{
    NSMutableDictionary *_daysSelectionStatus;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableDictionary *daysSelectionStatus; // @synthesize daysSelectionStatus=_daysSelectionStatus;
- (id)childAlertScheduleEditDaysViewController;
- (void)updateAlertScheduleData;
- (_Bool)hasDaySelection;
- (void)alertScheduleDaysSelectionChanged:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DataConsentHelper : NSObject
{
    _Bool _didShowAlertInAppFromLockscreen;
}

+ (void)showDeclineModalAlert:(id)arg1 declinePressed:(CDUnknownBlockType)arg2 cancelPressed:(CDUnknownBlockType)arg3;
+ (void)showShareDisabledAlertWithViewController:(id)arg1 userAcknowledged:(CDUnknownBlockType)arg2;
+ (void)showWebViewWithEntrypoint:(unsigned long long)arg1 viewController:(id)arg2;
+ (void)showConsentRequiredModalAlertWithViewController:(id)arg1 entrypoint:(unsigned long long)arg2 isModal:(_Bool)arg3;
+ (void)checkAccessTokenWithViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)renewAccessTokenWithViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)registerDeviceKeyAndSynchronizeDataWithBulkPost:(_Bool)arg1;
+ (id)getScopeFromUAMConfigFile;
+ (void)setOptInWithAccessToken:(id)arg1;
+ (id)optOutMessage;
+ (id)bulletedList;
+ (_Bool)canAccessServer;
+ (_Bool)isDataOptInFeatureSupported;
+ (_Bool)isInGDPRJurisdiction;
+ (void)setInGDPRJurisdiction:(_Bool)arg1;
+ (_Bool)isOptedIn;
+ (void)setOptedIn:(_Bool)arg1;
+ (id)sharedManager;
@property(nonatomic) _Bool didShowAlertInAppFromLockscreen; // @synthesize didShowAlertInAppFromLockscreen=_didShowAlertInAppFromLockscreen;
- (void)processConsentStatusChange:(long long)arg1;
- (long long)getConsentStatusChange:(_Bool)arg1 remoteOptInStatus:(_Bool)arg2;
- (void)processOptedOutDataSharingDisabledAlertFromSwipe;
- (void)checkRemoteStatusChange:(_Bool)arg1 remoteOptInStatus:(_Bool)arg2;
- (void)testingSetOptInStatusRemotely:(_Bool)arg1;
- (id)init;

@end

@interface DXCMBaseModalViewController : DXCMBaseViewController
{
    NSString *_navigationBarTitle;
    NSString *_rightNavigationBarButtonTitle;
    NSString *_descriptionLabelAccessibilityId;
    DXCMBlockButton *_topButton;
    DXCMBlockButton *_bottomButton;
    CDUnknownBlockType _okPressedBlock;
    UIScrollView *_scrollView;
    UIView *_contentView;
    UILabel *_descriptionLabel;
    UILabel *_captionLabel;
    UIBarButtonItem *_okBarButtonItem;
    NSArray *_contentConstraints;
    NSDictionary *_metricsDictionary;
    UILabel *_bannerLabel;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UILabel *bannerLabel; // @synthesize bannerLabel=_bannerLabel;
@property(retain, nonatomic) NSDictionary *metricsDictionary; // @synthesize metricsDictionary=_metricsDictionary;
@property(retain, nonatomic) NSArray *contentConstraints; // @synthesize contentConstraints=_contentConstraints;
@property(retain, nonatomic) UIBarButtonItem *okBarButtonItem; // @synthesize okBarButtonItem=_okBarButtonItem;
@property(retain, nonatomic) UILabel *captionLabel; // @synthesize captionLabel=_captionLabel;
@property(retain, nonatomic) UILabel *descriptionLabel; // @synthesize descriptionLabel=_descriptionLabel;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(copy, nonatomic) CDUnknownBlockType okPressedBlock; // @synthesize okPressedBlock=_okPressedBlock;
@property(retain, nonatomic) DXCMBlockButton *bottomButton; // @synthesize bottomButton=_bottomButton;
@property(retain, nonatomic) DXCMBlockButton *topButton; // @synthesize topButton=_topButton;
@property(retain, nonatomic) NSString *descriptionLabelAccessibilityId; // @synthesize descriptionLabelAccessibilityId=_descriptionLabelAccessibilityId;
@property(retain, nonatomic) NSString *rightNavigationBarButtonTitle; // @synthesize rightNavigationBarButtonTitle=_rightNavigationBarButtonTitle;
@property(retain, nonatomic) NSString *navigationBarTitle; // @synthesize navigationBarTitle=_navigationBarTitle;
- (void)layoutTopButtonOnly:(id)arg1;
- (void)layoutButtons:(id)arg1 bottomButton:(id)arg2;
- (void)setCommonAttributesForLabel:(id)arg1;
- (void)layoutConstraintsWithDescriptionLabel:(id)arg1 imageView:(id)arg2 captionLabel:(id)arg3;
- (void)layoutConstraintsWithDescriptionLabel:(id)arg1;
- (void)layoutConstraintsWithDescriptionLabel:(id)arg1 bannerLabel:(id)arg2;
- (void)layoutConstraintsWithScrollView:(id)arg1 contentView:(id)arg2;
- (void)okBarButtonItemPressed;
- (void)addContentWithCustomView:(id)arg1;
- (void)addContentWithDescription:(id)arg1 imageView:(id)arg2 caption:(id)arg3 accessibilityIdentifier:(id)arg4;
- (void)addContentWithDescription:(id)arg1;
- (void)addContentWithDescription:(id)arg1 redLabel:(id)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)setupOkButton;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)init;

@end

@interface CGMHealthKitEngine : NSObject <CGMSubscriberDataSource>
{
    _Bool _isSavingToHK;
    NSString *_logName;
    CGMDataMgr *_dataMgr;
    NSObject<OS_dispatch_queue> *_hkQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property _Bool isSavingToHK; // @synthesize isSavingToHK=_isSavingToHK;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *hkQueue; // @synthesize hkQueue=_hkQueue;
@property(retain, nonatomic) CGMDataMgr *dataMgr; // @synthesize dataMgr=_dataMgr;
@property(retain, nonatomic) NSString *logName; // @synthesize logName=_logName;
- (void)saveCarbsToHealthKit;
- (void)logEGVQuantitySample:(id)arg1;
- (void)saveEgvsToHealthKit;
- (void)saveEgvToDatabase;
- (void)save;
- (void)notifySubscriberOfNewCGMDataUpdate:(unsigned long long)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FixedAlert : NSObject
{
    _Bool _postNotification;
    _Bool _presentAlertPopUpInApp;
    _Bool _shouldOverrideMute;
    NSString *_soundName;
    unsigned long long _alertType;
    long long _totalNumOfReAlerts;
    unsigned long long _priority;
    long long _reAlertTimeInSec;
    unsigned long long _ackType;
    unsigned long long _actionButton;
    NSString *_alertPopUpTitle;
    NSString *_alertText;
    NSString *_notificationFormat;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *notificationFormat; // @synthesize notificationFormat=_notificationFormat;
@property(retain, nonatomic) NSString *alertText; // @synthesize alertText=_alertText;
@property(retain, nonatomic) NSString *alertPopUpTitle; // @synthesize alertPopUpTitle=_alertPopUpTitle;
@property(readonly, nonatomic) unsigned long long actionButton; // @synthesize actionButton=_actionButton;
@property _Bool shouldOverrideMute; // @synthesize shouldOverrideMute=_shouldOverrideMute;
@property _Bool presentAlertPopUpInApp; // @synthesize presentAlertPopUpInApp=_presentAlertPopUpInApp;
@property _Bool postNotification; // @synthesize postNotification=_postNotification;
@property unsigned long long ackType; // @synthesize ackType=_ackType;
@property long long reAlertTimeInSec; // @synthesize reAlertTimeInSec=_reAlertTimeInSec;
@property unsigned long long priority; // @synthesize priority=_priority;
@property long long totalNumOfReAlerts; // @synthesize totalNumOfReAlerts=_totalNumOfReAlerts;
@property unsigned long long alertType; // @synthesize alertType=_alertType;
@property(retain, nonatomic) NSString *soundName; // @synthesize soundName=_soundName;
- (_Bool)obeysMuteOverrideSetting;
@property(readonly, nonatomic) NSString *notificationBody;
- (id)stringWithTimeFormat:(id)arg1 forTime:(id)arg2;
@property(readonly, nonatomic) NSString *name;
- (id)initWithBodyFormat:(id)arg1 button:(unsigned long long)arg2;
- (id)init;

@end

@interface DXCMBatteryMonitorEngine : NSObject <CGMSubscriberDataSource>
{
    NSString *_logName;
    double _lastNotificationTime;
    CGMDataMgr *_dataMgr;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(retain, nonatomic) CGMDataMgr *dataMgr; // @synthesize dataMgr=_dataMgr;
@property(nonatomic) double lastNotificationTime; // @synthesize lastNotificationTime=_lastNotificationTime;
@property(retain, nonatomic) NSString *logName; // @synthesize logName=_logName;
- (void)didChangePowerMode:(id)arg1;
- (void)logBatteryState;
- (void)notifySubscriberOfNewCGMDataUpdate:(unsigned long long)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DPCrashLogRecord : DPBaseRecord
{
    NSString *_crashFile;
}

- (void).cxx_destruct;
@property(retain) NSString *crashFile; // @synthesize crashFile=_crashFile;

@end

@interface DXCMBluetoothPeripheral : NSObject <CBPeripheralDelegate>
{
    CBPeripheral *_cbPeripheral;
    NSString *_primaryServiceUUID;
    NSString *_advName;
    NSString *_deviceId;
    NSMutableDictionary *_serviceDict;
    NSObject<OS_dispatch_queue> *_peripheralQueue;
    NSObject<OS_dispatch_queue> *_peripheralRespQueue;
}

- (void).cxx_destruct;
@property(retain) NSObject<OS_dispatch_queue> *peripheralRespQueue; // @synthesize peripheralRespQueue=_peripheralRespQueue;
@property(retain) NSObject<OS_dispatch_queue> *peripheralQueue; // @synthesize peripheralQueue=_peripheralQueue;
@property(retain) NSMutableDictionary *serviceDict; // @synthesize serviceDict=_serviceDict;
@property(retain) NSString *deviceId; // @synthesize deviceId=_deviceId;
@property(readonly, copy) NSString *advName; // @synthesize advName=_advName;
@property(readonly, copy) NSString *primaryServiceUUID; // @synthesize primaryServiceUUID=_primaryServiceUUID;
@property(retain) CBPeripheral *cbPeripheral; // @synthesize cbPeripheral=_cbPeripheral;
- (void)peripheralDidInvalidateServices:(id)arg1;
- (void)peripheralDidUpdateName:(id)arg1;
- (void)peripheral:(id)arg1 didReadRSSI:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didWriteValueForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didUpdateValueForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didUpdateNotificationStateForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didDiscoverCharacteristicsForService:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didDiscoverServices:(id)arg2;
- (void)peripheralRSSI:(long long)arg1;
- (void)discoveredServiceReady:(id)arg1;
- (void)peripheralDisconnected:(long long)arg1;
- (void)peripheralConnected:(long long)arg1;
- (_Bool)peripheralFound:(id)arg1 advData:(id)arg2 rssi:(id)arg3;
- (void)peripheralStateUpdate:(long long)arg1;
- (void)discoverServicesForUUIDs:(id)arg1;
- (void)disconnect;
- (id)getPeripheralName;
- (id)getPeripheralIdentifier;
- (void)reconnect;
- (void)connect;
- (id)findService:(id)arg1;
- (id)services;
- (void)addService:(id)arg1;
- (id)initWithPeripheral:(id)arg1 primaryServiceUUID:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DXCMNotificationStackSubview : UIControl
{
    long long _notificationStyle;
    NSString *_messageText;
    UILabel *_notificationText;
    UIImageView *_notificationIcon;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIImageView *notificationIcon; // @synthesize notificationIcon=_notificationIcon;
@property(retain, nonatomic) UILabel *notificationText; // @synthesize notificationText=_notificationText;
@property(retain, nonatomic) NSString *messageText; // @synthesize messageText=_messageText;
@property(nonatomic) long long notificationStyle; // @synthesize notificationStyle=_notificationStyle;
- (void)applyStyling;
- (void)setHidden:(_Bool)arg1;
- (void)updateConstraints;
- (id)init;

@end

@interface DCGMServiceTransmitterTimeRecord : NSObject
{
    _Bool _inSession;
    unsigned int _transmitterTime;
    unsigned int _sessionStartTime;
    unsigned int _sessionDuration;
    unsigned int _aesKeyHash;
}

+ (id)recordWithData:(id)arg1;
@property(readonly) unsigned int aesKeyHash; // @synthesize aesKeyHash=_aesKeyHash;
@property(readonly) _Bool inSession; // @synthesize inSession=_inSession;
@property(readonly) unsigned int sessionDuration; // @synthesize sessionDuration=_sessionDuration;
@property(readonly) unsigned int sessionStartTime; // @synthesize sessionStartTime=_sessionStartTime;
@property(readonly) unsigned int transmitterTime; // @synthesize transmitterTime=_transmitterTime;
- (id)initWithValues:(unsigned int)arg1 sessionStartTime:(unsigned int)arg2;
- (id)initWithValues:(unsigned int)arg1 sessionStartTime:(unsigned int)arg2 aesKeyHash:(unsigned int)arg3;

@end

@interface DXCMAlertsManager : NSObject
{
    _Bool _alertVisible;
    _Bool _shouldPopToHomeScreen;
    _Bool _isHidden;
    CDUnknownBlockType _userAcknowledgedAlert;
    UIViewController *_alert;
    long long _alertStyleType;
    NSString *_alertLogName;
    NSString *_alertLogData;
    double _alertLogDuration;
    DXCMAlertsGlobal *_global;
}

+ (id)alertShowing;
- (void).cxx_destruct;
@property _Bool isHidden; // @synthesize isHidden=_isHidden;
@property(retain, nonatomic) DXCMAlertsGlobal *global; // @synthesize global=_global;
@property(nonatomic) double alertLogDuration; // @synthesize alertLogDuration=_alertLogDuration;
@property(retain, nonatomic) NSString *alertLogData; // @synthesize alertLogData=_alertLogData;
@property(retain, nonatomic) NSString *alertLogName; // @synthesize alertLogName=_alertLogName;
@property(nonatomic) long long alertStyleType; // @synthesize alertStyleType=_alertStyleType;
@property(retain, nonatomic) UIViewController *alert; // @synthesize alert=_alert;
@property(nonatomic) _Bool shouldPopToHomeScreen; // @synthesize shouldPopToHomeScreen=_shouldPopToHomeScreen;
@property(nonatomic, getter=isAlertVisible) _Bool alertVisible; // @synthesize alertVisible=_alertVisible;
@property(copy, nonatomic) CDUnknownBlockType userAcknowledgedAlert; // @synthesize userAcknowledgedAlert=_userAcknowledgedAlert;
- (void)logAlertLeaving;
- (void)logAlertDisplaying;
- (void)processUserAcknowledgement;
- (void)dismissAlertHelper;
- (void)displayAlert;
- (void)dismissIfNeeded:(CDUnknownBlockType)arg1;
- (void)errorModalAlertHelper:(id)arg1;
- (void)modalAlertHelper:(id)arg1 cancelButtonTitle:(id)arg2;
- (void)dismissAlert;
- (void)reshowAlert;
- (void)hideAlert;
- (void)showAlert;
- (void)addAlertActionWithButtonTitle:(id)arg1 buttonPressed:(CDUnknownBlockType)arg2;
- (id)initErrorAlertModalWithBannerForPro;
- (id)initErrorAlertModalWithBannerTitle:(id)arg1 errorTitle:(id)arg2 descriptionText:(id)arg3;
- (id)initAlertModalWithTitle:(id)arg1 customView:(id)arg2 cancelButtonTitle:(id)arg3;
- (id)initAlertModalWithTitle:(id)arg1 message:(id)arg2 cancelButtonTitle:(id)arg3;
- (id)initAlertWithTitle:(id)arg1 message:(id)arg2 cancelButtonTitle:(id)arg3;
- (void)initCommon:(id)arg1 message:(id)arg2;

@end

@interface CGMAlertScheduleWizardHighAlertLimitViewController : DXCMBaseAlertScheduleSetupViewController <CGMAlertLimitChangedDelegate>
{
    NSNumber *_selectedAlertLimit;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSNumber *selectedAlertLimit; // @synthesize selectedAlertLimit=_selectedAlertLimit;
- (void)alertLimitChanged:(id)arg1;
- (void)updateAlertScheduleData;
- (id)childAlertScheduleLimitEditViewController;
- (id)defaultHighAlertLimit;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMCarbsEvent : CGMEventBase
{
    int _grams;
}

@property int grams; // @synthesize grams=_grams;
- (id)summaryDetailForEvents:(id)arg1;
- (id)calloutDetails;
- (id)calloutTitle;
- (id)humanReadableValueWithUnits;
- (long long)event_type;

@end

@interface DPContentEntry : DPBaseObject
{
    NSString *_RecordType;
    NSString *_Records;
}

- (void).cxx_destruct;
@property(retain) NSString *Records; // @synthesize Records=_Records;
@property(retain) NSString *RecordType; // @synthesize RecordType=_RecordType;
- (id)getArrayFromRecords;
- (void)setRecordsFromArray:(id)arg1;

@end

@interface DXCMBasePrefs : NSObject
{
}

+ (void)wipeAllPrefs;
+ (_Bool)readSiriExplainView;
+ (void)setReadSiriExplainView:(_Bool)arg1;
+ (_Bool)transmitterIdRegisteredWithServer;
+ (void)setTransmitterIdRegisteredWithServer:(_Bool)arg1;
+ (_Bool)hasWatchedSensorInsertionVideo;
+ (void)setHasWatchedSensorInsertionVideo:(_Bool)arg1;
+ (_Bool)hasWatchedNonAdjunctiveVideo;
+ (void)setHasWatchedNonAdjunctiveVideo:(_Bool)arg1;
+ (void)setBlindedModeEnabled:(_Bool)arg1;
+ (_Bool)blindedModeEnabled;
+ (_Bool)healthkitPermissionsHasBeenSetForThisVersion;
+ (void)setHealthkitPermissionsHasBeenSetForThisVersion;
+ (_Bool)calibrationCoachmarkDismissed;
+ (void)setCalibrationCoachmarkDismissed:(_Bool)arg1;
+ (_Bool)whatsNewHasBeenSeenForThisVersion;
+ (void)setWhatsNewHasBeenSeenForThisVersion;
+ (void)doSomethingToAllPrefKeys:(CDUnknownBlockType)arg1 onCompletion:(CDUnknownBlockType)arg2;
+ (id)resetPasswordId;
+ (void)setResetPasswordId:(id)arg1;
+ (long long)trendMaxRange;
+ (void)setTrendMaxRange:(long long)arg1;
+ (id)standardDefaults;
+ (_Bool)onduoAuthorizationComplete;
+ (void)setOnduoAuthorizationComplete:(_Bool)arg1;
+ (id)lastBleTime;
+ (void)setLastBleTime:(id)arg1;
+ (id)lastShareStatus;
+ (void)setLastShareStatus:(id)arg1;
+ (_Bool)alwaysShareEnabled;
+ (void)setAlwaysShareEnabled:(_Bool)arg1;
+ (_Bool)shareEnabled;
+ (void)setShareEnabled:(_Bool)arg1;
+ (_Bool)shareTutorialCompleted;
+ (void)setShareTutorialCompleted:(_Bool)arg1;
+ (_Bool)firstTimeTransmitterCompleted;
+ (void)setFirstTimeTransmitterCompleted:(_Bool)arg1;
+ (_Bool)neverShowStartSensorHelpPopUp;
+ (void)setNeverShowStartSensorHelpPopUp:(_Bool)arg1;
+ (_Bool)firstTimeSensorCompleted;
+ (void)setFirstTimeSensorCompleted:(_Bool)arg1;
+ (long long)timeStartedScanning;
+ (void)setTimeStartedScanning:(long long)arg1;
+ (_Bool)hasSeenBLEAuthorizationPrompt;
+ (void)setHasSeenBLEAuthorizationPrompt:(_Bool)arg1;
+ (_Bool)productTourCompleted;
+ (void)setProductTourCompleted:(_Bool)arg1;
+ (_Bool)productTransitionOccured;
+ (void)setProductTransitionOccured:(_Bool)arg1;
+ (long long)currentTxMode;
+ (void)setCurrentTxMode:(long long)arg1;
+ (long long)serverUtcTimeDelta;
+ (void)setServerUtcTimeDelta:(long long)arg1;
+ (long long)transmitterUtcTimeDelta;
+ (void)setTransmitterUtcTimeDelta:(long long)arg1;
+ (id)appWasTerminated;
+ (void)setAppWasTerminated:(id)arg1;
+ (_Bool)serverNeedsUserAgreedUpdate;
+ (void)setServerNeedsUserAgreedUpdate:(_Bool)arg1;
+ (_Bool)sensorCodePostSetupWizardPopupDisplayed;
+ (void)setSensorCodePostSetupWizardPopupDisplayed:(_Bool)arg1;
+ (_Bool)sensorCodeEntryCompleted;
+ (void)setSensorCodeEntryCompleted:(_Bool)arg1;
+ (id)sensorCode;
+ (void)setSensorCode:(id)arg1;
+ (_Bool)inGDPRJurisdiction;
+ (void)setInGDPRJurisdiction:(_Bool)arg1;
+ (_Bool)dataConsentStatus;
+ (void)setDataConsentStatus:(_Bool)arg1;
+ (_Bool)showTransmitterPaired;
+ (void)setShowTransmitterPaired:(_Bool)arg1;
+ (_Bool)showWarmupCompleted;
+ (void)setShowWarmupCompleted:(_Bool)arg1;
+ (id)language;
+ (void)setLanguage:(id)arg1;
+ (id)country;
+ (void)setCountry:(id)arg1;
+ (id)sharedDefaults;
+ (_Bool)eulaAccepted;

@end

@interface ContactsDetailViewController : DXCMBaseViewController
{
    DSAPIContact *contact;
    NSString *oldNameText;
    _Bool oldTrendSetting;
    NSArray *summaryCells;
    NSMutableArray *urgentLowCells;
    NSMutableArray *lowCells;
    NSMutableArray *highCells;
    NSMutableArray *noDataCells;
    DXCMCGMBaseTextFieldOnlyTableViewCell *nameCell;
    DXCMCGMBaseSwitchTableViewCell *trendEnabledCell;
    DXCMCGMBaseTableViewCell *pauseCell;
    _Bool shouldShowPauseCell;
    DXCMCGMBaseTableViewCell *deleteCell;
    UIBarButtonItem *backButton;
    UIBarButtonItem *cancelButton;
    UIBarButtonItem *editButton;
    UIBarButtonItem *saveButton;
    _Bool _isOnlyOneFollower;
    NSString *_contactId;
    UITableView *_tableView;
    UIView *_headerView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIView *headerView; // @synthesize headerView=_headerView;
@property(nonatomic) _Bool isOnlyOneFollower; // @synthesize isOnlyOneFollower=_isOnlyOneFollower;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) NSString *contactId; // @synthesize contactId=_contactId;
- (void)onAllowTrendGraphSwitch:(id)arg1;
- (void)onCancelButton:(id)arg1;
- (void)onEditButton:(id)arg1;
- (_Bool)serverDeleteFollowerWithStatusHUD:(id)arg1;
- (void)serverResumeSubscriptionWithStatusHUD:(id)arg1;
- (void)serverPauseSubscriptionWithStatusHUD:(id)arg1;
- (void)serverSaveChangesWithStatusHUD:(id)arg1 withName:(id)arg2 andTrendPermission:(id)arg3;
- (id)summaryCellWithTitle:(id)arg1 andDetailText:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)createViewWithTitle:(id)arg1 titleOffsetTop:(double)arg2 withAccessibilityId:(id)arg3;
- (void)setupTitleLabelWithName:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)setupNoDataCells;
- (void)setupHighCells;
- (void)setupLowCells;
- (void)setupUrgentLowCells;
- (void)setupSettingsCells;
- (void)viewDidLoad;

@end

@interface CGMErrorHelpViewController : DXCMBaseViewController <DXCMBaseViewControllerDelegate>
{
}

- (void)baseViewControllerDidFinish:(id)arg1;
- (void)handleButtonEventsInView;
- (void)didReceiveMemoryWarning;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface DXCMBarcodeParser : NSObject
{
}

+ (id)getSensorComponentsFromInput:(id)arg1;
+ (id)getTransmitterIdFromInput:(id)arg1 metadataObjectType:(id)arg2;

@end

@interface CGMAPIDeviceKeyAPI : DSAPIBaseAPI
{
    double _deviceKeyExpirationTime;
    NSString *_serverURL;
}

+ (_Bool)hasAccessBeenRevoked;
+ (id)instanceWithAppId:(id)arg1;
- (void).cxx_destruct;
@property(retain) NSString *serverURL; // @synthesize serverURL=_serverURL;
@property double deviceKeyExpirationTime; // @synthesize deviceKeyExpirationTime=_deviceKeyExpirationTime;
- (void)preCheckUAMAccess;
- (_Bool)preCheckKeyWithError:(id *)arg1;
- (void)setDeviceKeyExpirationDate;
- (double)getDeviceKeyExpirationDate;
- (void)setDeviceKey:(id)arg1;
- (void)deleteDeviceKey;
- (id)getDeviceKey;
- (id)getAppSettingsKeyForSignRequestDeviceDictionary;
- (_Bool)registerKey;
- (id)getServer;
- (void)setServer:(id)arg1;
- (void)setServerToDefault;
- (id)init;

@end

@interface DXCMCGMBaseTextFieldOnlyTableViewCell : DXCMCGMBaseTableViewCell <UITextFieldDelegate>
{
    id _uniqueIdentfier;
    id <DXCMCGMBaseTextFieldOnlyTableViewCellDelegate> _delegate;
    DXCMBaseTextField *_textField;
}

- (void).cxx_destruct;
@property(retain, nonatomic) DXCMBaseTextField *textField; // @synthesize textField=_textField;
@property(nonatomic) __weak id <DXCMCGMBaseTextFieldOnlyTableViewCellDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) id uniqueIdentfier; // @synthesize uniqueIdentfier=_uniqueIdentfier;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)textFieldDidChange:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)addAccessibilityIdWithSuffix:(id)arg1;
- (id)initWithPlaceholder:(id)arg1 maxLength:(int)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;
- (void)initCommon:(id)arg1 maxLength:(int)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ChooserTableViewController : DXCMBaseViewController <UITableViewDataSource, UITableViewDelegate>
{
    _Bool _popVCAfterSelecting;
    CDUnknownBlockType _onDoneButton;
    NSString *_navBarTitle;
    UITableView *_tableView;
    NSArray *_theItems;
    NSString *_selectedItem;
    CDUnknownBlockType _onSelect;
}

- (void).cxx_destruct;
@property(copy, nonatomic) CDUnknownBlockType onSelect; // @synthesize onSelect=_onSelect;
@property(retain, nonatomic) NSString *selectedItem; // @synthesize selectedItem=_selectedItem;
@property(retain, nonatomic) NSArray *theItems; // @synthesize theItems=_theItems;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
@property(retain) NSString *navBarTitle; // @synthesize navBarTitle=_navBarTitle;
@property(copy, nonatomic) CDUnknownBlockType onDoneButton; // @synthesize onDoneButton=_onDoneButton;
@property(nonatomic) _Bool popVCAfterSelecting; // @synthesize popVCAfterSelecting=_popVCAfterSelecting;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)done;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)initWithItems:(id)arg1 selectedItem:(id)arg2 onSelect:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface Scheduler : NSObject <CGMSubscriberDataSource>
{
}

+ (id)sharedInstance;
@property _Bool needsToUploadAlertSchedule;
@property _Bool needsToUploadMainSettings;
@property _Bool needsToUploadDisplayInsulinInfo;
@property _Bool needsToUploadProductTxMode;
@property _Bool needsToUploadShareSetting;
@property _Bool needsToUploadAlertSettings;
- (void)setBool:(_Bool)arg1 originalBool:(_Bool)arg2 key:(id)arg3;
- (void)onLogout;
- (void)notifySubscriberOfNewCGMDataUpdate:(unsigned long long)arg1;
- (void)uploadSetting:(id)arg1;
- (void)doServerStuffIfNeeded;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DXCMUtils : NSObject
{
}

+ (id)createFaqUrlWithDeviceInfo:(id)arg1;
+ (id)readCurrentEGV;
+ (void)setupSafeAreaView:(id)arg1;
+ (_Bool)isWarmUpSessionComplete;
+ (id)productMode;
+ (id)productName;
+ (unsigned char)txTypeForProduct;
+ (long long)checkTransmitterId:(id)arg1 andTxType:(unsigned char)arg2;
+ (long long)checkTransmitterId:(id)arg1;
+ (void)prepActionSheetForLocalization;
+ (void)displayNoInternetErrorWithCompletion:(CDUnknownBlockType)arg1;
+ (void)displayServerErrorWithCompletion:(CDUnknownBlockType)arg1;
+ (void)presentAlertSettings;
+ (void)presentSensorRemoval;
+ (void)presentSensorRemovalWithBanner;
+ (void)displayStopSensorModalAlert:(id)arg1 initialText:(id)arg2 stopSensorPressed:(CDUnknownBlockType)arg3;
+ (void)displayModalViewWithDescription:(id)arg1 descriptionLabelAccessibilityId:(id)arg2 navigationTitle:(id)arg3 okPressedBlock:(CDUnknownBlockType)arg4 viewControllerToPresent:(id)arg5;
+ (void)displayStopSensorModalAlertWithInitialText:(id)arg1 stopSensorPressed:(CDUnknownBlockType)arg2;
+ (void)displayModalViewWithDescription:(id)arg1 descriptionLabelAccessibilityId:(id)arg2 topButton:(id)arg3 navigationTitle:(id)arg4 okPressedBlock:(CDUnknownBlockType)arg5 viewControllerToPresent:(id)arg6;
+ (void)displayModalViewWithDescription:(id)arg1 navigationTitle:(id)arg2 okPressedBlock:(CDUnknownBlockType)arg3 viewControllerToPresent:(id)arg4;
+ (id)addSeparatorToView:(id)arg1 position:(long long)arg2 withLeftMargin:(double)arg3;
+ (id)languageCode;
+ (double)getLabelHeight:(id)arg1;
+ (id)longFormatTimeStringFromMinutes:(int)arg1;
+ (id)mediumFormatTimeStringFromMinutes:(int)arg1;
+ (id)shortFormatTimeStringFromMinutes:(int)arg1;
+ (BOOL)trendRateSineWaveFunction:(int)arg1;
+ (BOOL)glucoseSineWaveFunction:(int)arg1;
+ (void)prepLabelForLocalization:(id)arg1;
+ (id)getViewFromXIB:(id)arg1 withIdentifier:(id)arg2;
+ (id)currentViewController;
+ (id)findBestViewController:(id)arg1;
+ (_Bool)doesThisDeviceSupportVibration;
+ (id)getDeviceName;
+ (int)randomNumberFrom:(int)arg1 to:(int)arg2;
+ (void)presentVideoPlayerWithURL:(id)arg1 onVC:(id)arg2;
+ (void)doStuffToSubviewsOfClass:(id)arg1 startView:(id)arg2 stuff:(CDUnknownBlockType)arg3;
+ (_Bool)isDeviceIn24HourMode;
+ (id)darkerColorForColor:(id)arg1;
+ (id)lighterColorForColor:(id)arg1;
+ (void)dispatchWithBGTaskNamed:(id)arg1 after:(float)arg2 block:(CDUnknownBlockType)arg3;
+ (void)dispatchAfter:(long long)arg1 toNotMainThread:(CDUnknownBlockType)arg2;
+ (void)dispatchAfter:(float)arg1 block:(CDUnknownBlockType)arg2;
+ (void)dispatchToNotMainThread:(CDUnknownBlockType)arg1;
+ (void)dispatchToMainThread:(CDUnknownBlockType)arg1;
+ (_Bool)dxcm_isOperatingSystemAtLeastVersion:(long long)arg1 minor:(long long)arg2 patch:(long long)arg3;
+ (void)DXCMAssert:(_Bool)arg1 logMessage:(id)arg2 sender:(id)arg3;
+ (_Bool)IsStringEmpty:(id)arg1;
+ (_Bool)IsValidPassword:(id)arg1;
+ (_Bool)IsValidUsername:(id)arg1;
+ (_Bool)IsSafeFromSQLString:(id)arg1;
+ (_Bool)IsValidNumber:(id)arg1 betweenMinValue:(double)arg2 andMaxValue:(double)arg3 decimalPlaces:(long long)arg4;
+ (_Bool)IsValidEmail:(id)arg1;
+ (id)alertTextFieldWithTitle:(id)arg1 message:(id)arg2 placeholder:(id)arg3 keyboardType:(long long)arg4 delegate:(id)arg5 okPressed:(CDUnknownBlockType)arg6;
+ (id)actionSheetWithTitle:(id)arg1 message:(id)arg2 actions:(id)arg3 acknowledgement:(CDUnknownBlockType)arg4;
+ (id)SimpleAlertWithTitle:(id)arg1 andMessage:(id)arg2 andCloseText:(id)arg3;
+ (id)appBuild;
+ (id)appVersion;
+ (unsigned long long)memorySize;
+ (unsigned int)freeMemory;

@end

@interface DEXSoundManager : NSObject <AVAudioPlayerDelegate>
{
    _Bool _monitorMuteSwitch;
    _Bool _isVolumeOverridden;
    float _masterVolume;
    float _restoreVolume;
    long long _muteSwitchState;
    DEXAlertSound *_currentAlertSound;
    MPVolumeView *_volumeView;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(nonatomic) float restoreVolume; // @synthesize restoreVolume=_restoreVolume;
@property(nonatomic) _Bool isVolumeOverridden; // @synthesize isVolumeOverridden=_isVolumeOverridden;
@property(retain, nonatomic) MPVolumeView *volumeView; // @synthesize volumeView=_volumeView;
@property(retain) DEXAlertSound *currentAlertSound; // @synthesize currentAlertSound=_currentAlertSound;
@property(nonatomic) long long muteSwitchState; // @synthesize muteSwitchState=_muteSwitchState;
@property(nonatomic) _Bool monitorMuteSwitch; // @synthesize monitorMuteSwitch=_monitorMuteSwitch;
@property(nonatomic) float masterVolume; // @synthesize masterVolume=_masterVolume;
- (void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(_Bool)arg2;
- (void)audioSessionMediaServicesLostOrReset:(id)arg1;
- (void)audioSessionInterruption:(id)arg1;
- (void)stopPlaySoundWithCompletion:(CDUnknownBlockType)arg1;
- (void)undoVolumeOverrideWithCompletion:(CDUnknownBlockType)arg1;
- (void)vibrate;
- (void)playAlertSound:(id)arg1;
- (void)playSoundName:(id)arg1 alertName:(id)arg2 inCategory:(id)arg3 priority:(unsigned long long)arg4 overrideMode:(unsigned long long)arg5;
- (id)startAudioSessionOverridingMute:(_Bool)arg1;
- (_Bool)shouldRerouteToSpeakerForPort:(id)arg1;
- (_Bool)setAudioSessionActive:(_Bool)arg1 withOptions:(unsigned long long)arg2;
- (void)setMasterVolume:(float)arg1 completion:(CDUnknownBlockType)arg2;
- (void)didBecomeActive;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)endVolumeCapture;
- (void)startVolumeCapture;
- (void)setupVolumeCapture;
- (void)resetInstance;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMAlertScheduleWizardLowAlertLimitViewController : DXCMBaseAlertScheduleSetupViewController <CGMAlertLimitChangedDelegate>
{
    NSNumber *_selectedAlertLimit;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSNumber *selectedAlertLimit; // @synthesize selectedAlertLimit=_selectedAlertLimit;
- (void)alertLimitChanged:(id)arg1;
- (void)updateAlertScheduleData;
- (id)childAlertScheduleLimitEditViewController;
- (id)defaultLowAlertLimit;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMMenuTableViewCell : DXCMBaseTableViewCell
{
    UILabel *_titleLabel;
    UIImageView *_menuIcon;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIImageView *menuIcon; // @synthesize menuIcon=_menuIcon;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface QRCodeTransmitterIDViewController : SetupWizardBaseViewController <AVCaptureMetadataOutputObjectsDelegate>
{
    _Bool _isScanningSensorCode;
    _Bool _scanning;
    UIView *_livePreviewContainer;
    AVCaptureSession *_captureSession;
    AVCaptureVideoPreviewLayer *_videoPreviewLayer;
    NSTimer *_barcodeScanningTimeout;
    UILabel *_descriptionOne;
    UILabel *_descriptionTwo;
    UIImageView *_barcodeImage;
    UILabel *_titleLabel;
    UIView *_centerContainer;
    UIStackView *_scannerStack;
    UILabel *_instructions;
    unsigned long long _sensorCodeInvalidAttempts;
    DXCMBaseModalViewController *_barcodePhotoErrorModalAlert;
}

- (void).cxx_destruct;
@property(retain, nonatomic) DXCMBaseModalViewController *barcodePhotoErrorModalAlert; // @synthesize barcodePhotoErrorModalAlert=_barcodePhotoErrorModalAlert;
@property(nonatomic) unsigned long long sensorCodeInvalidAttempts; // @synthesize sensorCodeInvalidAttempts=_sensorCodeInvalidAttempts;
@property(retain, nonatomic) UILabel *instructions; // @synthesize instructions=_instructions;
@property(retain, nonatomic) UIStackView *scannerStack; // @synthesize scannerStack=_scannerStack;
@property(retain, nonatomic) UIView *centerContainer; // @synthesize centerContainer=_centerContainer;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIImageView *barcodeImage; // @synthesize barcodeImage=_barcodeImage;
@property(retain, nonatomic) UILabel *descriptionTwo; // @synthesize descriptionTwo=_descriptionTwo;
@property(retain, nonatomic) UILabel *descriptionOne; // @synthesize descriptionOne=_descriptionOne;
@property _Bool scanning; // @synthesize scanning=_scanning;
@property(retain, nonatomic) NSTimer *barcodeScanningTimeout; // @synthesize barcodeScanningTimeout=_barcodeScanningTimeout;
@property(retain, nonatomic) AVCaptureVideoPreviewLayer *videoPreviewLayer; // @synthesize videoPreviewLayer=_videoPreviewLayer;
@property(retain, nonatomic) AVCaptureSession *captureSession; // @synthesize captureSession=_captureSession;
@property(retain, nonatomic) UIView *livePreviewContainer; // @synthesize livePreviewContainer=_livePreviewContainer;
@property(nonatomic) _Bool isScanningSensorCode; // @synthesize isScanningSensorCode=_isScanningSensorCode;
- (void)finishedNoSensorCode;
- (unsigned long long)supportedInterfaceOrientations;
- (void)layoutConstraintsWith:(id)arg1 description:(id)arg2 barcodeImage:(id)arg3 bracketsImageView:(id)arg4 patchImageView:(id)arg5 noSensorCode:(id)arg6;
- (void)setUpDefaultView;
- (void)displayBarcodePhotoErrorModalAlert:(unsigned long long)arg1;
- (void)displayBarcodeScanningTimeoutAlert;
- (void)displayInvalidBarcodeAlert;
- (void)displayInvalidBarcodeModalView:(id)arg1;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)showManualEntryScreen;
- (void)processSensorCodeID:(id)arg1;
- (void)processTransmitterId:(id)arg1;
- (void)captureOutput:(id)arg1 didOutputMetadataObjects:(id)arg2 fromConnection:(id)arg3;
- (void)barcodeScanningTimeoutFired;
- (void)barcodeScanningTimeoutStop;
- (void)barcodeScanningTimeoutStart;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)focus:(struct CGPoint)arg1;
- (_Bool)startReadingHelper;
- (void)stopReading;
- (void)startReading;
- (void)appDidBecomeActive;
- (void)appWillResignActive;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)showUnauthorized;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (long long)interfaceOrientationToVideoOrientation;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)updateContraintsForSize:(struct CGSize)arg1;
- (void)viewDidLoad;
- (void)dealloc;
@property(readonly, nonatomic) NSArray *supportedMetadataObjectTypes;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMAlertSchedule : CGMBaseDataObject <NSSecureCoding>
{
    _Bool _is_default;
    _Bool _enabled;
    _Bool _always_sound;
    _Bool _every_sunday;
    _Bool _every_monday;
    _Bool _every_tuesday;
    _Bool _every_wednesday;
    _Bool _every_thursday;
    _Bool _every_friday;
    _Bool _every_saturday;
    NSString *_name;
    struct timeOfDay _starttime;
    struct timeOfDay _endtime;
    long long _recorded_system_time_sec;
    NSString *_recorded_system_time;
    NSString *_recorded_display_time;
}

+ (_Bool)supportsSecureCoding;
- (void).cxx_destruct;
@property(retain, nonatomic) NSString *recorded_display_time; // @synthesize recorded_display_time=_recorded_display_time;
@property(retain, nonatomic) NSString *recorded_system_time; // @synthesize recorded_system_time=_recorded_system_time;
@property(nonatomic) long long recorded_system_time_sec; // @synthesize recorded_system_time_sec=_recorded_system_time_sec;
@property(nonatomic) struct timeOfDay endtime; // @synthesize endtime=_endtime;
@property(nonatomic) struct timeOfDay starttime; // @synthesize starttime=_starttime;
@property(nonatomic) _Bool every_saturday; // @synthesize every_saturday=_every_saturday;
@property(nonatomic) _Bool every_friday; // @synthesize every_friday=_every_friday;
@property(nonatomic) _Bool every_thursday; // @synthesize every_thursday=_every_thursday;
@property(nonatomic) _Bool every_wednesday; // @synthesize every_wednesday=_every_wednesday;
@property(nonatomic) _Bool every_tuesday; // @synthesize every_tuesday=_every_tuesday;
@property(nonatomic) _Bool every_monday; // @synthesize every_monday=_every_monday;
@property(nonatomic) _Bool every_sunday; // @synthesize every_sunday=_every_sunday;
@property(nonatomic) _Bool always_sound; // @synthesize always_sound=_always_sound;
@property(nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
@property(nonatomic) _Bool is_default; // @synthesize is_default=_is_default;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (_Bool)isEqual:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)isAlertScheduleModeNow;
- (void)setSelectedDaysWithDictionary:(id)arg1;
- (id)timeString:(struct timeOfDay)arg1;
- (id)scheduledTime;
- (id)arrayOfScheduledDays;
- (id)detailedScheduledDays;
- (_Bool)appliesOnEveryday;
- (_Bool)appliesOnAllWeekendsOnly;
- (_Bool)noDaysSelected;
- (_Bool)appliesOnAllWeekdaysOnly;
- (_Bool)appliesOnSaturdayOrSunday;
- (_Bool)appliesOnWeekends;
- (_Bool)appliesOnSomeWeekdays;
- (_Bool)appliesOnAllWeekdays;
- (id)scheduledDays;
- (_Bool)selectedOnDay:(long long)arg1;
- (_Bool)enabledOnDay:(long long)arg1 atTime:(struct timeOfDay)arg2;
- (_Bool)enabledAtTime:(struct timeOfDay)arg1;
- (_Bool)enabledOnDay:(long long)arg1;
@property(readonly, nonatomic) int endTimestamp;
@property(readonly, nonatomic) int startTimestamp;
- (int)timeStamp:(struct timeOfDay)arg1;
- (struct timeOfDay)timeOfDay:(int)arg1;
- (id)dictionary;
- (id)initWithDictionary:(id)arg1;

@end

@interface DXCMBaseShareViewController : DXCMBaseViewController
{
}

+ (void)updateNavigationStack:(id)arg1 withDestinationViewController:(id)arg2;
- (void)addLayoutConstraintsWithOkButton:(id)arg1;
- (void)viewDidLoad;

@end

@interface CGMEGV : CGMBaseDataObject
{
    BOOL _trend_rate;
    unsigned int _recorded_system_time_sec;
    unsigned int _transmitter_time_stamp;
    unsigned int _transmitter_system_time_sec;
    unsigned int _transmitter_sessionstarttime;
    unsigned int _transmitter_sessionoffset;
    unsigned int _seq_num;
    unsigned int _glucose_value;
    unsigned int _glucose_value_flags;
    unsigned int _glucose_value_prediction;
    unsigned long long _record_id;
    NSString *_guid;
    NSString *_recorded_system_time;
    NSString *_recorded_display_time;
    NSString *_transmitter_system_time;
    NSString *_transmitter_display_time;
    NSString *_transmitter_id;
    NSString *_trend_arrow;
    NSString *_alg_state;
    NSString *_noise_mode;
    NSString *_is_immediate_match;
    NSString *_is_display_only;
    NSString *_was_backfilled;
}

- (void).cxx_destruct;
@property(copy, nonatomic) NSString *was_backfilled; // @synthesize was_backfilled=_was_backfilled;
@property(copy, nonatomic) NSString *is_display_only; // @synthesize is_display_only=_is_display_only;
@property(copy, nonatomic) NSString *is_immediate_match; // @synthesize is_immediate_match=_is_immediate_match;
@property(copy, nonatomic) NSString *noise_mode; // @synthesize noise_mode=_noise_mode;
@property(copy, nonatomic) NSString *alg_state; // @synthesize alg_state=_alg_state;
@property(nonatomic) BOOL trend_rate; // @synthesize trend_rate=_trend_rate;
@property(copy, nonatomic) NSString *trend_arrow; // @synthesize trend_arrow=_trend_arrow;
@property(nonatomic) unsigned int glucose_value_prediction; // @synthesize glucose_value_prediction=_glucose_value_prediction;
@property(nonatomic) unsigned int glucose_value_flags; // @synthesize glucose_value_flags=_glucose_value_flags;
@property(nonatomic) unsigned int glucose_value; // @synthesize glucose_value=_glucose_value;
@property(nonatomic) unsigned int seq_num; // @synthesize seq_num=_seq_num;
@property(nonatomic) unsigned int transmitter_sessionoffset; // @synthesize transmitter_sessionoffset=_transmitter_sessionoffset;
@property(nonatomic) unsigned int transmitter_sessionstarttime; // @synthesize transmitter_sessionstarttime=_transmitter_sessionstarttime;
@property(copy, nonatomic) NSString *transmitter_id; // @synthesize transmitter_id=_transmitter_id;
@property(copy, nonatomic) NSString *transmitter_display_time; // @synthesize transmitter_display_time=_transmitter_display_time;
@property(copy, nonatomic) NSString *transmitter_system_time; // @synthesize transmitter_system_time=_transmitter_system_time;
@property(nonatomic) unsigned int transmitter_system_time_sec; // @synthesize transmitter_system_time_sec=_transmitter_system_time_sec;
@property(nonatomic) unsigned int transmitter_time_stamp; // @synthesize transmitter_time_stamp=_transmitter_time_stamp;
@property(copy, nonatomic) NSString *recorded_display_time; // @synthesize recorded_display_time=_recorded_display_time;
@property(copy, nonatomic) NSString *recorded_system_time; // @synthesize recorded_system_time=_recorded_system_time;
@property(nonatomic) unsigned int recorded_system_time_sec; // @synthesize recorded_system_time_sec=_recorded_system_time_sec;
@property(retain, nonatomic) NSString *guid; // @synthesize guid=_guid;
@property(nonatomic) unsigned long long record_id; // @synthesize record_id=_record_id;
- (_Bool)isPropertyNameInvalid:(id)arg1;
@property(readonly, nonatomic) _Bool isNoReadings;
@property(readonly, nonatomic) _Bool inCalBounds;
@property(readonly, nonatomic) _Bool isPredictionValid;
@property(readonly, nonatomic) _Bool isUrgentLow;
@property(readonly, nonatomic) _Bool isUrgentLowSoon;
@property(readonly, nonatomic) long long trendArrow;
@property(readonly, nonatomic) _Bool isCurrent;
@property(readonly, nonatomic) _Bool isLow;
@property(readonly, nonatomic) _Bool isHigh;
@property(readonly, nonatomic) _Bool isValid;
- (_Bool)isDisplayOnly;
- (_Bool)isBGGenerated;
- (void)setUnixTimeForGraphing:(int)arg1;
- (int)unixTimeForGraphing;
- (id)description;

@end

@interface CGMHealthEvent : CGMEventBase
{
}

+ (id)localNameForHealthEventEnglish:(long long)arg1;
+ (id)localNameForHealthEvent:(long long)arg1;
- (id)summaryTitleForEvents:(id)arg1;
- (id)calloutDetails;
- (id)calloutTitle;
- (id)dataPostSubType;
- (long long)event_type;

@end

@interface ContactWizardData : NSObject
{
    _Bool _urgentLowNotificationEnabled;
    _Bool _lowNotificationEnabled;
    _Bool _highNotificationEnabled;
    _Bool _noDataNotificationEnabled;
    _Bool _trendGraphEnabled;
    int _urgentLowThresholdValue;
    int _lowThresholdValue;
    int _lowDelayValue;
    int _highThresholdValue;
    int _highDelayValue;
    int _noDataDelayValue;
    NSString *_nickname;
    NSString *_email;
}

+ (id)sharedInstance;
+ (id)sharedData;
- (void).cxx_destruct;
@property(retain) NSString *email; // @synthesize email=_email;
@property(retain) NSString *nickname; // @synthesize nickname=_nickname;
@property _Bool trendGraphEnabled; // @synthesize trendGraphEnabled=_trendGraphEnabled;
@property int noDataDelayValue; // @synthesize noDataDelayValue=_noDataDelayValue;
@property _Bool noDataNotificationEnabled; // @synthesize noDataNotificationEnabled=_noDataNotificationEnabled;
@property int highDelayValue; // @synthesize highDelayValue=_highDelayValue;
@property int highThresholdValue; // @synthesize highThresholdValue=_highThresholdValue;
@property _Bool highNotificationEnabled; // @synthesize highNotificationEnabled=_highNotificationEnabled;
@property int lowDelayValue; // @synthesize lowDelayValue=_lowDelayValue;
@property int lowThresholdValue; // @synthesize lowThresholdValue=_lowThresholdValue;
@property _Bool lowNotificationEnabled; // @synthesize lowNotificationEnabled=_lowNotificationEnabled;
@property int urgentLowThresholdValue; // @synthesize urgentLowThresholdValue=_urgentLowThresholdValue;
@property _Bool urgentLowNotificationEnabled; // @synthesize urgentLowNotificationEnabled=_urgentLowNotificationEnabled;
- (void)setDelay:(int)arg1 forAlertType:(id)arg2;
- (void)setThreshold:(int)arg1 forAlertType:(id)arg2;
- (void)setEnabled:(_Bool)arg1 forAlertType:(id)arg2;
- (_Bool)getEnabledForAlertType:(id)arg1;
- (void)reset;
- (id)init;

@end

@interface ReplaceSensorAlertView : UIView
{
    CDUnknownBlockType _sensorRemovalPressed;
    CDUnknownBlockType _sensorInsertionPressed;
}

- (void).cxx_destruct;
@property(copy, nonatomic) CDUnknownBlockType sensorInsertionPressed; // @synthesize sensorInsertionPressed=_sensorInsertionPressed;
@property(copy, nonatomic) CDUnknownBlockType sensorRemovalPressed; // @synthesize sensorRemovalPressed=_sensorRemovalPressed;
- (id)createButtonWithTitle:(id)arg1 accessibilityIdentifier:(id)arg2;
- (id)initWithDescription:(id)arg1;
- (void)initCommon:(id)arg1;

@end

@interface UrgentLowAlarm : SetupWizardBaseViewController
{
    UIImageView *_lowAlertImageView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIImageView *lowAlertImageView; // @synthesize lowAlertImageView=_lowAlertImageView;
- (void)updateViewConstraints;
- (void)viewDidLoad;

@end

@interface DXCMAlertScheduleTimeTableViewCell : UITableViewCell
{
    NSString *_title;
    NSString *_titleAccessibilityId;
    NSString *_detail;
    NSString *_detailAccessibilityId;
    UILabel *_titleLabel;
    UILabel *_valueLabel;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UILabel *valueLabel; // @synthesize valueLabel=_valueLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) NSString *detailAccessibilityId; // @synthesize detailAccessibilityId=_detailAccessibilityId;
@property(retain, nonatomic) NSString *detail; // @synthesize detail=_detail;
@property(retain, nonatomic) NSString *titleAccessibilityId; // @synthesize titleAccessibilityId=_titleAccessibilityId;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
- (void)addAccessibilityIdWithSuffix:(id)arg1;
- (void)initCommon;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface DSAPIExceptionTypeNamesArray : NSObject
{
}

+ (id)desc:(id)arg1;
+ (int)toExceptionType:(id)arg1;
+ (void)init;

@end

@interface DSAPIException : NSException
{
    int _codeEnum;
    long long _httpResponseCode;
}

+ (id)exception:(id)arg1 message:(id)arg2;
+ (id)exception:(id)arg1 httpResponseCode:(long long)arg2 message:(id)arg3;
@property long long httpResponseCode; // @synthesize httpResponseCode=_httpResponseCode;
@property int codeEnum; // @synthesize codeEnum=_codeEnum;
- (id)description;
- (id)initWithReason:(id)arg1 reason:(id)arg2 httpResponse:(long long)arg3 userInfo:(id)arg4;

@end

@interface DCGMControlPointCharacteristic : DXCMBluetoothCharacteristic
{
    unsigned char _genericReplyOpCode;
    unsigned char _transmitterStatusCode;
    _Bool _pendingResponse;
    NSCondition *_responseCondition;
}

- (void).cxx_destruct;
@property(retain) NSCondition *responseCondition; // @synthesize responseCondition=_responseCondition;
@property _Bool pendingResponse; // @synthesize pendingResponse=_pendingResponse;
@property(readonly) unsigned char transmitterStatusCode; // @synthesize transmitterStatusCode=_transmitterStatusCode;
@property(readonly) unsigned char genericReplyOpCode; // @synthesize genericReplyOpCode=_genericReplyOpCode;
- (_Bool)processGenericResponse:(unsigned char)arg1;
- (void)doUpdateValue:(id)arg1;
- (_Bool)writeCmdWithDelay:(unsigned char)arg1 data:(id)arg2 delay:(double)arg3;
- (_Bool)writeCmd:(unsigned char)arg1 replyOpCode:(unsigned char)arg2 data:(id)arg3 timeout:(double)arg4;
- (_Bool)writeCmd:(unsigned char)arg1 replyOpCode:(unsigned char)arg2 data:(id)arg3;
- (id)writeCmdWithReply:(unsigned char)arg1 replyOpCode:(unsigned char)arg2 data:(id)arg3 timeout:(double)arg4 ignoreFailures:(_Bool)arg5;
- (id)writeCmdWithReply:(unsigned char)arg1 replyOpCode:(unsigned char)arg2 data:(id)arg3 timeout:(double)arg4;
- (id)writeCmdWithReplyWithTimeout:(unsigned char)arg1 data:(id)arg2 timeout:(double)arg3;
- (id)writeCmdWithReply:(unsigned char)arg1 data:(id)arg2;
- (id)initWithName:(id)arg1 pUUID:(id)arg2 pPeripheral:(id)arg3 pGenericReplyOpCode:(unsigned char)arg4;

@end

@interface CGMBondedDevicesDao : CGMBaseDao
{
}

- (void)updateBondedDeviceWithName:(id)arg1 withID:(id)arg2 withBondedUuid:(id)arg3 withBonded:(_Bool)arg4 withRecordID:(unsigned long long)arg5;
- (void)addBondedDeviceWithName:(id)arg1 withID:(id)arg2 withBondedUuid:(id)arg3 withBonded:(_Bool)arg4;
- (void)deleteBondedDevice:(id)arg1;
- (void)updateBondedDevice:(id)arg1;
- (void)addBondedDevice:(id)arg1;
- (id)getBondedDevices;
- (void)eraseData;
- (void)resetDataModel;
- (void)setupDataModelIfNeeded;

@end

@interface CGMSoundButton : UIButton
{
    long long _soundState;
}

+ (id)buttonWithType:(long long)arg1;
@property(nonatomic) long long soundState; // @synthesize soundState=_soundState;
@property(readonly, nonatomic) NSString *helperText;

@end

@interface DSAPISubscription : NSObject
{
    NSString *_ContactId;
    NSString *_ContactName;
    NSString *_DisplayName;
    NSNumber *_IsEnabled;
    NSNumber *_Permission;
    NSString *_PublisherAccountId;
    NSNumber *_State;
    NSString *_SubscriberId;
    NSString *_SubscriptionId;
    NSDictionary *_contactInfo;
    DSAPIAlerts *_alertSettings;
    NSNumber *_IsMonitoringSessionActive;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSNumber *IsMonitoringSessionActive; // @synthesize IsMonitoringSessionActive=_IsMonitoringSessionActive;
@property(retain, nonatomic) DSAPIAlerts *alertSettings; // @synthesize alertSettings=_alertSettings;
@property(retain, nonatomic) NSDictionary *contactInfo; // @synthesize contactInfo=_contactInfo;
@property(retain, nonatomic) NSString *SubscriptionId; // @synthesize SubscriptionId=_SubscriptionId;
@property(retain, nonatomic) NSString *SubscriberId; // @synthesize SubscriberId=_SubscriberId;
@property(retain, nonatomic) NSNumber *State; // @synthesize State=_State;
@property(retain, nonatomic) NSString *PublisherAccountId; // @synthesize PublisherAccountId=_PublisherAccountId;
@property(retain, nonatomic) NSNumber *Permission; // @synthesize Permission=_Permission;
@property(retain, nonatomic) NSNumber *IsEnabled; // @synthesize IsEnabled=_IsEnabled;
@property(retain, nonatomic) NSString *DisplayName; // @synthesize DisplayName=_DisplayName;
@property(retain, nonatomic) NSString *ContactName; // @synthesize ContactName=_ContactName;
@property(retain, nonatomic) NSString *ContactId; // @synthesize ContactId=_ContactId;
- (id)initWithDictionary:(id)arg1;

@end

@interface CGMTransmitterCmdQueueDao : CGMBaseDao
{
}

- (void)eraseData;
- (void)resetDataModel;
- (void)setupDataModelIfNeeded;
- (id)getCmdQueueRecordDictsInRange:(unsigned long long)arg1 last:(unsigned long long)arg2;
- (unsigned int)getMaxRecordId;
- (unsigned int)getMinRecordId;
- (id)dictionaryFromJSON:(id)arg1;
- (id)queueUnprocessedCmdsList;
- (_Bool)queueCmdsPending;
- (void)queueMarkCommandProcessed:(id)arg1 result:(id)arg2;
- (id)getLatestPendingCalibration;
- (id)queueGetPendingCalibrationList;
- (id)queueGetPendingStartStopList;
- (_Bool)queueIsCalibrationPending;
- (_Bool)queueIsStartPending;
- (_Bool)queueIsStartStopPending;
- (void)queueCmd:(id)arg1 params:(id)arg2;

@end

@interface CGMCalibrationHelpTexts : UIView
{
    UITextView *_calibrationHelpTextView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UITextView *calibrationHelpTextView; // @synthesize calibrationHelpTextView=_calibrationHelpTextView;
- (void)layoutSubviews;
- (void)awakeFromNib;

@end

@interface DXCMCGMBaseCheckmarkTableViewCell : UITableViewCell
{
    NSString *_title;
    UILabel *_titleLabel;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
- (void)addCommonIdWithSuffix:(id)arg1;
- (void)addAccessibilityIdWithSuffix:(id)arg1;
- (id)myController;
@property(nonatomic) _Bool cellChecked;
- (void)toggleCheckmark;
- (void)initCommon;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

@end

@interface DSAPIBaseAPI : NSObject
{
    _Bool _disableServerComms;
    _Bool _disableInternet;
    NSDictionary *_mDataDictionary;
    NSString *_appId;
}

- (void).cxx_destruct;
@property _Bool disableInternet; // @synthesize disableInternet=_disableInternet;
@property _Bool disableServerComms; // @synthesize disableServerComms=_disableServerComms;
@property(retain, nonatomic) NSString *appId; // @synthesize appId=_appId;
@property(retain, nonatomic) NSDictionary *mDataDictionary; // @synthesize mDataDictionary=_mDataDictionary;
- (void)checkBackdoorFlags;
- (id)arrayFromJSONString:(id)arg1;
- (id)arrayFromJSON:(id)arg1;
- (id)dictionaryFromJSONString:(id)arg1;
- (id)dictionaryFromJSON:(id)arg1;
- (id)patchedStringFromJSON:(id)arg1;
- (id)stringFromJSON:(id)arg1;
- (id)toJSON:(id)arg1;
- (id)toJSONString:(id)arg1;
- (_Bool)patientIdExists;
- (id)randomlyGenerate16Bytes;
- (id)generateSecret:(id)arg1 withDeviceKey:(id)arg2;
- (id)generateSignedRequest:(id)arg1 withPayload:(id)arg2 withDeviceKey:(id)arg3 withEncryption:(_Bool)arg4;
- (id)signRequest:(id)arg1 withKey:(id)arg2 withEncryption:(_Bool)arg3;
- (void)postServerCall:(id)arg1 withPayload:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3 withExceptionBlock:(CDUnknownBlockType)arg4;
- (void)postServerCall:(id)arg1 withPayload:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (id)encodeParamURL:(id)arg1;
- (void)checkInternet;
- (id)sendRequest:(id)arg1 urlString:(id)arg2 bodyData:(id)arg3;

@end

@interface DCSAlertViewController : DXCMBaseViewController
{
    NSDictionary *_alertDict;
    UILabel *_titleLabel;
    UIView *_titleLabelSuperview;
    UIView *_safeAreaView;
    UITextView *_userMessageTextView;
    NSArray *_buttonsToShow;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSArray *buttonsToShow; // @synthesize buttonsToShow=_buttonsToShow;
@property(retain, nonatomic) UITextView *userMessageTextView; // @synthesize userMessageTextView=_userMessageTextView;
@property(nonatomic) __weak UIView *safeAreaView; // @synthesize safeAreaView=_safeAreaView;
@property(nonatomic) __weak UIView *titleLabelSuperview; // @synthesize titleLabelSuperview=_titleLabelSuperview;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) NSDictionary *alertDict; // @synthesize alertDict=_alertDict;
- (_Bool)shouldAutorotate;
- (void)updateViewFromDict;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface DPBundleBuilder : NSObject
{
    _Bool _shouldGzip;
    id <DPPublicDataSourceProtocol> _publicDataDataSource;
}

+ (id)removeUniqueKeysFromArrayOfDictionaries:(id)arg1;
+ (id)sharedInstance;
- (void).cxx_destruct;
@property(retain, nonatomic) id <DPPublicDataSourceProtocol> publicDataDataSource; // @synthesize publicDataDataSource=_publicDataDataSource;
@property(nonatomic) _Bool shouldGzip; // @synthesize shouldGzip=_shouldGzip;
- (id)CreateContainerForObject:(id)arg1 patientId:(id)arg2 shouldGZip:(_Bool)arg3;
- (int)UnixTimeFromUTCDateTime:(id)arg1;
- (id)LocalTimeFromUnixTime:(int)arg1;
- (id)UTCTimeFromUnixTime:(int)arg1;
- (int)bundleIntervalForRecordType:(id)arg1;
- (id)removeTimestampFromArrayOfDictionaries:(id)arg1;
- (_Bool)hasRecordsEntryChanged:(id)arg1;
- (_Bool)hasEnoughTimePassedForRecordsEntry:(id)arg1;
- (_Bool)doWeNeedToUploadRecords:(id)arg1;
- (_Bool)doWeNeedToCreateNewBundle;
- (void)deleteDebugLogsBeforeTime:(int)arg1;
- (void)deleteUserActivityLogsBeforeTime:(int)arg1;
- (void)deleteCrashLogsBeforeTime:(int)arg1;
- (void)deletePrivateDataBeforeTime:(int)arg1;
- (void)deleteDataBeforeTime:(int)arg1;
- (id)getContentEntryForDiagnosticDataBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)getContentEntryForUserActivitiesBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)getErrorLogsBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)getContentEntryForErrorLogsBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)getContentEntryForCrashLogsBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)getPrivateDataContentForDataBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)getContentEntryForAlertStatusInfoBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)generateUniqueIdForEvent:(id)arg1;
- (id)getContentEntryForNutritionInfoBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)getContentEntryForInventoryLog;
- (id)createDeviceInfo;
- (id)getContentEntryForDeviceInfo;
- (id)createAlertScheduleInfo;
- (id)getContentEntryForAlertSchedule;
- (id)getContentEntryForWorkoutEventsBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)systemTimeFromDisplayTime:(id)arg1;
- (id)unitsTypeStringFromEvent:(id)arg1;
- (id)getContentEntryForUserEventsBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)transformLogType:(id)arg1;
- (id)getContentEntryForSensorSessionsBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)getContentEntryForMeterDataBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (_Bool)wasEGVInSensorNoise:(id)arg1;
- (_Bool)wasEGVOutOfCal:(id)arg1;
- (_Bool)wasEGVDuringWarmup:(id)arg1;
- (id)getTrendRateStatusFromEGV:(id)arg1;
- (id)CreateGlucoseRecordFromCGMEGV:(id)arg1;
- (id)getContentEntryForGlucoseDataBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)getManifestEntryFromContentEntry:(id)arg1;
- (id)getPublicDataContentForDataBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)getDataManifestFromDataContent:(id)arg1;
- (id)getPostHeader:(id)arg1 sequenceNumber:(int)arg2;
- (id)getDataPostBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)getDataPostsBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)init;

@end

@interface CGMEventManagerViewController : DXCMBaseViewController
{
    CGMEventBase *_event;
    UIBarButtonItem *_addButton;
    UIBarButtonItem *_cancelButton;
    id <CGMEventManagerViewDelegate> _eventDelegate;
}

- (void).cxx_destruct;
@property(nonatomic) __weak id <CGMEventManagerViewDelegate> eventDelegate; // @synthesize eventDelegate=_eventDelegate;
@property(nonatomic) __weak UIBarButtonItem *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(nonatomic) __weak UIBarButtonItem *addButton; // @synthesize addButton=_addButton;
@property(retain, nonatomic) CGMEventBase *event; // @synthesize event=_event;
- (void)onCancel:(id)arg1;
- (void)onAdd:(id)arg1;
- (void)willCancelAction;
- (id)messageForAddEventConfirmation;
- (id)titleForAddEventConfirmation;
- (_Bool)isValidData;
- (void)viewDidLoad;

@end

@interface DSAPIAlerts : NSObject
{
    DSAPIAlert *_urgentLowAlert;
    DSAPIAlert *_lowAlert;
    DSAPIAlert *_highAlert;
    DSAPIAlert *_nodataAlert;
}

- (void).cxx_destruct;
@property(retain, nonatomic) DSAPIAlert *nodataAlert; // @synthesize nodataAlert=_nodataAlert;
@property(retain, nonatomic) DSAPIAlert *highAlert; // @synthesize highAlert=_highAlert;
@property(retain, nonatomic) DSAPIAlert *lowAlert; // @synthesize lowAlert=_lowAlert;
@property(retain, nonatomic) DSAPIAlert *urgentLowAlert; // @synthesize urgentLowAlert=_urgentLowAlert;
- (id)initWithDictionary:(id)arg1;

@end

@interface AlertPopupModel : NSObject <NSCoding>
{
    unsigned long long _alertType;
    NSString *_alertDescriptionString;
    NSString *_alertTitleString;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *alertTitleString; // @synthesize alertTitleString=_alertTitleString;
@property(retain, nonatomic) NSString *alertDescriptionString; // @synthesize alertDescriptionString=_alertDescriptionString;
@property(nonatomic) unsigned long long alertType; // @synthesize alertType=_alertType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface CGMAlertScheduleWizardEndTimeViewController : DXCMBaseAlertScheduleSetupViewController
{
    UILabel *_descriptionLabel;
    UIDatePicker *_endTimePicker;
}

- (void).cxx_destruct;
@property(nonatomic) __weak UIDatePicker *endTimePicker; // @synthesize endTimePicker=_endTimePicker;
@property(nonatomic) __weak UILabel *descriptionLabel; // @synthesize descriptionLabel=_descriptionLabel;
- (void)endTimePickerValueChanged:(id)arg1;
- (void)updateAlertScheduleData;
- (void)viewDidLoad;

@end

@interface CGMShareEGVDao : CGMBaseDao
{
    CGMEGV *_current;
}

- (void).cxx_destruct;
@property(readonly, copy, nonatomic, getter=getCurrentEgvRecord) CGMEGV *current; // @synthesize current=_current;
- (void)deleteEGVsAfterTime:(int)arg1;
- (void)deleteEGVsBeforeTime:(int)arg1;
- (id)getUnuploadedEGVs;
- (int)countUnuploadedEGVs;
- (void)insertEGV:(id)arg1;
- (void)eraseData;
- (void)resetDataModel;
- (void)setupDataModelIfNeeded;

@end

@interface DSAPIAlert : CGMBaseDataObject
{
    NSString *_AlarmDelay;
    NSString *_AlertId;
    NSNumber *_AlertType;
    NSNumber *_IsEnabled;
    NSNumber *_MaxValue;
    NSNumber *_MinValue;
    NSString *_RealarmDelay;
    NSString *_Sound;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *Sound; // @synthesize Sound=_Sound;
@property(retain, nonatomic) NSString *RealarmDelay; // @synthesize RealarmDelay=_RealarmDelay;
@property(retain, nonatomic) NSNumber *MinValue; // @synthesize MinValue=_MinValue;
@property(retain, nonatomic) NSNumber *MaxValue; // @synthesize MaxValue=_MaxValue;
@property(retain, nonatomic) NSNumber *IsEnabled; // @synthesize IsEnabled=_IsEnabled;
@property(retain, nonatomic) NSNumber *AlertType; // @synthesize AlertType=_AlertType;
@property(retain, nonatomic) NSString *AlertId; // @synthesize AlertId=_AlertId;
@property(retain, nonatomic) NSString *AlarmDelay; // @synthesize AlarmDelay=_AlarmDelay;
- (void)setRealarmDelayString:(id)arg1;
- (id)realarmDelayString;
- (unsigned long long)realarmDelay;
- (void)setAlarmDelayString:(id)arg1;
- (unsigned long long)alarmDelay;
- (id)initWithDictionary:(id)arg1;

@end

@interface CGMContactsDao : CGMBaseDao
{
}

- (id)getLocalContactFromServerContact:(id)arg1;
- (void)updateContactsWithSubscriptions:(id)arg1;
- (id)getContactIDFromSubscriptionID:(id)arg1;
- (id)getContactIDFromName:(id)arg1;
- (id)getContactSubscriptionId:(id)arg1;
- (id)getContactName:(id)arg1;
- (_Bool)getContactNotificationPermission:(id)arg1 type:(id)arg2;
- (id)getEnableColumnName:(id)arg1;
- (void)updateContactEmail:(id)arg1 email:(id)arg2;
- (void)updateContactName:(id)arg1 name:(id)arg2;
- (id)getAllContacts;
- (id)getContact:(id)arg1;
- (void)deleteContact:(id)arg1;
- (void)updateContact:(id)arg1 contact:(id)arg2;
- (void)addContact:(id)arg1;
- (id)getAllContactIdsForState:(unsigned long long)arg1;
- (id)getAllContactIds;
- (void)eraseData;
- (void)resetDataModel;
- (void)setupDataModelIfNeeded;

@end

@interface DPUserActivityRecord : DPBaseRecord
{
    NSString *_UserActivityType;
    NSString *_UserActivitySubType;
    NSString *_Data;
}

- (void).cxx_destruct;
@property(retain) NSString *Data; // @synthesize Data=_Data;
@property(retain) NSString *UserActivitySubType; // @synthesize UserActivitySubType=_UserActivitySubType;
@property(retain) NSString *UserActivityType; // @synthesize UserActivityType=_UserActivityType;

@end

@interface CGMSiriActiveActionsViewController : DXCMBaseViewController <INUIAddVoiceShortcutViewControllerDelegate, INUIEditVoiceShortcutViewControllerDelegate, UITableViewDelegate, UITableViewDataSource>
{
    _Bool _needsReload;
    _Bool _hasActivePhrase;
    UITableView *_tableView;
    NSArray *_voiceShortcuts;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSArray *voiceShortcuts; // @synthesize voiceShortcuts=_voiceShortcuts;
@property(nonatomic) _Bool hasActivePhrase; // @synthesize hasActivePhrase=_hasActivePhrase;
@property(nonatomic) _Bool needsReload; // @synthesize needsReload=_needsReload;
@property(nonatomic) __weak UITableView *tableView; // @synthesize tableView=_tableView;
- (void)editVoiceShortcutViewControllerDidCancel:(id)arg1;
- (void)editVoiceShortcutViewController:(id)arg1 didDeleteVoiceShortcutWithIdentifier:(id)arg2;
- (void)editVoiceShortcutViewController:(id)arg1 didUpdateVoiceShortcut:(id)arg2 error:(id)arg3;
- (void)addVoiceShortcutViewControllerDidCancel:(id)arg1;
- (void)addVoiceShortcutViewController:(id)arg1 didFinishWithVoiceShortcut:(id)arg2 error:(id)arg3;
- (void)updateData;
- (void)updateTable;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (void)setupTableView;
- (void)initDataSource;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DXCMDDTTYLogger : DDTTYLogger
{
}

- (void)logMessage:(id)arg1;

@end

@interface DEXSounds : NSObject
{
}

+ (id)sharedInstance;
+ (void)initialize;
- (_Bool)checkIfSoundNameExists:(id)arg1 category:(id)arg2;
- (id)getSoundDisplayNameForFileName:(id)arg1 category:(id)arg2;
- (id)getFileNameForSoundDisplayName:(id)arg1 category:(id)arg2;
- (id)getAllSoundFileNamesForCategory:(id)arg1;
- (id)getAllSoundDisplayNamesForCategory:(id)arg1;
- (id)getAllSoundCategoryNames;
- (id)getAccessibilityIdForSound:(id)arg1;
- (id)getLocalizedStringFromSound:(id)arg1;

@end

@interface CGMSampleMealDao : CGMBaseDao
{
}

- (long long)insertMealData:(id)arg1;
- (id)getRecordsBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)fetchMealsDictionaryAfterStartTimeStamp:(double)arg1 isDeleted:(_Bool)arg2;
- (id)fetchCarbsEventAfterStartTimeStamp:(double)arg1;
- (id)fetchMealWithID:(id)arg1;
- (void)deleteMealWithUUID:(id)arg1;
- (void)resetDataModel;
- (_Bool)hasMealWithMealEvent:(id)arg1;
- (void)setupDataModelIfNeeded;

@end

@interface CGMHKMealEvent : CGMHealthkitEventBase
{
    NSString *_sample_meal_type;
    NSString *_sample_food_type;
    NSString *_event_carbs_uuid;
    double _event_carbs_value;
    NSString *_event_fat_uuid;
    double _event_fat_value;
    NSString *_event_sugar_uuid;
    double _event_sugar_value;
    NSString *_event_protein_uuid;
    double _event_protein_value;
    NSString *_event_calories_uuid;
    double _event_calories_value;
    NSString *_event_fiber_uuid;
    double _event_fiber_value;
}

- (void).cxx_destruct;
@property double event_fiber_value; // @synthesize event_fiber_value=_event_fiber_value;
@property(retain, nonatomic) NSString *event_fiber_uuid; // @synthesize event_fiber_uuid=_event_fiber_uuid;
@property double event_calories_value; // @synthesize event_calories_value=_event_calories_value;
@property(retain, nonatomic) NSString *event_calories_uuid; // @synthesize event_calories_uuid=_event_calories_uuid;
@property double event_protein_value; // @synthesize event_protein_value=_event_protein_value;
@property(retain, nonatomic) NSString *event_protein_uuid; // @synthesize event_protein_uuid=_event_protein_uuid;
@property double event_sugar_value; // @synthesize event_sugar_value=_event_sugar_value;
@property(retain, nonatomic) NSString *event_sugar_uuid; // @synthesize event_sugar_uuid=_event_sugar_uuid;
@property double event_fat_value; // @synthesize event_fat_value=_event_fat_value;
@property(retain, nonatomic) NSString *event_fat_uuid; // @synthesize event_fat_uuid=_event_fat_uuid;
@property double event_carbs_value; // @synthesize event_carbs_value=_event_carbs_value;
@property(retain, nonatomic) NSString *event_carbs_uuid; // @synthesize event_carbs_uuid=_event_carbs_uuid;
@property(retain, nonatomic) NSString *sample_food_type; // @synthesize sample_food_type=_sample_food_type;
@property(retain, nonatomic) NSString *sample_meal_type; // @synthesize sample_meal_type=_sample_meal_type;
- (id)initWithDictionary:(id)arg1;

@end

@interface CGMEventDurationPickerTableViewCell : DXCMBaseTableViewCell <UIPickerViewDataSource, UIPickerViewDelegate>
{
    id <CGMEventDurationPickerTableViewCellDelegate> _delegate;
    unsigned long long _hours;
    unsigned long long _minutes;
    UIPickerView *_durationPicker;
}

+ (id)reuseIdentifier;
- (void).cxx_destruct;
@property(retain, nonatomic) UIPickerView *durationPicker; // @synthesize durationPicker=_durationPicker;
@property(nonatomic) unsigned long long minutes; // @synthesize minutes=_minutes;
@property(nonatomic) unsigned long long hours; // @synthesize hours=_hours;
@property(nonatomic) __weak id <CGMEventDurationPickerTableViewCellDelegate> delegate; // @synthesize delegate=_delegate;
- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (double)pickerView:(id)arg1 widthForComponent:(long long)arg2;
- (id)pickerView:(id)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(id)arg1;
- (void)setDurationWithHours:(unsigned long long)arg1 minutes:(unsigned long long)arg2 animated:(_Bool)arg3;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DPInventoryRecord : DPBaseRecord
{
    NSString *_RecordVersion;
    NSString *_RecordId;
    NSString *_RecordedTime;
    NSString *_TransmitterId;
    NSString *_TransmitterVersion;
    NSString *_TransmitterSW;
    NSNumber *_TransmitterTicks;
    NSString *_HostSW;
    NSString *_HostVersion;
    NSString *_HostDeviceModel;
    NSString *_HostOSVersion;
    NSArray *_Accessories;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSArray *Accessories; // @synthesize Accessories=_Accessories;
@property(retain, nonatomic) NSString *HostOSVersion; // @synthesize HostOSVersion=_HostOSVersion;
@property(retain, nonatomic) NSString *HostDeviceModel; // @synthesize HostDeviceModel=_HostDeviceModel;
@property(retain, nonatomic) NSString *HostVersion; // @synthesize HostVersion=_HostVersion;
@property(retain, nonatomic) NSString *HostSW; // @synthesize HostSW=_HostSW;
@property(retain, nonatomic) NSNumber *TransmitterTicks; // @synthesize TransmitterTicks=_TransmitterTicks;
@property(retain, nonatomic) NSString *TransmitterSW; // @synthesize TransmitterSW=_TransmitterSW;
@property(retain, nonatomic) NSString *TransmitterVersion; // @synthesize TransmitterVersion=_TransmitterVersion;
@property(retain, nonatomic) NSString *TransmitterId; // @synthesize TransmitterId=_TransmitterId;
@property(retain, nonatomic) NSString *RecordedTime; // @synthesize RecordedTime=_RecordedTime;
@property(retain, nonatomic) NSString *RecordId; // @synthesize RecordId=_RecordId;
@property(retain, nonatomic) NSString *RecordVersion; // @synthesize RecordVersion=_RecordVersion;
- (id)getAccessoryArray;
- (id)init;

@end

@interface DXCMProgressHUD : MBProgressHUD
{
    double _dismissDelay;
}

@property(nonatomic) double dismissDelay; // @synthesize dismissDelay=_dismissDelay;

@end

@interface ShareLetsGetStartedViewController : DXCMBaseShareViewController
{
    UILabel *_shareWelcomeLabel;
}

- (void).cxx_destruct;
@property(nonatomic) __weak UILabel *shareWelcomeLabel; // @synthesize shareWelcomeLabel=_shareWelcomeLabel;
- (void)showDataConsentScreensIfNeeded:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface DXCMBaseAlertScheduleSetupViewController : DXCMBaseViewController
{
    _Bool _isFirstWizardStep;
    _Bool _isLastWizardStep;
    _Bool _isDataValid;
    NSString *_screenTitle;
    NSString *_shortTitle;
    NSMutableDictionary *_alertScheduleData;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool isDataValid; // @synthesize isDataValid=_isDataValid;
@property(nonatomic) _Bool isLastWizardStep; // @synthesize isLastWizardStep=_isLastWizardStep;
@property(nonatomic) _Bool isFirstWizardStep; // @synthesize isFirstWizardStep=_isFirstWizardStep;
@property(retain, nonatomic) NSMutableDictionary *alertScheduleData; // @synthesize alertScheduleData=_alertScheduleData;
@property(retain, nonatomic) NSString *shortTitle; // @synthesize shortTitle=_shortTitle;
@property(retain, nonatomic) NSString *screenTitle; // @synthesize screenTitle=_screenTitle;
- (id)alertSchedule;
- (void)setupAlertScheduleDataDictionary:(id)arg1;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)updateAlertScheduleData;
- (void)backButtonClicked;
- (void)createAlertSchedule;
- (void)completeSetupWizard;
- (void)cancelSetupWizard;
- (void)showNextStep;
- (void)viewDidLoad;

@end

@interface OnduoHelper : NSObject
{
}

+ (id)authorizeUrl;
+ (_Bool)isCompanionAppInstalled;

@end

@interface ShareStatusCell : DXCMCGMBaseTableViewCell
{
    _Bool _phoneStatus;
    _Bool _internetStatus;
    _Bool _cloudStatus;
    UIImageView *_phoneCircle;
    UIImageView *_cloudCircle;
    UIImageView *_internetBar;
    DXCMBlockButton *_helpButton;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool cloudStatus; // @synthesize cloudStatus=_cloudStatus;
@property(nonatomic) _Bool internetStatus; // @synthesize internetStatus=_internetStatus;
@property(nonatomic) _Bool phoneStatus; // @synthesize phoneStatus=_phoneStatus;
@property(retain, nonatomic) DXCMBlockButton *helpButton; // @synthesize helpButton=_helpButton;
@property(retain, nonatomic) UIImageView *internetBar; // @synthesize internetBar=_internetBar;
@property(retain, nonatomic) UIImageView *cloudCircle; // @synthesize cloudCircle=_cloudCircle;
@property(retain, nonatomic) UIImageView *phoneCircle; // @synthesize phoneCircle=_phoneCircle;
- (void)updateHelpButtonVisibilty;

@end

@interface CGMModeofContactViewController : DXCMBaseViewController <UITableViewDataSource, UITableViewDelegate>
{
    NSMutableArray *section1Cells;
    UITableView *_tableView;
    long long _supportType;
}

- (void).cxx_destruct;
@property(nonatomic) long long supportType; // @synthesize supportType=_supportType;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void)close:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMDiagnosticData : CGMBaseDataObject
{
    unsigned char _type_id;
    unsigned int _recorded_system_time_sec;
    unsigned int _start_time;
    unsigned int _end_time;
    unsigned long long _record_id;
    NSString *_transmitter_id;
    NSData *_data;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(nonatomic) unsigned int end_time; // @synthesize end_time=_end_time;
@property(nonatomic) unsigned int start_time; // @synthesize start_time=_start_time;
@property(nonatomic) unsigned int recorded_system_time_sec; // @synthesize recorded_system_time_sec=_recorded_system_time_sec;
@property(retain, nonatomic) NSString *transmitter_id; // @synthesize transmitter_id=_transmitter_id;
@property(nonatomic) unsigned char type_id; // @synthesize type_id=_type_id;
@property(readonly, nonatomic) unsigned long long record_id; // @synthesize record_id=_record_id;
- (id)dictionary;
- (_Bool)isPropertyNameInvalid:(id)arg1;
- (id)description;
@property(readonly, nonatomic) NSString *type_string;
@property(readonly, nonatomic) NSString *recorded_system_time_native;
@property(readonly, nonatomic) NSString *recorded_system_time;

@end

@interface CGMDiagnosticDataDao : CGMBaseDao
{
}

- (void)wipeAllData;
- (void)resetDataModel;
- (void)setupDataModelIfNeeded;
- (void)purgeDataWithType:(unsigned char)arg1 olderThan:(unsigned int)arg2;
- (void)deleteRecordsWithIds:(id)arg1;
- (_Bool)hasRecordsWithType:(unsigned char)arg1 andTransmitterId:(id)arg2;
- (id)getAllRecords;
- (id)getRecordsWithType:(unsigned char)arg1 betweenStartTime:(unsigned int)arg2 andEndTime:(unsigned int)arg3;
- (id)getRecordsWithType:(unsigned char)arg1;
- (id)getRecordsWithTransmitterId:(id)arg1;
- (unsigned long long)insertDiagnosticData:(id)arg1;

@end

@interface CGMAccountSettingsViewController : DXCMBaseViewController <UIImagePickerControllerDelegate, UITableViewDelegate, UITableViewDataSource>
{
    UITableView *_tableView;
    UIView *_sectionHeaderView;
    UIImageView *_photoImageView;
    NSArray *_sectionCells;
    DXCMCGMBaseTableViewCell *_displayNameCell;
    DXCMCGMBaseTableViewCell *_emailCell;
    DXCMCGMBaseTableViewCell *_usernameCell;
}

- (void).cxx_destruct;
@property(retain, nonatomic) DXCMCGMBaseTableViewCell *usernameCell; // @synthesize usernameCell=_usernameCell;
@property(retain, nonatomic) DXCMCGMBaseTableViewCell *emailCell; // @synthesize emailCell=_emailCell;
@property(retain, nonatomic) DXCMCGMBaseTableViewCell *displayNameCell; // @synthesize displayNameCell=_displayNameCell;
@property(retain, nonatomic) NSArray *sectionCells; // @synthesize sectionCells=_sectionCells;
@property(retain, nonatomic) UIImageView *photoImageView; // @synthesize photoImageView=_photoImageView;
@property(retain, nonatomic) UIView *sectionHeaderView; // @synthesize sectionHeaderView=_sectionHeaderView;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (id)createSectionHeaderView;
- (void)configureTableView;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)dealloc;
- (void)updateProfileInfo;
- (void)dataConsentStatusChangedRemotely;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMAboutViewController : DXCMBaseViewController <UITableViewDataSource, UITableViewDelegate>
{
    NSMutableArray *section1Cells;
    UITableView *_tableView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DXCMCGMBaseTableViewCell : UITableViewCell
{
    _Bool _showDisclosureIndicator;
    _Bool _showLeftImageView;
    long long _dxcmCellStyle;
    UILabel *_titleLabel;
    UILabel *_valueLabel;
    UIImageView *_iconView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIImageView *iconView; // @synthesize iconView=_iconView;
@property(retain, nonatomic) UILabel *valueLabel; // @synthesize valueLabel=_valueLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(nonatomic) long long dxcmCellStyle; // @synthesize dxcmCellStyle=_dxcmCellStyle;
@property(nonatomic) _Bool showLeftImageView; // @synthesize showLeftImageView=_showLeftImageView;
@property(nonatomic) _Bool showDisclosureIndicator; // @synthesize showDisclosureIndicator=_showDisclosureIndicator;
- (void)addCommonIdWithSuffix:(id)arg1;
- (void)addAccessibilityIdWithSuffix:(id)arg1;
@property(retain, nonatomic) NSString *value;
@property(retain, nonatomic) NSString *title;
@property(retain, nonatomic) UIImage *icon;
- (id)myController;
- (void)cellTapped:(id)arg1;
- (void)updateConstraints;
- (void)initCommon;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

@end

@interface DXCMHelpText : NSObject
{
}

+ (id)transmitterPairingRangeHelpText;
+ (id)noReadingsHelpText;
+ (id)oobeTransmitterPairingText;
+ (id)transmitterPairingText;

@end

@interface CGMAlertScheduleDao : CGMBaseDao
{
}

- (int)latestRecordedUpdateTimeSeconds;
- (void)deleteCustomAlertSchedule;
- (void)alertScheduleAlwaysSoundEnabled:(_Bool)arg1 isDefault:(_Bool)arg2;
- (void)alertScheduleEnabled:(_Bool)arg1 isDefault:(_Bool)arg2;
- (id)getAllAlertSchedules;
- (id)customAlertSchedule;
- (id)defaultAlertSchedule;
- (void)modifyAlertSchedule:(id)arg1;
- (void)insertAlertSchedule:(id)arg1;
- (void)resetDataModel;
- (void)setupDataModelIfNeeded;

@end

@interface DXCMKeychain : NSObject
{
    NSObject<OS_dispatch_queue> *_keychainDispatchQueue;
    FXKeychain *_appKeychain;
    FXKeychain *_sharedKeychain;
    NSString *_cachedDbKey;
}

+ (void)onResetToOOBE;
+ (void)setRefreshToken:(id)arg1;
+ (id)refreshToken;
+ (void)setDatabaseKey:(id)arg1;
+ (id)databaseKey;
+ (void)setUsername:(id)arg1;
+ (id)username;
+ (id)shared;
- (void).cxx_destruct;
@property(retain, nonatomic) NSString *cachedDbKey; // @synthesize cachedDbKey=_cachedDbKey;
@property(retain, nonatomic) FXKeychain *sharedKeychain; // @synthesize sharedKeychain=_sharedKeychain;
@property(retain, nonatomic) FXKeychain *appKeychain; // @synthesize appKeychain=_appKeychain;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *keychainDispatchQueue; // @synthesize keychainDispatchQueue=_keychainDispatchQueue;
- (_Bool)deleteItemFromKeychain:(id)arg1 forKey:(id)arg2;
- (_Bool)deleteItemFromSharedKeychainForKey:(id)arg1;
- (_Bool)deleteItemFromAppKeychainForKey:(id)arg1;
- (_Bool)setItem:(id)arg1 forKeychain:(id)arg2 forKey:(id)arg3;
- (_Bool)setItemInSharedKeychainForItem:(id)arg1 forKey:(id)arg2;
- (_Bool)setItemInAppKeychainForItem:(id)arg1 forKey:(id)arg2;
- (id)getItemFromKeychain:(id)arg1 forKey:(id)arg2;
- (id)getItemFromSharedKeychainForKey:(id)arg1;
- (id)getItemFromAppKeychainForKey:(id)arg1;
- (id)bundleIdentifier;
- (id)init;
- (_Bool)isUnitTest;

@end

@interface DXCMLog : DDLog
{
}

+ (void)info:(id)arg1;
+ (void)warning:(id)arg1;
+ (void)error:(id)arg1;
+ (void)verbose:(id)arg1;

@end

@interface smartButton : UIBarButtonItem
{
    CDUnknownBlockType block;
}

- (void).cxx_destruct;
- (void)doBlock;
- (void)setClickBlock:(CDUnknownBlockType)arg1;

@end

@interface DXCMUIObjects : NSObject
{
}

+ (id)DXCMLogo;
+ (id)smartBarButtonItemWithBarButtonSystemItem:(long long)arg1 andBlock:(CDUnknownBlockType)arg2;
+ (void)DXCMApplyCancelThemeToButton:(id)arg1 withTitle:(id)arg2;
+ (id)DXCMCancelButtonWithTitle:(id)arg1;
+ (void)DXCMApplyOKThemeToButton:(id)arg1 withTitle:(id)arg2;
+ (id)DXCMOKButtonWithTitle:(id)arg1;

@end

@interface CGMHealthkitEventBase : CGMBaseDataObject <DXCMEventInfo>
{
    int eventValue;
    unsigned long long eventKind;
    unsigned long long eventSubkind;
    NSDate *eventStartTime;
    double eventDuration;
    NSDate *eventEndTime;
    NSString *calloutTitle;
    NSString *calloutDetails;
    NSString *_event_source_app;
    NSString *_event_source_bundle_id;
    NSString *_event_data_source;
    long long _recorded_system_time_sec;
    long long _event_start_time;
    long long _event_end_time;
    NSString *_event_uuid;
    NSString *_event_source_version;
    NSString *_event_record_status;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *event_record_status; // @synthesize event_record_status=_event_record_status;
@property(retain, nonatomic) NSString *event_source_version; // @synthesize event_source_version=_event_source_version;
@property(retain, nonatomic) NSString *event_uuid; // @synthesize event_uuid=_event_uuid;
@property long long event_end_time; // @synthesize event_end_time=_event_end_time;
@property long long event_start_time; // @synthesize event_start_time=_event_start_time;
@property long long recorded_system_time_sec; // @synthesize recorded_system_time_sec=_recorded_system_time_sec;
@property(retain, nonatomic) NSString *event_data_source; // @synthesize event_data_source=_event_data_source;
@property(retain, nonatomic) NSString *event_source_bundle_id; // @synthesize event_source_bundle_id=_event_source_bundle_id;
@property(retain, nonatomic) NSString *event_source_app; // @synthesize event_source_app=_event_source_app;
@property(nonatomic) int eventValue; // @synthesize eventValue;
@property(nonatomic) double eventDuration; // @synthesize eventDuration;
@property(retain, nonatomic) NSDate *eventStartTime; // @synthesize eventStartTime;
@property(nonatomic) unsigned long long eventSubkind; // @synthesize eventSubkind;
@property(nonatomic) unsigned long long eventKind; // @synthesize eventKind;
- (id)summaryDetailForEvents:(id)arg1;
- (id)summaryTitleForEvents:(id)arg1;
@property(readonly, nonatomic) NSString *calloutDetails; // @synthesize calloutDetails;
@property(readonly, nonatomic) NSString *calloutTitle; // @synthesize calloutTitle;
@property(readonly, nonatomic) NSDate *eventEndTime; // @synthesize eventEndTime;
- (_Bool)isHealthKitEvent;
- (_Bool)isEditable;
- (id)eventDetailText;
- (id)eventDate;
- (id)eventDescription;
- (int)eventType;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMDataSnapshot : NSObject
{
}

+ (id)getActiveAlerts;
+ (unsigned long long)getAlgoState;
+ (id)snapshotDictionaryFromUserAlert:(id)arg1;
+ (id)alertSettingsDictionary;
+ (id)alertSettingsSnapshot;
+ (id)cgmDataSnapshot;

@end

@interface CGMSensorRemovalViewController : DXCMBaseViewController <UIScrollViewDelegate>
{
    UIBarButtonItem *_rightBarButtonItem;
    NSString *_redBannerTitle;
    CDUnknownBlockType _nextConfirmPressedBlock;
    UIScrollView *_scrollView;
    UIView *_redWarningView;
    UIStackView *_stackView;
    DXCMBlockButton *_nextButton;
}

- (void).cxx_destruct;
@property(retain, nonatomic) DXCMBlockButton *nextButton; // @synthesize nextButton=_nextButton;
@property(retain, nonatomic) UIStackView *stackView; // @synthesize stackView=_stackView;
@property(retain, nonatomic) UIView *redWarningView; // @synthesize redWarningView=_redWarningView;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(copy, nonatomic) CDUnknownBlockType nextConfirmPressedBlock; // @synthesize nextConfirmPressedBlock=_nextConfirmPressedBlock;
@property(retain, nonatomic) NSString *redBannerTitle; // @synthesize redBannerTitle=_redBannerTitle;
@property(retain, nonatomic) UIBarButtonItem *rightBarButtonItem; // @synthesize rightBarButtonItem=_rightBarButtonItem;
- (void)scrollViewDidScroll:(id)arg1;
- (id)createStackView:(id)arg1 withAlignment:(long long)arg2;
- (void)showMarketingWebview;
- (void)showUserConfirmationDialog;
- (id)createViewWithImageName:(id)arg1 andMessage:(id)arg2 withAccessibility:(id)arg3;
- (id)createViewWithImageName:(id)arg1 instText:(id)arg2 andMessage:(id)arg3 withAccessibility:(id)arg4;
- (id)createViewWithHeadline:(id)arg1 accessibilityID:(id)arg2;
- (id)redBannerViewWithMessage:(id)arg1;
- (id)configureProStackView;
- (id)loadAndConfigureStackView;
- (id)createViewWithImageName:(id)arg1;
- (id)createViewWithMessage:(id)arg1 accessibilityId:(id)arg2;
- (id)createViewWithLinkText:(id)arg1 linkString:(id)arg2 urlString:(id)arg3 accessibilityId:(id)arg4;
- (id)linkedStringFromFullString:(id)arg1 withLinkString:(id)arg2 andUrlString:(id)arg3;
- (id)configureStackView;
- (void)layoutSensorRemovalInstructionView;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMResourceManager : NSObject <DXCMNotificationDelegate>
{
    NSString *_logName;
    NSDate *_lastTimeTransmitterUpdated;
    NSTimer *_rangeTimer;
    NSObject<OS_dispatch_queue> *_subscribedQueue;
    NSMutableArray *_subscribedEngines;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableArray *subscribedEngines; // @synthesize subscribedEngines=_subscribedEngines;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *subscribedQueue; // @synthesize subscribedQueue=_subscribedQueue;
@property(retain, nonatomic) NSTimer *rangeTimer; // @synthesize rangeTimer=_rangeTimer;
@property(retain) NSDate *lastTimeTransmitterUpdated; // @synthesize lastTimeTransmitterUpdated=_lastTimeTransmitterUpdated;
@property(readonly) NSString *logName; // @synthesize logName=_logName;
- (void)processNotificationAppWasAlreadyInForeground:(id)arg1 alertType:(unsigned long long)arg2;
- (void)rangeTimerHandler;
- (_Bool)unsubscribeForDataSourceUpdates:(id)arg1;
- (_Bool)subscribeForDataSourceUpdates:(id)arg1 withEvents:(unsigned long long)arg2;
- (void)notifySubscribersForEvent:(unsigned long long)arg1;
- (_Bool)isTimeLossEvent;
- (_Bool)isOutOfRange;
- (long long)timeLeftInSession;
- (_Bool)isTransmitterNotFound;
- (void)setRangeTimer;
- (_Bool)gotNewEGV;
- (void)gotXmitDataUpdateNotification:(id)arg1;
- (void)gotGraphHeightSettingChanged:(id)arg1;
- (void)gotAlertSettingsChangedNofification:(id)arg1;
- (void)willResignActive:(id)arg1;
- (void)didBecomeActive:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMUserAlertsDao : CGMBaseDao
{
}

- (int)latestRecordedUpdateTimeSeconds;
- (void)deleteAlertScheduleUserAlerts;
- (void)copyDefaultAlertsAsAlertScheduleSettings;
- (id)fetchAlertScheduleUserAlerts;
- (id)fetchDefaultUserAlerts;
- (void)resetDataModel;
- (void)setupDataModelIfNeeded;
- (id)getAlertSettingsInRange:(unsigned long long)arg1 last:(unsigned long long)arg2;
- (unsigned int)getMaxRecordId;
- (unsigned int)getMinRecordId;
- (_Bool)hasNightTimeAlert:(id)arg1;
- (id)readAlertDictionary:(id)arg1 daytime:(_Bool)arg2;
- (id)readAlert:(id)arg1 daytime:(_Bool)arg2;
- (void)insertAlertScheduleUserAlert:(id)arg1;
- (void)modifyAlert:(id)arg1;
- (void)insertAlert:(id)arg1;
- (_Bool)alertExists:(id)arg1 andDaytime:(_Bool)arg2;

@end

@interface DPSensorSessionRecord : DPBaseRecord
{
    NSString *_TransmitterId;
    long long _TransmitterTime;
    NSString *_SessionState;
    long long _SensorSessionLength;
    NSString *_RecordVersion;
    long long _SensorWarmupLength;
    NSString *_SessionId;
    NSString *_SessionCalibrationType;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *SessionCalibrationType; // @synthesize SessionCalibrationType=_SessionCalibrationType;
@property(retain, nonatomic) NSString *SessionId; // @synthesize SessionId=_SessionId;
@property long long SensorWarmupLength; // @synthesize SensorWarmupLength=_SensorWarmupLength;
@property(retain, nonatomic) NSString *RecordVersion; // @synthesize RecordVersion=_RecordVersion;
@property long long SensorSessionLength; // @synthesize SensorSessionLength=_SensorSessionLength;
@property(retain) NSString *SessionState; // @synthesize SessionState=_SessionState;
@property long long TransmitterTime; // @synthesize TransmitterTime=_TransmitterTime;
@property(retain) NSString *TransmitterId; // @synthesize TransmitterId=_TransmitterId;

@end

@interface SensorCodeManualEntryViewController : SetupWizardBaseViewController <UITextFieldDelegate>
{
    DXCMBaseTextField *_sensorCodeTextField;
    DXCMBlockButton *_noSensorCodeButton;
    UILabel *_instructionLabel;
    UIView *_keyboardSpacerView;
    double _animationDuration;
    unsigned long long _animationCurve;
    NSLayoutConstraint *_keyboardHeight;
    UIBarButtonItem *_rightBarButtonItem;
    UIBarButtonItem *_leftBarButtonItem;
    unsigned long long _sensorCodeInvalidAttempts;
}

- (void).cxx_destruct;
@property(nonatomic) unsigned long long sensorCodeInvalidAttempts; // @synthesize sensorCodeInvalidAttempts=_sensorCodeInvalidAttempts;
@property(retain, nonatomic) UIBarButtonItem *leftBarButtonItem; // @synthesize leftBarButtonItem=_leftBarButtonItem;
@property(retain, nonatomic) UIBarButtonItem *rightBarButtonItem; // @synthesize rightBarButtonItem=_rightBarButtonItem;
@property(retain, nonatomic) NSLayoutConstraint *keyboardHeight; // @synthesize keyboardHeight=_keyboardHeight;
@property(nonatomic) unsigned long long animationCurve; // @synthesize animationCurve=_animationCurve;
@property(nonatomic) double animationDuration; // @synthesize animationDuration=_animationDuration;
@property(retain, nonatomic) UIView *keyboardSpacerView; // @synthesize keyboardSpacerView=_keyboardSpacerView;
@property(retain, nonatomic) UILabel *instructionLabel; // @synthesize instructionLabel=_instructionLabel;
@property(retain, nonatomic) DXCMBlockButton *noSensorCodeButton; // @synthesize noSensorCodeButton=_noSensorCodeButton;
@property(retain, nonatomic) DXCMBaseTextField *sensorCodeTextField; // @synthesize sensorCodeTextField=_sensorCodeTextField;
- (void)updateBarBtnItemState;
- (void)keyboardWillShow:(id)arg1;
- (void)textFieldDidChange:(id)arg1;
- (void)showScanCodeView;
- (void)isSensorCodeValid;
- (void)confirmSensorCodeEntryPopUp;
- (void)saveBarButtonItemPressed;
- (void)cancelBarButtonItemPressed;
- (void)viewDidLayoutSubviews;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)didReceiveMemoryWarning;
- (void)layoutConstraintsWith:(id)arg1 instructionLabel:(id)arg2 noCodeButtion:(id)arg3 keyboardSpacerView:(id)arg4;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ManualEntryTransmitterIDViewController : SetupWizardBaseViewController <UITextFieldDelegate>
{
    DXCMBaseTextField *_transmitterTextField;
    UILabel *_informationLabel;
    UIView *_keyboardSpacerView;
    NSString *_restoredTransmitterId;
    double _animationDuration;
    unsigned long long _animationCurve;
    NSLayoutConstraint *_keyboardHeight;
    UIBarButtonItem *_rightBarButtonItem;
    UIBarButtonItem *_leftBarButtonItem;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIBarButtonItem *leftBarButtonItem; // @synthesize leftBarButtonItem=_leftBarButtonItem;
@property(retain, nonatomic) UIBarButtonItem *rightBarButtonItem; // @synthesize rightBarButtonItem=_rightBarButtonItem;
@property(retain, nonatomic) NSLayoutConstraint *keyboardHeight; // @synthesize keyboardHeight=_keyboardHeight;
@property(nonatomic) unsigned long long animationCurve; // @synthesize animationCurve=_animationCurve;
@property(nonatomic) double animationDuration; // @synthesize animationDuration=_animationDuration;
@property(retain, nonatomic) NSString *restoredTransmitterId; // @synthesize restoredTransmitterId=_restoredTransmitterId;
@property(retain, nonatomic) UIView *keyboardSpacerView; // @synthesize keyboardSpacerView=_keyboardSpacerView;
@property(retain, nonatomic) UILabel *informationLabel; // @synthesize informationLabel=_informationLabel;
@property(retain, nonatomic) DXCMBaseTextField *transmitterTextField; // @synthesize transmitterTextField=_transmitterTextField;
- (id)getInformationText;
- (void)updateSaveBarBtnItemState;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)keyboardWillShow:(id)arg1;
- (void)layoutConstraintsWith:(id)arg1 informationLabel:(id)arg2 keyboardSpacerView:(id)arg3;
- (void)textFieldDidChange:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)cancelBarButtonItemPressed;
- (_Bool)isTransmitterIdValid:(long long)arg1 allowAnyTransmitterId:(_Bool)arg2;
- (void)processTransmitterId;
- (void)confirmSNEntryPopUp;
- (void)saveBarButtonItemPressed;
- (void)viewDidLayoutSubviews;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMLegalViewController : DXCMBaseViewController <UITableViewDataSource, UITableViewDelegate>
{
    NSMutableArray *section1Cells;
    UITableView *_tableView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AlertsExplanationViewController : SetupWizardBaseViewController
{
    UIImageView *_lowAlertImageView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIImageView *lowAlertImageView; // @synthesize lowAlertImageView=_lowAlertImageView;
- (void)updateViewConstraints;
- (void)viewDidLoad;

@end

@interface DXCMBluetoothService : NSObject
{
    NSString *_name;
    CBService *_cbService;
    DXCMBluetoothPeripheral *_dxcmPeripheral;
    CBUUID *_uuid;
    NSMutableDictionary *_characteristicDict;
}

- (void).cxx_destruct;
@property(retain) NSMutableDictionary *characteristicDict; // @synthesize characteristicDict=_characteristicDict;
@property(retain) CBUUID *uuid; // @synthesize uuid=_uuid;
@property(nonatomic) __weak DXCMBluetoothPeripheral *dxcmPeripheral; // @synthesize dxcmPeripheral=_dxcmPeripheral;
@property(retain) CBService *cbService; // @synthesize cbService=_cbService;
@property(retain) NSString *name; // @synthesize name=_name;
- (void)characteristicsDiscovered;
- (void)serviceDiscovered:(id)arg1 error:(id)arg2;
- (id)findCharacteristic:(id)arg1;
- (id)findCharacteristicByName:(id)arg1;
- (void)discoverCharacteristics;
- (id)characteristics;
- (void)addCharacteristic:(id)arg1;
- (void)serviceReady;
@property(readonly, nonatomic) _Bool isReady;
- (id)initWithName:(id)arg1 pUUID:(id)arg2 pPeripheral:(id)arg3;

@end

@interface DPAccessoryEntry : DPBaseObject
{
    NSString *_AccessoryModel;
    NSString *_AccessoryOSVersion;
    NSString *_AccessoryType;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *AccessoryType; // @synthesize AccessoryType=_AccessoryType;
@property(retain, nonatomic) NSString *AccessoryOSVersion; // @synthesize AccessoryOSVersion=_AccessoryOSVersion;
@property(retain, nonatomic) NSString *AccessoryModel; // @synthesize AccessoryModel=_AccessoryModel;
- (id)initWithType:(id)arg1 model:(id)arg2 version:(id)arg3;

@end

@interface SetupWizardWebViewController : CGMWebViewController
{
    UIBarButtonItem *_okBarButtonItem;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIBarButtonItem *okBarButtonItem; // @synthesize okBarButtonItem=_okBarButtonItem;
- (void)okBarButtonItemPressed;
- (void)viewDidLoad;

@end

@interface AlertsExplanation2ViewController : SetupWizardBaseViewController
{
    DXCMBlockButton *_iUnderstand;
    DXCMBlockButton *_learnMore;
    UIImageView *_notificationsImageView;
    UIImage *_notificationsImage;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIImage *notificationsImage; // @synthesize notificationsImage=_notificationsImage;
@property(retain, nonatomic) UIImageView *notificationsImageView; // @synthesize notificationsImageView=_notificationsImageView;
@property(retain, nonatomic) DXCMBlockButton *learnMore; // @synthesize learnMore=_learnMore;
@property(retain, nonatomic) DXCMBlockButton *iUnderstand; // @synthesize iUnderstand=_iUnderstand;
- (void)setUpNormalNotificationPermissionFlow;
- (void)displayNotificationsOffModalView:(CDUnknownBlockType)arg1;
- (void)checkForNotificationsEnabled;
- (void)toDeviceSoundSettings;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;

@end

@interface DCGMServiceTransmitterVersionRecord : NSObject
{
    unsigned char _apiVersion;
    unsigned short _storageModeDays;
    unsigned short _maxRuntimeDays;
    unsigned short _maxStorageTimeDays;
    CDStruct_f1f8955b _version;
    unsigned int _swNumber;
    unsigned int _storageModeSeconds;
    unsigned int _maxRuntimeSeconds;
    unsigned int _maxStorageTimeSeconds;
}

+ (id)recordWithData:(id)arg1;
@property(readonly) unsigned int maxStorageTimeSeconds; // @synthesize maxStorageTimeSeconds=_maxStorageTimeSeconds;
@property(readonly) unsigned short maxStorageTimeDays; // @synthesize maxStorageTimeDays=_maxStorageTimeDays;
@property(readonly) unsigned int maxRuntimeSeconds; // @synthesize maxRuntimeSeconds=_maxRuntimeSeconds;
@property(readonly) unsigned short maxRuntimeDays; // @synthesize maxRuntimeDays=_maxRuntimeDays;
@property(readonly) unsigned char apiVersion; // @synthesize apiVersion=_apiVersion;
@property(readonly) unsigned int storageModeSeconds; // @synthesize storageModeSeconds=_storageModeSeconds;
@property(readonly) unsigned short storageModeDays; // @synthesize storageModeDays=_storageModeDays;
@property(readonly) unsigned int swNumber; // @synthesize swNumber=_swNumber;
@property(readonly) CDStruct_f1f8955b version; // @synthesize version=_version;
- (id)initWithDictionary:(id)arg1;
- (id)initWithValues:(CDStruct_f1f8955b)arg1 swNumber:(unsigned int)arg2 storageModeDays:(unsigned short)arg3 apiVersion:(unsigned char)arg4 maxRuntimeDays:(unsigned short)arg5 maxStorageDays:(unsigned short)arg6;

@end

@interface DXCMHealthKit : NSObject
{
    HKHealthStore *_healthStore;
}

+ (id)sharedInstance;
+ (_Bool)isHealthKitAvailable;
- (void).cxx_destruct;
@property(retain, nonatomic) HKHealthStore *healthStore; // @synthesize healthStore=_healthStore;
- (id)mgPerdL;
- (id)workoutQuantityType;
- (id)caloriesQuantityType;
- (id)totalFatQuantityType;
- (id)sugarQuantityType;
- (id)fiberQuantityType;
- (id)proteinQuantityType;
- (id)carbsQuantityType;
- (id)glucoseQuantityType;
- (id)dataTypesToRead;
- (id)dataTypesToWrite;
- (id)predicateForSampleType:(id)arg1;
- (void)fetchSampleType:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)startListeningForSampleType:(id)arg1;
- (id)carbsToQuantitySample:(long long)arg1 systemTime:(double)arg2;
- (id)egvToQuantitySample:(long long)arg1 systemTime:(double)arg2 transmitterTime:(double)arg3 trendArrow:(id)arg4 trendRate:(double)arg5 status:(id)arg6 timeZone:(id)arg7;
- (void)startListeningAuthorizedReadTypes;
@property(readonly, nonatomic) long long healthKitAuthorizationStatus;
@property(readonly, nonatomic) long long isAuthorizedToSaveEgvs;
@property(readonly, nonatomic) long long isAuthorizedToSaveCarbs;
- (void)saveEgvsToHealthKit:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)requestAuthorizationWithCompletion:(CDUnknownBlockType)arg1;
- (id)init;

@end

@interface CGMGraphStackSubview : DXCMBaseView
{
    DexPlotView *_plotView;
    UILabel *_warmupHelpTextLabel;
    UILabel *_pairingHelpTextLabel;
    DXCMOffsetTitledButton *_addEventButton;
}

- (void).cxx_destruct;
@property(retain, nonatomic) DXCMOffsetTitledButton *addEventButton; // @synthesize addEventButton=_addEventButton;
@property(retain, nonatomic) UILabel *pairingHelpTextLabel; // @synthesize pairingHelpTextLabel=_pairingHelpTextLabel;
@property(retain, nonatomic) UILabel *warmupHelpTextLabel; // @synthesize warmupHelpTextLabel=_warmupHelpTextLabel;
@property(retain, nonatomic) DexPlotView *plotView; // @synthesize plotView=_plotView;
- (void)setHiddenForState:(long long)arg1;
- (void)initCommon;
- (id)init;

@end

@interface CGMContactWebViewController : CGMWebViewController
{
}

- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;

@end

@interface SwitchTableCell : DXCMBaseTableViewCell
{
    NSMutableArray *sectionSeparators;
    UISwitch *_switch_ctrl;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UISwitch *switch_ctrl; // @synthesize switch_ctrl=_switch_ctrl;
- (struct UIEdgeInsets)layoutMargins;
- (void)enable:(_Bool)arg1;

@end

@interface CGMSiriTitleSubtitleTableViewCell : UITableViewCell
{
}

- (void)initCommon;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface AlertsEngine : NSObject <CGMSubscriberDataSource, DXCMNotificationDelegate>
{
    _Bool _activeRemoteNotificationPopUp;
    _Bool _cameFromBackground;
    NSString *_logName;
    CGMDataMgr *_coreDbMgr;
    NSMutableDictionary *_verificationAlertViews;
    NSDate *_outOfGlucoseRangeStartTime;
    NSObject<OS_dispatch_queue> *_alertViewQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property _Bool cameFromBackground; // @synthesize cameFromBackground=_cameFromBackground;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *alertViewQueue; // @synthesize alertViewQueue=_alertViewQueue;
@property(retain, nonatomic) NSDate *outOfGlucoseRangeStartTime; // @synthesize outOfGlucoseRangeStartTime=_outOfGlucoseRangeStartTime;
@property(retain, nonatomic) NSMutableDictionary *verificationAlertViews; // @synthesize verificationAlertViews=_verificationAlertViews;
@property _Bool activeRemoteNotificationPopUp; // @synthesize activeRemoteNotificationPopUp=_activeRemoteNotificationPopUp;
@property(retain, nonatomic) CGMDataMgr *coreDbMgr; // @synthesize coreDbMgr=_coreDbMgr;
@property(retain, nonatomic) NSString *logName; // @synthesize logName=_logName;
- (void)compabilityDidChangeNotification:(id)arg1;
- (void)alertStateDidChange:(unsigned long long)arg1 withAlertState:(unsigned long long)arg2 withOldAlertState:(unsigned long long)arg3;
- (void)processNotificationAppWasAlreadyInForeground:(id)arg1 alertType:(unsigned long long)arg2;
- (void)processNotificationAcknowledgementFromSwipe:(id)arg1 alertType:(unsigned long long)arg2;
- (void)ackNotificationFromSwipeForAlertType:(unsigned long long)arg1;
- (void)notifySubscriberOfNewCGMDataUpdate:(unsigned long long)arg1;
@property(readonly) _Bool isGlucoseAlertActive;
@property(readonly) _Bool isAnyAlertActiveAlarming;
- (id)getActiveGlucoseAlerts;
- (id)getActiveAlarmingAlerts;
- (id)getActiveAlerts;
- (void)clearAlerts;
- (void)clearDeliveredTransmitterNotFoundAlert;
- (void)clearAlert:(unsigned long long)arg1 withForceDismissComplete:(_Bool)arg2;
- (void)clearAlert:(unsigned long long)arg1;
- (void)clearUserGlucoseAlerts;
- (void)gotXmitterDataUpdate;
- (void)acknowledgeAlert:(unsigned long long)arg1;
- (void)displayPopUpNotPreviouslyInAppIfNeeded;
- (void)completeDisplayPopupWithPopupModel:(id)arg1;
- (void)storeRemoteNotificationWithAlertType:(unsigned long long)arg1 title:(id)arg2 description:(id)arg3;
- (id)getAlertPopupModelWithAlertType:(unsigned long long)arg1 userAlert:(id)arg2;
- (void)displayRemoteNotificationPopUp;
- (void)displayPopUpAlertOnScreen:(unsigned long long)arg1 userAlert:(id)arg2 remoteNotification:(id)arg3;
- (unsigned long long)getNextVolumeModeForUserGlucoseAlert:(id)arg1;
- (id)getSoundCategoryForAlertType:(unsigned long long)arg1;
- (void)logUserGlucoseAlertWithEgv:(id)arg1 alertEntry:(id)arg2 overrideMode:(unsigned long long)arg3 soundName:(id)arg4;
- (void)alertUserGlucoseAlert:(id)arg1 egv:(id)arg2 soundName:(id)arg3 cameFromBackground:(_Bool)arg4 userAlert:(id)arg5;
- (void)scheduleAlert:(unsigned long long)arg1 withDelay:(int)arg2;
- (void)showCatastrophicErrorAlert:(unsigned long long)arg1;
- (void)showNonrecoverableSQLErrorAlert;
- (void)showRecoverableSQLErrorAlert;
- (void)scheduleTestAlert;
- (void)clearTransmitterNotFoundAlert;
- (void)scheduleTransmitterNotFoundAlert;
- (void)setSignalLossAlertStateToInactive;
- (void)clearSignalLossAlertNotifications;
- (void)checkAndUpdateSignalLossAlert;
- (void)clearNoBluetoothAlert;
- (void)scheduleNoBluetoothAlert;
- (void)showAppTerminatedAlert;
- (void)clearAppTerminatedAlert;
- (void)showOptedOutDataSharingDisabledAlertOnScreen;
- (void)clearOptedOutDataSharingDisabledAlert;
- (void)scheduleAlertsResetAlert;
- (void)scheduleOptedOutDataSharingDisabledAlert;
- (void)clearPairingRequestAlert;
- (void)showPairingRequestAlert;
- (void)processUserGlucoseAlert:(id)arg1 alertType:(unsigned long long)arg2 userAlert:(id)arg3;
- (unsigned int)lowSuspendSeconds;
- (void)processFixedAlerts;
- (_Bool)shouldWePostAlertForType:(unsigned long long)arg1;
- (void)postFixedAlertForAlertEntry:(id)arg1;
- (void)processFixedAlert:(unsigned long long)arg1 isAlerting:(_Bool)arg2;
- (void)onSignalLoss;
- (void)processUserGlucoseAlerts:(id)arg1;
- (void)resetAlertSettingsWithAlwaysSoundAndULSAlert:(_Bool)arg1;
- (id)fetchAlertScheduleDefault;
- (id)fetchAlertSchedule;
@property(readonly, nonatomic) CGMAlertSchedule *currentAlertSchedule;
- (_Bool)isAlwaysSoundOnNow;
- (_Bool)isAlertScheduleModeNow;
- (long long)applicationState;
- (void)resetInstance;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DXCMTransmitterCmdQueue : NSObject
{
    NSDateFormatter *_dateFormatter;
    NSString *_dbPath;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *dbPath; // @synthesize dbPath=_dbPath;
@property(retain, nonatomic) NSDateFormatter *dateFormatter; // @synthesize dateFormatter=_dateFormatter;
- (id)stringFromJSON:(id)arg1;
- (id)toJSON:(id)arg1;
- (id)pendingCommandsList;
- (id)pendingStartStopCommandList;
- (_Bool)areCalibrationCommandsPending;
- (_Bool)areStartCommandsPending;
- (_Bool)areStartStopCommandsPending;
- (_Bool)areCommandsPending;
- (id)getLatestPendingCalibration;
- (void)cancelAllPendingCalibrations;
- (void)queueCalibration:(unsigned short)arg1 calTime:(unsigned int)arg2 sessionId:(unsigned int)arg3 transmitterId:(id)arg4;
- (void)queueStopSession;
- (id)queueCommandFromDictionary:(id)arg1;
- (void)queueStartSessionWithDate:(id)arg1;
- (void)markPendingCommands:(id)arg1;
- (void)markCommandProcessed:(id)arg1 result:(id)arg2;
- (id)init;

@end

@interface TransmitterIDViewController : SetupWizardBaseViewController
{
    DXCMBlockButton *_scan;
    DXCMBlockButton *_enterByHand;
}

- (void).cxx_destruct;
@property(retain, nonatomic) DXCMBlockButton *enterByHand; // @synthesize enterByHand=_enterByHand;
@property(retain, nonatomic) DXCMBlockButton *scan; // @synthesize scan=_scan;
- (void)logPairingProcessStart;
- (void)onEnterByHandButton;
- (void)onScanButton;
- (void)close;
- (void)viewDidLoad;

@end

@interface DPManifestEntry : DPBaseObject
{
    NSString *_RecordType;
    unsigned long long _Count;
    NSString *_FirstDateTime;
    NSString *_LastDateTime;
    NSString *_FirstKey;
    NSString *_LastKey;
    NSString *_Tag;
}

- (void).cxx_destruct;
@property(retain) NSString *Tag; // @synthesize Tag=_Tag;
@property(retain) NSString *LastKey; // @synthesize LastKey=_LastKey;
@property(retain) NSString *FirstKey; // @synthesize FirstKey=_FirstKey;
@property(retain) NSString *LastDateTime; // @synthesize LastDateTime=_LastDateTime;
@property(retain) NSString *FirstDateTime; // @synthesize FirstDateTime=_FirstDateTime;
@property unsigned long long Count; // @synthesize Count=_Count;
@property(retain) NSString *RecordType; // @synthesize RecordType=_RecordType;

@end

@interface DXCMBaseView : UIView
{
}

- (void)dealloc;

@end

@interface DXCMWhatsNewVC : DXCMBaseViewController
{
}

+ (void)markHasSeenWhatsNew;
+ (_Bool)hasNotSeenWhatsNew;
+ (_Bool)shouldShowWhatsNew;
- (void)exitViewTapped;
- (id)createWhatsNewItemWithTitle:(id)arg1 message:(id)arg2 imageName:(id)arg3;
- (void)viewDidLoad;

@end

@interface CGMUserAlert : CGMBaseDataObject <NSSecureCoding>
{
    _Bool _daytime;
    _Bool _enabled;
    int _limit;
    unsigned int _repeat;
    NSString *_name;
    NSString *_soundName;
}

+ (void)doSomethingToAllAlertScheduleSettings:(CDUnknownBlockType)arg1;
+ (void)doSomethingToAllStandardUserSettableAlerts:(CDUnknownBlockType)arg1;
+ (id)createAlertObject:(id)arg1 daytime:(_Bool)arg2 enabled:(_Bool)arg3 limit:(int)arg4 repeat:(unsigned int)arg5 soundName:(id)arg6;
+ (id)alertFromDictionary:(id)arg1;
+ (id)dictionaryFromAlert:(id)arg1;
+ (_Bool)supportsSecureCoding;
- (void).cxx_destruct;
@property(retain, nonatomic) NSString *soundName; // @synthesize soundName=_soundName;
@property(nonatomic) unsigned int repeat; // @synthesize repeat=_repeat;
@property(nonatomic) int limit; // @synthesize limit=_limit;
@property(nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
@property(nonatomic) _Bool daytime; // @synthesize daytime=_daytime;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned int)getRepeatValue;
- (id)alertSettingDescription;
- (_Bool)isEqualToAlert:(id)arg1;

@end

@interface DEXAlertSound : NSObject
{
    AVAudioPlayer *_audioPlayer;
    NSString *_soundName;
    NSString *_alertName;
    unsigned long long _overrideMode;
    unsigned long long _priority;
    unsigned long long _taskId;
}

+ (id)newPlayerForSound:(id)arg1 inCategory:(id)arg2;
+ (unsigned long long)nextOverrideMode:(unsigned long long)arg1;
+ (id)stringForMode:(unsigned long long)arg1;
+ (void)initialize;
- (void).cxx_destruct;
@property(nonatomic) unsigned long long taskId; // @synthesize taskId=_taskId;
@property(readonly, nonatomic) unsigned long long priority; // @synthesize priority=_priority;
@property(readonly, nonatomic) unsigned long long overrideMode; // @synthesize overrideMode=_overrideMode;
@property(readonly, nonatomic) NSString *alertName; // @synthesize alertName=_alertName;
@property(readonly, nonatomic) NSString *soundName; // @synthesize soundName=_soundName;
@property(readonly, nonatomic) AVAudioPlayer *audioPlayer; // @synthesize audioPlayer=_audioPlayer;
- (void)play;
- (float)volumeWithCurrentSystemVolume:(float)arg1 onHeadphones:(_Bool)arg2;
- (id)initWithSoundName:(id)arg1 alertName:(id)arg2 category:(id)arg3 priority:(unsigned long long)arg4 overrideMode:(unsigned long long)arg5 taskId:(unsigned long long)arg6;

@end

@interface DXCM_CompatibilityService : NSObject
{
    _Bool _validityChanged;
    _Bool _compatibilityServiceEnabled;
    int _envValidity;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableDictionary *_storedData;
    NSString *_storedDataPath;
    DCSAlertViewController *_compatibilityMsgView;
}

+ (_Bool)isCompatibilityScreenVisible;
+ (void)onResetToOOBE;
+ (id)getDCSView;
+ (_Bool)isAppInvalid;
+ (void)updateLastSavedDisplay;
+ (void)checkCompatibilityandDisplayMessageIfNeededForSwNum:(id)arg1 appName:(id)arg2;
+ (_Bool)isValidEnvironment;
+ (id)getValidityString;
+ (void)setEnvironmentValidity:(int)arg1;
+ (void)forceCompatibleEnvironment;
+ (id)sharedInstance;
- (void).cxx_destruct;
@property _Bool compatibilityServiceEnabled; // @synthesize compatibilityServiceEnabled=_compatibilityServiceEnabled;
@property int envValidity; // @synthesize envValidity=_envValidity;
@property(retain) DCSAlertViewController *compatibilityMsgView; // @synthesize compatibilityMsgView=_compatibilityMsgView;
@property _Bool validityChanged; // @synthesize validityChanged=_validityChanged;
@property(retain) NSString *storedDataPath; // @synthesize storedDataPath=_storedDataPath;
@property(retain) NSMutableDictionary *storedData; // @synthesize storedData=_storedData;
@property(retain) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (id)getMyView;
- (_Bool)doesLastStoredDataShowInvalid;
- (id)updateCompatibilityAndDisplayMessageIfNeeded;
- (void)initCompatibilityDictionaryWithDefaults;
- (_Bool)timeToDisplayUserMessage;
- (void)checkValidity;
- (_Bool)checkAndUpdateParam:(id)arg1 newDict:(id)arg2 key:(id)arg3;
- (_Bool)isMessageResponseDifferentFromBefore:(id)arg1;
- (_Bool)isValidityResponseDifferentFromBefore:(id)arg1;
- (void)writeStoredDataToFile;
- (_Bool)localConfigurationHasChanged:(id)arg1 swNum:(id)arg2 appName:(id)arg3;
- (void)storeData:(id)arg1 forKey:(id)arg2;
- (id)getStoredDataForKey:(id)arg1;
- (void)removeDataForKey:(id)arg1;
- (_Bool)itsBeenADaySinceLastContact;
- (void)updateLastDisplayTimestamp;
- (void)updatelastServerContactTimestamp;
- (_Bool)didValidityChange;
- (void)loadStoredDataFromFile;
- (id)init;

@end

@interface DXCMServerUrlHelper : NSObject
{
}

+ (_Bool)isDeclinedUrl:(id)arg1;
+ (_Bool)isAcceptedUrl:(id)arg1;
+ (id)appPermissionsUrl;
+ (id)authorizeUrlForAppGuid:(id)arg1;

@end

@interface CGMContactItem : NSObject
{
    NSString *_title;
    NSString *_subtitle;
    NSString *_url;
    NSString *_phone;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *phone; // @synthesize phone=_phone;
@property(retain, nonatomic) NSString *url; // @synthesize url=_url;
@property(retain, nonatomic) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
- (id)initWithType:(long long)arg1;
- (id)initWithTitle:(id)arg1 subtitle:(id)arg2 url:(id)arg3;
- (id)initWithTitle:(id)arg1 subtitle:(id)arg2;

@end

@interface DCGMServiceExceptionTypeNamesArray : NSObject
{
}

+ (unsigned long long)toExceptionType:(id)arg1;
+ (void)init;

@end

@interface DCGMServiceException : NSException
{
    unsigned long long _codeEnum;
}

+ (id)exception:(id)arg1 message:(id)arg2;
@property unsigned long long codeEnum; // @synthesize codeEnum=_codeEnum;
- (id)initWithReason:(id)arg1 reason:(id)arg2 userInfo:(id)arg3;

@end

@interface DXCMAlertsGlobal : NSObject
{
    NSMutableArray *_alertQueue;
    UIViewController *_alertCurrentlyShowing;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(retain, nonatomic) UIViewController *alertCurrentlyShowing; // @synthesize alertCurrentlyShowing=_alertCurrentlyShowing;
@property(retain, nonatomic) NSMutableArray *alertQueue; // @synthesize alertQueue=_alertQueue;
- (id)init;

@end

@interface DCGMServiceChallengeValueRecord : NSObject
{
    unsigned char _opCode;
    NSData *_hashData;
    NSData *_challenge;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) NSData *challenge; // @synthesize challenge=_challenge;
@property(readonly, nonatomic) NSData *hashData; // @synthesize hashData=_hashData;
@property(readonly, nonatomic) unsigned char opCode; // @synthesize opCode=_opCode;
- (id)initWithData:(id)arg1;

@end

@interface CGMInternalFeedbackControllerViewController : DXCMBaseViewController <UITextViewDelegate>
{
    UITextView *_feedbackForm;
    UILabel *_characterCounter;
    UIScrollView *_scroller;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIScrollView *scroller; // @synthesize scroller=_scroller;
@property(retain, nonatomic) UILabel *characterCounter; // @synthesize characterCounter=_characterCounter;
@property(retain, nonatomic) UITextView *feedbackForm; // @synthesize feedbackForm=_feedbackForm;
- (void)keyboardWillBeHidden:(id)arg1;
- (void)keyboardWasShown:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (_Bool)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (void)updateCharacterCount;
- (void)send;
- (void)dealloc;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMContactViewController : DXCMBaseViewController <UITableViewDataSource, UITableViewDelegate, CGMWebViewDelegate>
{
    UITableView *_tableView;
    NSMutableArray *_sectionTitles;
    NSMutableArray *_section1Cells;
    NSMutableArray *_section2Cells;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableArray *section2Cells; // @synthesize section2Cells=_section2Cells;
@property(retain, nonatomic) NSMutableArray *section1Cells; // @synthesize section1Cells=_section1Cells;
@property(retain, nonatomic) NSMutableArray *sectionTitles; // @synthesize sectionTitles=_sectionTitles;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void)handleWebViewNavigation:(id)arg1;
- (_Bool)shouldHandleWebNavigation:(id)arg1;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)setupTableView;
- (void)setUpViewController;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DCSEngine : NSObject
{
    NSString *_logName;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(retain, nonatomic) NSString *logName; // @synthesize logName=_logName;
- (void)runCompatibilityCheck;
- (id)init;

@end

@interface DCGMRawSensorCountRecord : NSObject
{
    unsigned short _autoZero;
    unsigned int _txTime;
    float _calibratedSample;
    float _filteredSample;
}

+ (id)recordWithData:(id)arg1;
@property(readonly, nonatomic) unsigned short autoZero; // @synthesize autoZero=_autoZero;
@property(readonly, nonatomic) float filteredSample; // @synthesize filteredSample=_filteredSample;
@property(readonly, nonatomic) float calibratedSample; // @synthesize calibratedSample=_calibratedSample;
@property(readonly, nonatomic) unsigned int txTime; // @synthesize txTime=_txTime;
- (id)initWithTxTime:(unsigned int)arg1 andCalibratedSample:(float)arg2 andFilteredSample:(float)arg3 andAutoZero:(unsigned short)arg4;

@end

@interface DXCMAppState : NSObject
{
    long long _currentAppState;
}

+ (id)shared;
- (void)start;
- (void)active;
- (void)inactive;
- (void)updateApplicationState;
@property(readonly) long long currentAppState; // @synthesize currentAppState=_currentAppState;
- (void)dealloc;
- (id)init;

@end

@interface CGMExtensionEngineConstants : NSObject
{
}

+ (id)dateOffsetPath;
+ (id)alertPath;
+ (id)dataPath;
+ (id)groupName;
+ (id)appPrefix;

@end

@interface DPTxDiagnosticRecord : DPBaseRecord
{
    NSString *_RecordVersion;
    NSString *_Version;
    NSString *_RecordedTime;
    NSString *_Timestamp;
    NSString *_TxId;
    unsigned long long _ReferenceTicks;
    NSString *_ReferenceTimestamp;
    NSDictionary *_Manifest;
    NSDictionary *_EncryptionInfo;
    NSArray *_DataSets;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSArray *DataSets; // @synthesize DataSets=_DataSets;
@property(retain, nonatomic) NSDictionary *EncryptionInfo; // @synthesize EncryptionInfo=_EncryptionInfo;
@property(retain, nonatomic) NSDictionary *Manifest; // @synthesize Manifest=_Manifest;
@property(retain, nonatomic) NSString *ReferenceTimestamp; // @synthesize ReferenceTimestamp=_ReferenceTimestamp;
@property(nonatomic) unsigned long long ReferenceTicks; // @synthesize ReferenceTicks=_ReferenceTicks;
@property(retain, nonatomic) NSString *TxId; // @synthesize TxId=_TxId;
@property(retain, nonatomic) NSString *Timestamp; // @synthesize Timestamp=_Timestamp;
@property(retain, nonatomic) NSString *RecordedTime; // @synthesize RecordedTime=_RecordedTime;
@property(retain, nonatomic) NSString *Version; // @synthesize Version=_Version;
@property(retain, nonatomic) NSString *RecordVersion; // @synthesize RecordVersion=_RecordVersion;

@end

@interface CGMHelpViewController : DXCMBaseViewController <MFMailComposeViewControllerDelegate, CGMWebViewDelegate>
{
    NSMutableArray *section1Cells;
    UITableView *_tableView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void)handleWebViewNavigation:(id)arg1;
- (_Bool)shouldHandleWebNavigation:(id)arg1;
- (void)unwindToHelp:(id)arg1;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)pushAboutViewControllerWithIdentifier:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)loadMeuItems;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DXCMEncryptionHelper : NSObject
{
}

+ (struct __SecKey *)convertNSDataCertToSecKeyRef:(id)arg1;
+ (id)hashDataWithSha1:(id)arg1;
+ (id)encryptDataWithRSA:(id)arg1 certificate:(id)arg2 error:(id *)arg3;
+ (id)decryptAES128Data:(id)arg1 key:(id)arg2 iv:(id)arg3 error:(id *)arg4;
+ (id)encryptDataWithAES128:(id)arg1 key:(id)arg2 iv:(id)arg3 error:(id *)arg4;

@end

@interface DXCMBaseViewController : UIViewController
{
    double duration;
    _Bool hasAppeared;
    _Bool isPopping;
    _Bool _VCIsPresented;
    _Bool _okToSegue;
    id <DXCMBaseViewControllerDelegate> _delegate;
    NSString *_logName;
}

+ (id)methodName:(SEL)arg1;
- (void).cxx_destruct;
@property(nonatomic) _Bool okToSegue; // @synthesize okToSegue=_okToSegue;
@property(nonatomic) _Bool VCIsPresented; // @synthesize VCIsPresented=_VCIsPresented;
@property(retain, nonatomic) NSString *logName; // @synthesize logName=_logName;
@property(nonatomic) __weak id <DXCMBaseViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)popFromNavigationControllerToRootViewController;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (void)logWillDisappear;
- (void)logWillAppear;
- (void)dealloc;
- (void)performSegueWithIdentifier:(id)arg1 sender:(id)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (long long)preferredStatusBarStyle;
- (_Bool)prefersStatusBarHidden;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface CGMTrendViewManager : NSObject <UIPopoverPresentationControllerDelegate, CGMSubscriberDataSource, DXCMEventHistoryDelegate>
{
    _Bool _isTrendViewVisible;
    _Bool _isUrgentLowSoonEnabled;
    _Bool _isCalibrationRequested;
    _Bool _wasInAlertScheduleDuringLastUpdate;
    CGMEGV *_latestEGV;
    NSTimer *_updatesTimer;
    CGMDataMgr *_coreDbMgr;
    NSMutableDictionary *_coachMarkQueue;
    unsigned long long _visibleCoachmark;
}

+ (void)updateAlertSettingsOnGraph:(id)arg1;
+ (id)sharedManager;
- (void).cxx_destruct;
@property(nonatomic) _Bool wasInAlertScheduleDuringLastUpdate; // @synthesize wasInAlertScheduleDuringLastUpdate=_wasInAlertScheduleDuringLastUpdate;
@property(nonatomic) _Bool isCalibrationRequested; // @synthesize isCalibrationRequested=_isCalibrationRequested;
@property(nonatomic) unsigned long long visibleCoachmark; // @synthesize visibleCoachmark=_visibleCoachmark;
@property(retain, nonatomic) NSMutableDictionary *coachMarkQueue; // @synthesize coachMarkQueue=_coachMarkQueue;
@property(retain, nonatomic) CGMDataMgr *coreDbMgr; // @synthesize coreDbMgr=_coreDbMgr;
@property(retain, nonatomic) NSTimer *updatesTimer; // @synthesize updatesTimer=_updatesTimer;
@property(nonatomic) _Bool isUrgentLowSoonEnabled; // @synthesize isUrgentLowSoonEnabled=_isUrgentLowSoonEnabled;
@property(nonatomic) _Bool isTrendViewVisible; // @synthesize isTrendViewVisible=_isTrendViewVisible;
@property(retain, nonatomic) CGMEGV *latestEGV; // @synthesize latestEGV=_latestEGV;
- (void)egvCardShowPairingCircle;
- (void)showWarmupHelp;
- (void)egvCardShowWarmUpstate;
- (void)egvCardShowError:(unsigned long long)arg1;
- (void)egvCardShowSensorState;
- (void)egvCardShowEGV:(id)arg1;
- (void)notifySubscriberOfNewCGMDataUpdate:(unsigned long long)arg1;
- (void)presentSensorCodeController;
- (void)sensorSessionStopped:(id)arg1;
- (void)sensorSessionStarted:(id)arg1;
- (void)openSensorInsertionVideo;
- (void)dismiss:(id)arg1;
- (int)getCalibrationBadgeValueFromAlgorithmState;
- (void)updateCalibrationBadge;
- (void)processCoachmarkDismissal;
- (void)popoverPresentationControllerDidDismissPopover:(id)arg1;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (void)launchClarityAppFromEvents;
- (id)fetchAllEvents;
- (void)eventHistoryController:(id)arg1 didSelectRowAtIndexPath:(id)arg2 forEvent:(id)arg3;
- (void)deleteEvent:(id)arg1;
- (void)pushEventHistoryViewController;
- (id)fetchAllCGMEvents;
- (void)openHelpView:(id)arg1;
- (void)showCoachMark:(unsigned long long)arg1 withViewController:(id)arg2;
- (void)showNextQueuedCoachMark;
- (void)removeCoachMark:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)removeVisibleCoachmarkIfNeeded;
- (void)showCoachMark:(unsigned long long)arg1 withMessage:(id)arg2;
- (void)showCalibrationCoachmark;
- (_Bool)processBarButtonAction:(unsigned long long)arg1;
- (void)openCalibrationView;
- (void)logDisplay;
- (void)updateUIWithAlgorithmState:(id)arg1;
- (void)showHUDWithMessage:(id)arg1 withDuration:(float)arg2;
- (void)startedWarmupHud;
- (void)pairSuccessfulHUD;
- (_Bool)updateUIWithCalibrationState:(id)arg1;
- (void)updateEGVsOnGraph:(id)arg1 latestVisibleDate:(id)arg2;
- (void)dataConsentStatusChangedRemotely;
- (void)updateShareButtonBadgeValue;
- (void)refreshEGVCard;
- (void)updateAlwaysSound;
- (void)updateFocus;
- (void)updateUI;
- (void)stopUpdatesTimer;
- (void)startUpdatesTimer;
- (void)handleRefresh;
- (void)updateLatestEgvFromTransmitter;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMSupportLoggerDao : CGMBaseDao
{
}

- (id)getCGMUserActivityRecordDictsInRange:(unsigned long long)arg1 last:(unsigned long long)arg2;
- (unsigned int)getRecordCount;
- (unsigned int)getMaxRecordId;
- (unsigned int)getMinRecordId;
- (void)deleteRecordsBeforeTime:(int)arg1;
- (id)getRecordsBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)getLastNumEntries:(unsigned long long)arg1;
- (void)resetDataModel;
- (void)setupDataModelIfNeeded;
- (id)displayTime;
- (id)systemTimeIso8601;
- (unsigned long long)logUserActivity:(unsigned long long)arg1 subtype:(id)arg2 data:(id)arg3 date:(long long)arg4;

@end

@interface LoginUtilities : NSObject
{
}

+ (void)updateUserDeviceInfo;
+ (void)logUserDeviceInfo;
+ (id)readAlert:(id)arg1 daytime:(_Bool)arg2;
+ (id)getUserAlertFromDictionary:(id)arg1;
+ (void)restoreFromServerAlertScheduleSettings;
+ (void)readMainSettingsFromServer:(_Bool)arg1;
+ (void)readPreviousTxModeFromServer:(_Bool)arg1;
+ (void)readShareSettingFromServer:(_Bool)arg1;
+ (id)manuallyDisableAlert:(id)arg1;
+ (void)readAndStoreAlert:(id)arg1 existsOnServer:(_Bool)arg2;
+ (void)deleteAndroidNamedValues;
+ (void)persistPublisherStoredData:(id)arg1;
+ (id)retrievePublisherData;
+ (void)updateUserAccountInfo;
+ (void)displayAlertWithTitle:(id)arg1 message:(id)arg2 viewController:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (void)displayEmailAddressInvalid:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)displayUsernameError:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)displayIncorrectPassword:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)setupUserAccountInfo;
+ (void)importUserSettingsAndSetUpgradeState;
+ (_Bool)loginWithAuthCode:(id)arg1 withParameters:(id)arg2 withCompletion:(CDUnknownBlockType)arg3 withFailure:(CDUnknownBlockType)arg4;
+ (void)processDSAPIException:(id)arg1 viewController:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)processDSAPIWebServiceException:(id)arg1 viewController:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)resetSetupWizardUpgradeState;
+ (_Bool)isSetupWizardUpgradeState;
+ (void)setSetupWizardUpgradeStateForValues:(id)arg1;

@end

@interface CGMHealthEventViewController : CGMEventManagerViewController <UITableViewDelegate, UITableViewDataSource>
{
    UITableView *_tableView;
    NSArray *_healthRowCells;
    DXCMCGMBaseTableViewCell *_healthTimeCell;
    CGMDatePickerTableViewCell *_datePickerCell;
    NSIndexPath *_selected;
}

- (void).cxx_destruct;
@property(copy, nonatomic) NSIndexPath *selected; // @synthesize selected=_selected;
@property(retain, nonatomic) CGMDatePickerTableViewCell *datePickerCell; // @synthesize datePickerCell=_datePickerCell;
@property(retain, nonatomic) DXCMCGMBaseTableViewCell *healthTimeCell; // @synthesize healthTimeCell=_healthTimeCell;
@property(retain, nonatomic) NSArray *healthRowCells; // @synthesize healthRowCells=_healthRowCells;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (id)messageForAddEventConfirmation;
- (_Bool)isValidData;
- (void)datePickerDidChange;
- (void)showDatePickerCell:(_Bool)arg1;
- (void)refreshTableSectionHealth;
- (id)healthCellForRowAtIndexPath:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)setupCells;
- (void)setupTableView;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMAlertScheduleWizardSummaryViewController : DXCMBaseAlertScheduleSetupViewController <UITableViewDelegate, UITableViewDataSource>
{
    UITableView *_tableView;
    NSMutableArray *_menuItemsArray;
    UILabel *_descriptionLabel;
}

- (void).cxx_destruct;
@property(nonatomic) __weak UILabel *descriptionLabel; // @synthesize descriptionLabel=_descriptionLabel;
@property(retain, nonatomic) NSMutableArray *menuItemsArray; // @synthesize menuItemsArray=_menuItemsArray;
@property(nonatomic) __weak UITableView *tableView; // @synthesize tableView=_tableView;
- (void)updateAlertScheduleData;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)setupTableView;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMShortcutsMenu : NSObject
{
}

- (_Bool)handleShortCutItem:(id)arg1;
- (id)init;

@end

@interface WarmUpCircleView : CGMEGVAnimatedStateView
{
    _TtC3CGM14DXCMHelpButton *_helpButton;
}

- (void).cxx_destruct;
@property(retain, nonatomic) _TtC3CGM14DXCMHelpButton *helpButton; // @synthesize helpButton=_helpButton;
- (void)initWarmupCircleStuff;
- (void)initTime;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DXCMOffsetTitledButton : UIButton
{
    double _leadingMargin;
    double _trailingMargin;
    double _bottomMargin;
    UILabel *_offsetTitleLabel;
    NSLayoutConstraint *_titleXMarginConstraint;
    NSLayoutConstraint *_titleYMarginConstraint;
    UIColor *_textColor;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(retain, nonatomic) NSLayoutConstraint *titleYMarginConstraint; // @synthesize titleYMarginConstraint=_titleYMarginConstraint;
@property(retain, nonatomic) NSLayoutConstraint *titleXMarginConstraint; // @synthesize titleXMarginConstraint=_titleXMarginConstraint;
@property(retain, nonatomic) UILabel *offsetTitleLabel; // @synthesize offsetTitleLabel=_offsetTitleLabel;
@property(nonatomic) double bottomMargin; // @synthesize bottomMargin=_bottomMargin;
@property(nonatomic) double trailingMargin; // @synthesize trailingMargin=_trailingMargin;
@property(nonatomic) double leadingMargin; // @synthesize leadingMargin=_leadingMargin;
- (void)touchUp;
- (void)touchDown;
- (void)setTitleColor:(id)arg1 forState:(unsigned long long)arg2;
- (void)setTitle:(id)arg1 forState:(unsigned long long)arg2;
- (void)setMargin:(double)arg1 forAttribute:(long long)arg2;
- (id)titleLabel;
- (void)initCommon;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

@end

@interface DXCMRingView : UIView
{
    float _fractionRemaining;
    UIColor *_ringBackgroundColor;
    double _ringStrokeWidth;
    UIColor *_ringStartColor;
    UIColor *_ringEndColor;
    CAGradientLayer *_gradientLeft;
    CAGradientLayer *_gradientRight;
    CAShapeLayer *_ringMask;
    CAShapeLayer *_maskingRing;
}

- (void).cxx_destruct;
@property(retain, nonatomic) CAShapeLayer *maskingRing; // @synthesize maskingRing=_maskingRing;
@property(retain, nonatomic) CAShapeLayer *ringMask; // @synthesize ringMask=_ringMask;
@property(retain, nonatomic) CAGradientLayer *gradientRight; // @synthesize gradientRight=_gradientRight;
@property(retain, nonatomic) CAGradientLayer *gradientLeft; // @synthesize gradientLeft=_gradientLeft;
@property(readonly, nonatomic) float fractionRemaining; // @synthesize fractionRemaining=_fractionRemaining;
@property(retain, nonatomic) UIColor *ringEndColor; // @synthesize ringEndColor=_ringEndColor;
@property(retain, nonatomic) UIColor *ringStartColor; // @synthesize ringStartColor=_ringStartColor;
@property(nonatomic) double ringStrokeWidth; // @synthesize ringStrokeWidth=_ringStrokeWidth;
@property(retain, nonatomic) UIColor *ringBackgroundColor; // @synthesize ringBackgroundColor=_ringBackgroundColor;
- (void)setFractionRemaining:(float)arg1 animated:(_Bool)arg2;
- (void)setRingStartColor:(id)arg1 endColor:(id)arg2;
- (void)layoutSubviews;
- (void)setupRing;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;

@end

@interface CGMExtensionEngine : NSObject <CGMSubscriberDataSource, WCSessionDelegate>
{
    NSString *_logName;
    WCSession *_session;
    NSDate *_lastComplicationUpdate;
    NSDate *_lastAppContextTransfer;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(retain) NSDate *lastAppContextTransfer; // @synthesize lastAppContextTransfer=_lastAppContextTransfer;
@property(retain) NSDate *lastComplicationUpdate; // @synthesize lastComplicationUpdate=_lastComplicationUpdate;
@property(retain) WCSession *session; // @synthesize session=_session;
@property(retain) NSString *logName; // @synthesize logName=_logName;
- (void)notifyHomeWidgetExtensionUserDefaultsUpdated;
- (void)notifyTodayExtensionUserDefaultsUpdated;
- (void)wipeData;
- (void)updateWidgetExtensionsUserDefaultsAndNotify;
- (id)createAlertScheduleDictionary;
- (id)createSnapshotDictionary:(id)arg1;
- (void)updateDataOnWatch:(id)arg1 calibrated:(_Bool)arg2;
- (void)session:(id)arg1 didFinishUserInfoTransfer:(id)arg2 error:(id)arg3;
- (void)session:(id)arg1 didReceiveMessage:(id)arg2 replyHandler:(CDUnknownBlockType)arg3;
- (void)session:(id)arg1 didReceiveMessage:(id)arg2;
- (void)updateTodayWidgetAndWatchSnapshot:(_Bool)arg1;
- (void)notifySubscriberOfNewCGMDataUpdate:(unsigned long long)arg1;
- (void)bluetoothCentralDidUpdateState:(id)arg1;
- (void)didEnterNewBGCalibration:(id)arg1;
- (id)init;
- (void)sessionDidBecomeInactive:(id)arg1;
- (void)session:(id)arg1 activationDidCompleteWithState:(long long)arg2 error:(id)arg3;
- (void)sessionDidDeactivate:(id)arg1;
- (id)encryptExtensionData:(id)arg1 messageDataName:(id)arg2;
- (void)transferUserInfo:(id)arg1 messageDataName:(id)arg2;
- (id)encryptedAlertSettings;
- (void)sendWatchAlertSettingsUserInfo;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DXCMNotificationManager : NSObject <UNUserNotificationCenterDelegate>
{
    _Bool _notificationPosted;
    long long _currentAlertIntervalCount;
    NSPointerArray *_subscribedDelegates;
    NSMutableDictionary *_currentNotifications;
    NSObject<OS_dispatch_queue> *_currentNotificationQueue;
    NSObject<OS_dispatch_queue> *_subscribersQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *subscribersQueue; // @synthesize subscribersQueue=_subscribersQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *currentNotificationQueue; // @synthesize currentNotificationQueue=_currentNotificationQueue;
@property(retain, nonatomic) NSMutableDictionary *currentNotifications; // @synthesize currentNotifications=_currentNotifications;
@property(readonly) NSPointerArray *subscribedDelegates; // @synthesize subscribedDelegates=_subscribedDelegates;
@property(nonatomic) _Bool notificationPosted; // @synthesize notificationPosted=_notificationPosted;
@property(nonatomic) long long currentAlertIntervalCount; // @synthesize currentAlertIntervalCount=_currentAlertIntervalCount;
- (void)userNotificationCenter:(id)arg1 didReceiveNotificationResponse:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)userNotificationCenter:(id)arg1 willPresentNotification:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)subscribeForNotificationUpdates:(id)arg1;
- (id)stringForNotificationTriggerDate:(id)arg1;
- (void)appDidBecomeActive:(id)arg1;
- (void)notifySubscribersOfAck:(id)arg1;
- (void)notifySubscribersOfActive:(id)arg1;
- (void)launchedIntoAppWithNotification:(id)arg1;
- (void)activeAppWithNotificationUpdate:(id)arg1;
- (void)scheduleLocalNotification:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)scheduleNotificationNow:(id)arg1 alertType:(unsigned long long)arg2 soundFileName:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)scheduleNotificationInFuture:(id)arg1 alertType:(unsigned long long)arg2 fireDate:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)showAndUpdateAlertAtFutureTime:(id)arg1 alertType:(unsigned long long)arg2 soundFileName:(id)arg3 fireDate:(id)arg4 actionButton:(unsigned long long)arg5;
- (void)showAndUpdateAlertNow:(id)arg1 alertType:(unsigned long long)arg2 soundFileName:(id)arg3 actionButton:(unsigned long long)arg4;
- (_Bool)isActiveNotification:(unsigned long long)arg1;
- (void)getNotificationSettings;
- (void)registerForPushNotifications;
- (void)registerNotifications:(CDUnknownBlockType)arg1;
- (void)areNotificationsEnabled:(CDUnknownBlockType)arg1;
- (void)cancelNotificationForAlert:(unsigned long long)arg1;
- (void)cancelAllNotifications;
- (void)addLocalNotification:(id)arg1;
- (void)synchronizeLocalNotifications;
- (void)resetNotifications;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DCGMServiceBatteryRecord : NSObject
{
    _Bool _resistanceAvailable;
    unsigned char _runtime;
    BOOL _temperature;
    unsigned short _staticVoltage;
    unsigned short _dynamicVoltage;
    unsigned short _resistance;
}

+ (id)recordWithData:(id)arg1;
@property(readonly, nonatomic) BOOL temperature; // @synthesize temperature=_temperature;
@property(readonly, nonatomic) unsigned char runtime; // @synthesize runtime=_runtime;
@property(nonatomic) _Bool resistanceAvailable; // @synthesize resistanceAvailable=_resistanceAvailable;
@property(readonly, nonatomic) unsigned short resistance; // @synthesize resistance=_resistance;
@property(readonly, nonatomic) unsigned short dynamicVoltage; // @synthesize dynamicVoltage=_dynamicVoltage;
@property(readonly, nonatomic) unsigned short staticVoltage; // @synthesize staticVoltage=_staticVoltage;
@property(readonly, nonatomic) NSDictionary *supportLoggerInfo;
- (id)initWithDictionary:(id)arg1;
- (id)initWithValues:(unsigned short)arg1 dynamicVoltage:(unsigned short)arg2 resistance:(unsigned short)arg3 runtime:(unsigned char)arg4 temperature:(BOOL)arg5;

@end

@interface DCGMServiceCalBoundsRecord : NSObject
{
    unsigned char _weight;
    unsigned char _autoCal;
    unsigned short _bgErr0;
    unsigned short _bgErr1;
    unsigned short _bgBoundMin;
    unsigned short _bgBoundMax;
    unsigned short _lastBG;
    unsigned int _lastBGTime;
}

+ (id)recordWithData:(id)arg1;
@property(readonly) unsigned char autoCal; // @synthesize autoCal=_autoCal;
@property(readonly) unsigned int lastBGTime; // @synthesize lastBGTime=_lastBGTime;
@property(readonly) unsigned short lastBG; // @synthesize lastBG=_lastBG;
@property(readonly) unsigned short bgBoundMax; // @synthesize bgBoundMax=_bgBoundMax;
@property(readonly) unsigned short bgBoundMin; // @synthesize bgBoundMin=_bgBoundMin;
@property(readonly) unsigned short bgErr1; // @synthesize bgErr1=_bgErr1;
@property(readonly) unsigned short bgErr0; // @synthesize bgErr0=_bgErr0;
@property(readonly) unsigned char weight; // @synthesize weight=_weight;
- (id)initWithDictionary:(id)arg1;
- (id)initWithValues:(unsigned char)arg1 bgErr0:(unsigned short)arg2 bgErr1:(unsigned short)arg3 bgBoundMin:(unsigned short)arg4 bgBoundMax:(unsigned short)arg5 lastBG:(unsigned short)arg6 lastBGTime:(unsigned int)arg7 autoCal:(unsigned char)arg8;

@end

@interface SafetyViewController : SetupWizardBaseViewController <SetupWizardBaseViewControllerDelegate>
{
    int _index;
    DXCMBlockButton *_iUnderstand;
    DXCMBlockButton *_safetyStatement;
    UILabel *_scrolltoContinueLabel;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UILabel *scrolltoContinueLabel; // @synthesize scrolltoContinueLabel=_scrolltoContinueLabel;
@property(retain, nonatomic) DXCMBlockButton *safetyStatement; // @synthesize safetyStatement=_safetyStatement;
@property(retain, nonatomic) DXCMBlockButton *iUnderstand; // @synthesize iUnderstand=_iUnderstand;
@property int index; // @synthesize index=_index;
- (void)scrollViewDidScroll:(id)arg1;
- (void)next;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly) UIView *view;

@end

@interface DXCMBaseNavigationController : UINavigationController
{
    _Bool _allowsRotation;
}

@property(nonatomic) _Bool allowsRotation; // @synthesize allowsRotation=_allowsRotation;
- (unsigned long long)supportedInterfaceOrientations;
- (long long)preferredStatusBarStyle;
- (_Bool)prefersStatusBarHidden;
- (long long)modalPresentationStyle;
- (void)viewDidLoad;

@end

@interface PairingCircleView : CGMBaseEGVView
{
    UILabel *_textLabel;
    DXCMCircularSpinnerView *_searchingTransmitterCircleView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) DXCMCircularSpinnerView *searchingTransmitterCircleView; // @synthesize searchingTransmitterCircleView=_searchingTransmitterCircleView;
@property(retain, nonatomic) UILabel *textLabel; // @synthesize textLabel=_textLabel;
- (void)initPairingCircleStuff;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DXCMServerCommHelper : NSObject
{
}

+ (_Bool)handleException:(id)arg1 EventName:(id)arg2;
+ (void)saveSingleAlert:(id)arg1 existsOnServer:(_Bool)arg2;
+ (id)getAlertDict:(id)arg1;
+ (_Bool)saveProductModeOnServer;
+ (_Bool)saveGraphHeightOnServer;
+ (_Bool)saveShareStateOnServer;
+ (_Bool)saveAlertSettingsOnServer;
+ (_Bool)saveAlertScheduleOnServer;

@end

@interface CGMShareViewController : DXCMBaseViewController
{
    _Bool _isUpdatingContacts;
    _Bool _isRefreshing;
    UITableView *_tableView;
    UIView *_headerView;
    NSMutableArray *_contactIds;
    NSMutableArray *_contactCells;
    DXCMCGMBaseSwitchTableViewCell *_shareToggleCell;
    UIRefreshControl *_refreshControl;
    NSString *_selectedContactID;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *selectedContactID; // @synthesize selectedContactID=_selectedContactID;
@property _Bool isRefreshing; // @synthesize isRefreshing=_isRefreshing;
@property(retain, nonatomic) UIRefreshControl *refreshControl; // @synthesize refreshControl=_refreshControl;
@property(retain, nonatomic) DXCMCGMBaseSwitchTableViewCell *shareToggleCell; // @synthesize shareToggleCell=_shareToggleCell;
@property _Bool isUpdatingContacts; // @synthesize isUpdatingContacts=_isUpdatingContacts;
@property(retain) NSMutableArray *contactCells; // @synthesize contactCells=_contactCells;
@property(retain) NSMutableArray *contactIds; // @synthesize contactIds=_contactIds;
@property(retain, nonatomic) UIView *headerView; // @synthesize headerView=_headerView;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void)dataConsentStatusChangedRemotely;
- (id)createViewWithTitle:(id)arg1 titleOffsetTop:(double)arg2 withAccessibilityId:(id)arg3;
- (void)helpButtonTapped;
- (void)processModalForHelp;
- (void)displayModalViewWithDescription:(id)arg1 navigationTitle:(id)arg2;
- (void)unwindToFollowersScreen:(id)arg1;
- (void)updateTable;
- (void)listFollowersFromServerWithStatusHUD:(id)arg1;
- (void)refreshFollowers;
- (void)onSharingSwitch:(id)arg1;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)populateContactCells;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

@end

@interface DCGMServiceEGVRecord : NSObject
{
    unsigned char _algState;
    BOOL _rate;
    unsigned short _value;
    unsigned short _flags;
    unsigned short _predictedValue;
    unsigned int _seqNum;
    unsigned int _timeStamp;
}

+ (id)recordWithData:(id)arg1;
@property(readonly) unsigned short predictedValue; // @synthesize predictedValue=_predictedValue;
@property(readonly) BOOL rate; // @synthesize rate=_rate;
@property(readonly) unsigned char algState; // @synthesize algState=_algState;
@property(readonly) unsigned short flags; // @synthesize flags=_flags;
@property(readonly) unsigned short value; // @synthesize value=_value;
@property(readonly) unsigned int timeStamp; // @synthesize timeStamp=_timeStamp;
@property(readonly) unsigned int seqNum; // @synthesize seqNum=_seqNum;
@property(readonly) _Bool isNoReadingState;
@property(readonly) _Bool isUrgentLowSoon;
- (id)initWithCGMEGV:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithValues:(unsigned int)arg1 timeStamp:(unsigned int)arg2 value:(unsigned short)arg3 flags:(unsigned short)arg4 algState:(unsigned char)arg5 rate:(BOOL)arg6 predictedValue:(unsigned short)arg7;
- (id)initWithValues:(unsigned int)arg1 timeStamp:(unsigned int)arg2 value:(unsigned short)arg3 flags:(unsigned short)arg4 algState:(unsigned char)arg5 rate:(BOOL)arg6;

@end

@interface DataPost : DPBaseObject
{
    NSString *_PostId;
    NSString *_PostedTimestamp;
    NSString *_PostHeader;
    NSString *_PublicDataManifest;
    NSString *_PublicDataContent;
    NSString *_PrivateDataManifest;
    NSString *_PrivateDataContent;
    long long _Version;
}

- (void).cxx_destruct;
@property long long Version; // @synthesize Version=_Version;
@property(retain) NSString *PrivateDataContent; // @synthesize PrivateDataContent=_PrivateDataContent;
@property(retain) NSString *PrivateDataManifest; // @synthesize PrivateDataManifest=_PrivateDataManifest;
@property(retain) NSString *PublicDataContent; // @synthesize PublicDataContent=_PublicDataContent;
@property(retain) NSString *PublicDataManifest; // @synthesize PublicDataManifest=_PublicDataManifest;
@property(retain) NSString *PostHeader; // @synthesize PostHeader=_PostHeader;
@property(retain) NSString *PostedTimestamp; // @synthesize PostedTimestamp=_PostedTimestamp;
@property(retain) NSString *PostId; // @synthesize PostId=_PostId;
- (int)getSequenceNumber;

@end

@interface EGVCircleView : CGMBaseEGVView
{
    UIView *_outsideTrendMagContainer;
    UIView *_trendMagnifyingGlass;
    UIImageView *_imageMagnifyingGlass;
    UIImageView *_imageNoTrendMagnifyingGlass;
    UIImageView *_doubleTriangle;
    UIImageView *_singleTriangle;
    UILabel *_egvLabel;
    UILabel *_unitsLabel;
    UIImageView *_trendArrowDiamond;
    CGMDataMgr *_coreDbMgr;
    double _scaledEgvFontSize;
}

- (void).cxx_destruct;
@property(nonatomic) double scaledEgvFontSize; // @synthesize scaledEgvFontSize=_scaledEgvFontSize;
@property(retain, nonatomic) CGMDataMgr *coreDbMgr; // @synthesize coreDbMgr=_coreDbMgr;
@property(retain, nonatomic) UIImageView *trendArrowDiamond; // @synthesize trendArrowDiamond=_trendArrowDiamond;
@property(retain, nonatomic) UILabel *unitsLabel; // @synthesize unitsLabel=_unitsLabel;
@property(retain, nonatomic) UILabel *egvLabel; // @synthesize egvLabel=_egvLabel;
@property(retain, nonatomic) UIImageView *singleTriangle; // @synthesize singleTriangle=_singleTriangle;
@property(retain, nonatomic) UIImageView *doubleTriangle; // @synthesize doubleTriangle=_doubleTriangle;
@property(retain, nonatomic) UIImageView *imageNoTrendMagnifyingGlass; // @synthesize imageNoTrendMagnifyingGlass=_imageNoTrendMagnifyingGlass;
@property(retain, nonatomic) UIImageView *imageMagnifyingGlass; // @synthesize imageMagnifyingGlass=_imageMagnifyingGlass;
@property(retain, nonatomic) UIView *trendMagnifyingGlass; // @synthesize trendMagnifyingGlass=_trendMagnifyingGlass;
@property(retain, nonatomic) UIView *outsideTrendMagContainer; // @synthesize outsideTrendMagContainer=_outsideTrendMagContainer;
- (void)initCircle;
- (void)internalSetTrendRotation:(long long)arg1;
- (void)setTrendArrow:(long long)arg1 withAnimation:(_Bool)arg2;
- (void)updateEgvCircleView:(id)arg1 withAnimation:(_Bool)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface CGMTransmitterCmdQueueItem : NSObject
{
    NSString *_guid;
    NSString *_cmdType;
    NSDictionary *_params;
}

- (void).cxx_destruct;
@property(readonly) NSDictionary *params; // @synthesize params=_params;
@property(readonly) NSString *cmdType; // @synthesize cmdType=_cmdType;
@property(readonly) NSString *guid; // @synthesize guid=_guid;
- (id)description;
- (id)initWithValues:(id)arg1 pCmd:(id)arg2 pParams:(id)arg3;

@end

@interface DSAPICountry : NSObject <NSCoding>
{
    NSString *_code;
    NSString *_displayName;
}

- (void).cxx_destruct;
@property(copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(copy, nonatomic) NSString *code; // @synthesize code=_code;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface DPGlucoseRecord : DPBaseRecord
{
    NSString *_GlucoseSystemTime;
    NSString *_GlucoseDisplayTime;
    NSString *_TransmitterId;
    long long _TransmitterTime;
    long long _Value;
    NSString *_Status;
    NSString *_TrendArrow;
    double _TrendRate;
    NSString *_InternalStatus;
    NSNumber *_IsBackfilled;
    unsigned long long _SessionStartTime;
    NSNumber *_PredictedValue;
    NSString *_RecordVersion;
}

- (void).cxx_destruct;
@property(retain) NSString *RecordVersion; // @synthesize RecordVersion=_RecordVersion;
@property(retain) NSNumber *PredictedValue; // @synthesize PredictedValue=_PredictedValue;
@property unsigned long long SessionStartTime; // @synthesize SessionStartTime=_SessionStartTime;
@property(retain) NSNumber *IsBackfilled; // @synthesize IsBackfilled=_IsBackfilled;
@property(retain) NSString *InternalStatus; // @synthesize InternalStatus=_InternalStatus;
@property double TrendRate; // @synthesize TrendRate=_TrendRate;
@property(retain) NSString *TrendArrow; // @synthesize TrendArrow=_TrendArrow;
@property(retain) NSString *Status; // @synthesize Status=_Status;
@property long long Value; // @synthesize Value=_Value;
@property long long TransmitterTime; // @synthesize TransmitterTime=_TransmitterTime;
@property(retain) NSString *TransmitterId; // @synthesize TransmitterId=_TransmitterId;
@property(retain) NSString *GlucoseDisplayTime; // @synthesize GlucoseDisplayTime=_GlucoseDisplayTime;
@property(retain) NSString *GlucoseSystemTime; // @synthesize GlucoseSystemTime=_GlucoseSystemTime;
- (id)dictionary;

@end

@interface Base64StringConverter : NSObject
{
}

+ (id)base64UrlHmacFromString:(id)arg1 secret:(id)arg2;
+ (id)unpaddedBase64String:(id)arg1;
+ (id)paddedBase64String:(id)arg1;
+ (id)dataFromBase64String:(id)arg1;
+ (id)HMAC_SHA_256_128:(id)arg1 secret:(id)arg2;
+ (id)base64URLStringFromString:(id)arg1;
+ (id)base64URLStringFromData:(id)arg1;
+ (id)base64StringFromData:(id)arg1;
+ (id)objectFromBase64String:(id)arg1;
+ (id)base64StringFromObject:(id)arg1;
+ (id)ungzip:(id)arg1;
+ (id)gzip:(id)arg1;
+ (id)gzipString:(id)arg1;
+ (id)dataFromCompressedBase64String:(id)arg1;
+ (id)compressedBase64StringFromData:(id)arg1;

@end

@interface DXCMBadgeBarItem : UIBarButtonItem
{
    long long _badgeValue;
    UIImage *_buttonImage;
    UIButton *_button;
    UILabel *_badgeLabel;
    NSDictionary *_textAttributes;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSDictionary *textAttributes; // @synthesize textAttributes=_textAttributes;
@property(retain, nonatomic) UILabel *badgeLabel; // @synthesize badgeLabel=_badgeLabel;
@property(retain, nonatomic) UIButton *button; // @synthesize button=_button;
@property(retain, nonatomic) UIImage *buttonImage; // @synthesize buttonImage=_buttonImage;
@property(nonatomic) long long badgeValue; // @synthesize badgeValue=_badgeValue;
- (struct CGSize)getSizeForText:(id)arg1 attributes:(id)arg2;
- (id)initWithButton:(id)arg1;

@end

@interface SetupHighAlertViewController : SetupWizardBaseViewController <CGMAlertLimitChangedDelegate>
{
    NSNumber *_selectedAlertLimit;
    CGMEditAlertLimitViewController *_childViewController;
    DXCMBlockButton *_saveButton;
}

- (void).cxx_destruct;
@property(retain, nonatomic) DXCMBlockButton *saveButton; // @synthesize saveButton=_saveButton;
@property(retain, nonatomic) CGMEditAlertLimitViewController *childViewController; // @synthesize childViewController=_childViewController;
@property(retain, nonatomic) NSNumber *selectedAlertLimit; // @synthesize selectedAlertLimit=_selectedAlertLimit;
- (id)userDefaultLimitForHighAlert;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)alertLimitChanged:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMAlertScheduleNameViewController : DXCMBaseViewController <UITextFieldDelegate>
{
    CGMAlertSchedule *_alertSchedule;
    id <CGMAlertScheduleNameChangedDelegate> _alertScheduleDelegate;
    DXCMBaseTextField *_nameTextField;
    NSString *_placeHolderText;
}

- (void).cxx_destruct;
@property(nonatomic) __weak NSString *placeHolderText; // @synthesize placeHolderText=_placeHolderText;
@property(nonatomic) __weak DXCMBaseTextField *nameTextField; // @synthesize nameTextField=_nameTextField;
@property(nonatomic) __weak id <CGMAlertScheduleNameChangedDelegate> alertScheduleDelegate; // @synthesize alertScheduleDelegate=_alertScheduleDelegate;
@property(retain, nonatomic) CGMAlertSchedule *alertSchedule; // @synthesize alertSchedule=_alertSchedule;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)alertScheduleNameTextDidChanged:(id)arg1;
- (void)saveAlertScheduleNameAndExit;
- (void)saveAlertScheduleName;
- (void)willMoveToParentViewController:(id)arg1;
- (void)updateAlertScheduleName:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DPBaseRecord : DPBaseObject
{
    NSString *_RecordedSystemTime;
    NSString *_RecordedDisplayTime;
}

- (void).cxx_destruct;
@property(retain) NSString *RecordedDisplayTime; // @synthesize RecordedDisplayTime=_RecordedDisplayTime;
@property(retain) NSString *RecordedSystemTime; // @synthesize RecordedSystemTime=_RecordedSystemTime;

@end

@interface DXCMTransmitter : DXCMBluetoothPeripheral <DXCMNotificationDelegate>
{
    unsigned char _transmitterBondStatus;
    unsigned char _transmitterAlgState;
    unsigned char _displayCalibrationState;
    _Bool _transmitterSessionExpiry;
    unsigned char _transmitterType;
    _Bool _privateDataContinueDownload;
    _Bool _reconnectEnabled;
    _Bool _readBatteryStatusEnable;
    _Bool _serviceReady;
    _Bool _primaryAppKeyDead;
    _Bool _isBluetoothStarted;
    _Bool _wakeFromSleep;
    unsigned short _transmitterWarmupTime;
    unsigned int _transmitterAppKeyTimeSeconds;
    unsigned int _transmitterBatteryReadTimeSeconds;
    unsigned int _transmitterCurrentTimeTicks;
    unsigned int _transmitterSessionDurationTicks;
    unsigned int _transmitterSessionStartTicks;
    int _transmitterTimeOffset;
    unsigned int _lastConnectionTime;
    unsigned int _failedConnectionCount;
    unsigned int _transmitterSWNumber;
    unsigned int _transmitterAPIVersion;
    unsigned int _transmitterSessionDays;
    unsigned int _transmitterStorageTime;
    unsigned int _transmitterMaxStorageTime;
    unsigned int _transmitterMaxRuntime;
    unsigned int _privateDataLastUpdateTicks;
    unsigned int _minBackfillTime;
    unsigned int _transmitterScanStartTime;
    unsigned int _transmitterPredictiveStateStartTime;
    unsigned int _transmitterNoReadingsStartTime;
    unsigned int _bgWeight;
    unsigned int _bgErr0;
    unsigned int _bgErr1;
    unsigned int _bgBoundMin;
    unsigned int _bgBoundMax;
    unsigned int _calBoundsLastBG;
    unsigned int _calBoundsLastBGTime;
    unsigned int _autoCal;
    id <DXCMTransmitterDelegate> _delegate;
    NSString *_transmitterAppLevelKey;
    NSString *_transmitterAppLevelKeyBackup;
    NSString *_transmitterId;
    NSDate *_displaySessionStartTimeUTC;
    NSString *_transmitterVersion;
    NSString *_transmitterVersionExt;
    long long _transmitterError;
    long long _transmitterBatteryStatus;
    double _privateDataLastUpdateTime;
    long long _transmitterPredictiveState;
    double _calBoundsTimeStamp;
    DXCMTransmitterCmdQueue *_cmdQueue;
    DCGMService *_service;
    DXCMTransmitterAuthentication *_authenticationHelper;
    double _disconnectSleepTime;
    DXCMTransmitterConnectionLog *_connectionLog;
    double _disconnectWaitTime;
    unsigned long long _txComTask;
    unsigned long long _txStartupWaitTask;
}

- (void).cxx_destruct;
@property unsigned long long txStartupWaitTask; // @synthesize txStartupWaitTask=_txStartupWaitTask;
@property unsigned long long txComTask; // @synthesize txComTask=_txComTask;
@property(nonatomic) _Bool wakeFromSleep; // @synthesize wakeFromSleep=_wakeFromSleep;
@property(nonatomic) _Bool isBluetoothStarted; // @synthesize isBluetoothStarted=_isBluetoothStarted;
@property(readonly, nonatomic) double disconnectWaitTime; // @synthesize disconnectWaitTime=_disconnectWaitTime;
@property(retain, nonatomic) DXCMTransmitterConnectionLog *connectionLog; // @synthesize connectionLog=_connectionLog;
@property(nonatomic) double disconnectSleepTime; // @synthesize disconnectSleepTime=_disconnectSleepTime;
@property(nonatomic) _Bool primaryAppKeyDead; // @synthesize primaryAppKeyDead=_primaryAppKeyDead;
@property(retain, nonatomic) DXCMTransmitterAuthentication *authenticationHelper; // @synthesize authenticationHelper=_authenticationHelper;
@property(nonatomic) _Bool serviceReady; // @synthesize serviceReady=_serviceReady;
@property(retain, nonatomic) DCGMService *service; // @synthesize service=_service;
@property(retain, nonatomic) DXCMTransmitterCmdQueue *cmdQueue; // @synthesize cmdQueue=_cmdQueue;
@property(readonly, nonatomic) _Bool readBatteryStatusEnable; // @synthesize readBatteryStatusEnable=_readBatteryStatusEnable;
@property(nonatomic) _Bool reconnectEnabled; // @synthesize reconnectEnabled=_reconnectEnabled;
@property(readonly, nonatomic) unsigned int autoCal; // @synthesize autoCal=_autoCal;
@property(readonly, nonatomic) unsigned int calBoundsLastBGTime; // @synthesize calBoundsLastBGTime=_calBoundsLastBGTime;
@property(readonly, nonatomic) unsigned int calBoundsLastBG; // @synthesize calBoundsLastBG=_calBoundsLastBG;
@property(readonly, nonatomic) unsigned int bgBoundMax; // @synthesize bgBoundMax=_bgBoundMax;
@property(readonly, nonatomic) unsigned int bgBoundMin; // @synthesize bgBoundMin=_bgBoundMin;
@property(readonly, nonatomic) unsigned int bgErr1; // @synthesize bgErr1=_bgErr1;
@property(readonly, nonatomic) unsigned int bgErr0; // @synthesize bgErr0=_bgErr0;
@property(readonly, nonatomic) unsigned int bgWeight; // @synthesize bgWeight=_bgWeight;
@property(readonly, nonatomic) double calBoundsTimeStamp; // @synthesize calBoundsTimeStamp=_calBoundsTimeStamp;
@property(readonly, nonatomic) unsigned short transmitterWarmupTime; // @synthesize transmitterWarmupTime=_transmitterWarmupTime;
@property(readonly, nonatomic) unsigned int transmitterNoReadingsStartTime; // @synthesize transmitterNoReadingsStartTime=_transmitterNoReadingsStartTime;
@property(readonly, nonatomic) unsigned int transmitterPredictiveStateStartTime; // @synthesize transmitterPredictiveStateStartTime=_transmitterPredictiveStateStartTime;
@property(readonly, nonatomic) long long transmitterPredictiveState; // @synthesize transmitterPredictiveState=_transmitterPredictiveState;
@property(readonly, nonatomic) unsigned int transmitterScanStartTime; // @synthesize transmitterScanStartTime=_transmitterScanStartTime;
@property(readonly, nonatomic) unsigned int minBackfillTime; // @synthesize minBackfillTime=_minBackfillTime;
@property(readonly, nonatomic) _Bool privateDataContinueDownload; // @synthesize privateDataContinueDownload=_privateDataContinueDownload;
@property(readonly, nonatomic) double privateDataLastUpdateTime; // @synthesize privateDataLastUpdateTime=_privateDataLastUpdateTime;
@property(readonly, nonatomic) unsigned int privateDataLastUpdateTicks; // @synthesize privateDataLastUpdateTicks=_privateDataLastUpdateTicks;
@property(readonly, nonatomic) unsigned char transmitterType; // @synthesize transmitterType=_transmitterType;
@property(readonly, nonatomic) _Bool transmitterSessionExpiry; // @synthesize transmitterSessionExpiry=_transmitterSessionExpiry;
@property(readonly, nonatomic) unsigned char displayCalibrationState; // @synthesize displayCalibrationState=_displayCalibrationState;
@property(readonly, nonatomic) unsigned char transmitterAlgState; // @synthesize transmitterAlgState=_transmitterAlgState;
@property(readonly, nonatomic) unsigned char transmitterBondStatus; // @synthesize transmitterBondStatus=_transmitterBondStatus;
@property(readonly, nonatomic) unsigned int transmitterMaxRuntime; // @synthesize transmitterMaxRuntime=_transmitterMaxRuntime;
@property(readonly, nonatomic) unsigned int transmitterMaxStorageTime; // @synthesize transmitterMaxStorageTime=_transmitterMaxStorageTime;
@property(readonly, nonatomic) unsigned int transmitterStorageTime; // @synthesize transmitterStorageTime=_transmitterStorageTime;
@property(readonly, nonatomic) long long transmitterBatteryStatus; // @synthesize transmitterBatteryStatus=_transmitterBatteryStatus;
@property(readonly, nonatomic) long long transmitterError; // @synthesize transmitterError=_transmitterError;
@property(readonly, nonatomic) unsigned int transmitterSessionDays; // @synthesize transmitterSessionDays=_transmitterSessionDays;
@property(readonly, nonatomic) unsigned int transmitterAPIVersion; // @synthesize transmitterAPIVersion=_transmitterAPIVersion;
@property(readonly, nonatomic) unsigned int transmitterSWNumber; // @synthesize transmitterSWNumber=_transmitterSWNumber;
@property(retain, nonatomic) NSString *transmitterVersionExt; // @synthesize transmitterVersionExt=_transmitterVersionExt;
@property(retain, nonatomic) NSString *transmitterVersion; // @synthesize transmitterVersion=_transmitterVersion;
@property(readonly, nonatomic) unsigned int failedConnectionCount; // @synthesize failedConnectionCount=_failedConnectionCount;
@property(readonly, nonatomic) unsigned int lastConnectionTime; // @synthesize lastConnectionTime=_lastConnectionTime;
@property(retain, nonatomic) NSDate *displaySessionStartTimeUTC; // @synthesize displaySessionStartTimeUTC=_displaySessionStartTimeUTC;
@property(readonly, nonatomic) int transmitterTimeOffset; // @synthesize transmitterTimeOffset=_transmitterTimeOffset;
@property(readonly, nonatomic) unsigned int transmitterSessionStartTicks; // @synthesize transmitterSessionStartTicks=_transmitterSessionStartTicks;
@property(readonly, nonatomic) unsigned int transmitterSessionDurationTicks; // @synthesize transmitterSessionDurationTicks=_transmitterSessionDurationTicks;
@property(readonly, nonatomic) unsigned int transmitterCurrentTimeTicks; // @synthesize transmitterCurrentTimeTicks=_transmitterCurrentTimeTicks;
@property(retain, nonatomic) NSString *transmitterId; // @synthesize transmitterId=_transmitterId;
@property(readonly, nonatomic) unsigned int transmitterBatteryReadTimeSeconds; // @synthesize transmitterBatteryReadTimeSeconds=_transmitterBatteryReadTimeSeconds;
@property(readonly, nonatomic) unsigned int transmitterAppKeyTimeSeconds; // @synthesize transmitterAppKeyTimeSeconds=_transmitterAppKeyTimeSeconds;
@property(retain, nonatomic) NSString *transmitterAppLevelKeyBackup; // @synthesize transmitterAppLevelKeyBackup=_transmitterAppLevelKeyBackup;
@property(retain, nonatomic) NSString *transmitterAppLevelKey; // @synthesize transmitterAppLevelKey=_transmitterAppLevelKey;
@property(nonatomic) __weak id <DXCMTransmitterDelegate> delegate; // @synthesize delegate=_delegate;
- (void)processNotificationAppCameToForeground:(unsigned long long)arg1;
- (void)setTransmitterType:(unsigned char)arg1;
- (void)setReadBatteryStatusEnable:(_Bool)arg1;
- (void)setDisplayCalibrationState:(unsigned char)arg1;
- (void)setDisplayCalibrationStateFromAlgState:(unsigned char)arg1;
- (void)setTransmitterSessionExpiry:(_Bool)arg1;
- (void)setTransmitterAlgState:(unsigned char)arg1;
- (void)setTransmitterBondStatus:(unsigned char)arg1;
- (void)setTransmitterMaxRuntime:(unsigned int)arg1;
- (void)setTransmitterMaxStorageTime:(unsigned int)arg1;
- (void)setTransmitterStorageTime:(unsigned int)arg1;
- (void)setTransmitterBatteryStatus:(long long)arg1;
- (void)setTransmitterError:(long long)arg1;
- (void)setMinBackfillTime:(unsigned int)arg1;
- (void)setTransmitterSessionDays:(unsigned int)arg1;
- (void)setTransmitterAPIVersion:(unsigned char)arg1;
- (void)setTransmitterSWNumber:(unsigned int)arg1;
- (void)incrementFailedConnectionCount;
- (void)resetFailedConnectionCount;
- (void)setLastConnectionTime:(unsigned int)arg1;
- (void)setTransmitterTimeOffset:(int)arg1;
- (void)setTransmitterSessionStartTicks:(unsigned int)arg1;
- (void)setTransmitterSessionDurationTicks:(unsigned int)arg1;
- (void)setTransmitterCurrentTimeTicks:(unsigned int)arg1;
- (void)setPrivateDataContinueDownload:(_Bool)arg1;
- (void)setPrivateDataLastUpdateTicks:(unsigned int)arg1;
- (void)setPrivateDataLastUpdateTime:(double)arg1;
- (void)setTransmitterWarmupTime:(unsigned short)arg1;
@property(readonly, nonatomic) _Bool hasTransmitterEncryptionInfo;
@property(readonly, nonatomic) _Bool hasTransmitterManifest;
@property(readonly, nonatomic) unsigned char calibrationMode;
- (void)processCalibrationCommandReply:(id)arg1 calReply:(id)arg2;
- (void)processCalibrationCommand:(id)arg1;
- (void)processStopCommandReply:(id)arg1 stopReply:(id)arg2;
- (void)processStopCommand:(id)arg1;
- (void)processStartCommandReply:(id)arg1 startReply:(id)arg2;
- (void)processStartCommand:(id)arg1;
- (void)processCommandQueue;
- (unsigned char)getTransmitterTypeFromId:(id)arg1;
- (id)backfillEGVs:(id)arg1;
- (void)processStreamData:(id)arg1 withStreamType:(unsigned char)arg2 startTime:(unsigned int)arg3 endTime:(unsigned int)arg4 currentTime:(unsigned int)arg5;
- (id)parseStreamResponse:(id)arg1 withDataStreamRecord:(id)arg2;
- (void)fetchStreamType:(unsigned char)arg1;
- (void)deleteDiagnosticRecordWithType:(unsigned char)arg1;
- (void)insertDiagnosticRecord:(id)arg1;
- (void)readDiagnosticData;
- (void)readOtherOpCodesIfEnabled;
- (_Bool)readTransmitterBatteryStatus:(_Bool)arg1;
- (_Bool)readTransmitterVersion;
- (void)storeTransmitterCalBounds:(id)arg1;
- (_Bool)storeTransmitterBackfilledEGVs:(id)arg1;
- (_Bool)storeTransmitterStateWithEGVRecord:(id)arg1;
- (_Bool)storeTransmitterStateWithEGV:(id)arg1;
- (void)doStopSession:(unsigned int)arg1 sessionLogType:(long long)arg2;
- (void)doStartSession:(id)arg1 sessionLogType:(long long)arg2;
- (void)syncTransmitterTime:(id)arg1;
- (void)checkAppLevelKey;
- (unsigned char)authenticateWithAppKey:(id)arg1 appKey:(id)arg2 appKeyBackup:(id)arg3;
- (unsigned char)authenticateWithTxId:(id)arg1;
- (long long)completeBonding;
- (long long)authenticateAndBond;
- (_Bool)validateDiscoveredPeripheral:(unsigned char)arg1;
- (void)processAuthenticatedConnection;
- (void)peripheralDidUpdateName:(id)arg1;
- (void)peripheralRSSI:(long long)arg1;
- (void)connectAndProcess;
- (void)discoveredServiceReady:(id)arg1;
- (void)peripheralDisconnected:(long long)arg1;
- (void)peripheralConnected:(long long)arg1;
- (_Bool)peripheralFound:(id)arg1 advData:(id)arg2 rssi:(id)arg3;
- (void)peripheralStateUpdate:(long long)arg1;
@property(readonly, nonatomic) unsigned int activateByTime;
@property(readonly, nonatomic) unsigned int sessionTimeRemaining;
@property(readonly, nonatomic) unsigned int lifeRemaining;
@property(readonly, nonatomic) double pendingCalibrationRecordedTime;
@property(readonly, nonatomic) unsigned short pendingCalibrationValue;
@property(readonly, nonatomic) _Bool calibrationPending;
@property(readonly, nonatomic) unsigned char calibrationState;
@property(readonly, nonatomic) unsigned char algorithmState;
- (_Bool)calibrateWithMeter:(id)arg1 lastMeter:(id)arg2;
- (_Bool)stopSensor;
- (_Bool)startSensor;
- (long long)numberOfPreviousSessionsForTransmitter:(id)arg1;
@property(readonly, nonatomic) _Bool stopPending;
@property(readonly, nonatomic) _Bool startPending;
- (void)clearSessionExpiry;
- (void)stopScan;
- (void)startScan;
@property(readonly, nonatomic) _Bool bonded;
@property(readonly, nonatomic) _Bool isTransmitterSetup;
- (_Bool)setupExistingTransmitter:(id)arg1;
- (_Bool)setupNewTransmitter:(id)arg1;
- (void)resetProperties;
@property(readonly, nonatomic) _Bool isBLEOn;
- (void)startBluetooth;
- (id)initWithName:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ClarityHelper : NSObject
{
}

+ (id)logName;
+ (void)launchClarityApp;
+ (_Bool)isClarityAppInstalled;

@end

@interface DPUserEventRecord : DPBaseRecord
{
    NSString *_EventSystemTime;
    NSString *_EventDisplayTime;
    NSString *_EventId;
    NSString *_Name;
    NSString *_SubType;
    long long _Value;
    NSString *_Units;
    NSString *_RecordVersion;
    NSString *_RecordStatus;
}

- (void).cxx_destruct;
@property(retain) NSString *RecordStatus; // @synthesize RecordStatus=_RecordStatus;
@property(retain) NSString *RecordVersion; // @synthesize RecordVersion=_RecordVersion;
@property(retain) NSString *Units; // @synthesize Units=_Units;
@property(nonatomic) long long Value; // @synthesize Value=_Value;
@property(retain) NSString *SubType; // @synthesize SubType=_SubType;
@property(retain) NSString *Name; // @synthesize Name=_Name;
@property(retain) NSString *EventId; // @synthesize EventId=_EventId;
@property(retain) NSString *EventDisplayTime; // @synthesize EventDisplayTime=_EventDisplayTime;
@property(retain) NSString *EventSystemTime; // @synthesize EventSystemTime=_EventSystemTime;

@end

@interface CGMShareNoFollowersViewController : DXCMBaseShareViewController
{
}

- (void)viewDidLoad;

@end

@interface PairTransmitterViewController : SetupWizardBaseViewController
{
    UIImageView *_errorImageView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIImageView *errorImageView; // @synthesize errorImageView=_errorImageView;
- (void)onClose;
- (void)updateViewConstraints;
- (void)viewDidLoad;

@end

@interface DXCMCircularSpinnerView : UIView
{
    double _angle;
    double _rotationAngle;
    UIColor *_fillColor;
    UIColor *_pathColor;
    double _thickness;
}

- (void).cxx_destruct;
@property(nonatomic) double thickness; // @synthesize thickness=_thickness;
@property(retain, nonatomic) UIColor *pathColor; // @synthesize pathColor=_pathColor;
@property(retain, nonatomic) UIColor *fillColor; // @synthesize fillColor=_fillColor;
- (void)stopAnimating;
- (void)startAnimating;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface CGMEGVStackSubview : DXCMBaseView
{
    UIButton *_calibrateButton;
    UIButton *_shareButton;
    CGMSoundButton *_soundButton;
    CGMCircleView *_circleView;
    UILabel *_helpTextLabel;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UILabel *helpTextLabel; // @synthesize helpTextLabel=_helpTextLabel;
@property(retain, nonatomic) CGMCircleView *circleView; // @synthesize circleView=_circleView;
@property(retain, nonatomic) CGMSoundButton *soundButton; // @synthesize soundButton=_soundButton;
@property(retain, nonatomic) UIButton *shareButton; // @synthesize shareButton=_shareButton;
@property(retain, nonatomic) UIButton *calibrateButton; // @synthesize calibrateButton=_calibrateButton;
- (void)commonButtonSetup:(id)arg1;
- (void)awakeFromNib;

@end

@interface CGMSafetyStatementsViewController : DXCMBaseViewController <UITableViewDelegate, UITableViewDataSource>
{
    NSMutableArray *_safetyList;
    UITableView *_tableView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) NSMutableArray *safetyList; // @synthesize safetyList=_safetyList;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)loadSafetyData;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMHKSampleManager : NSObject
{
    CGMDataMgr *_coreDataMgr;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(retain, nonatomic) CGMDataMgr *coreDataMgr; // @synthesize coreDataMgr=_coreDataMgr;
- (void)deleteEventsFromDB:(id)arg1;
- (void)saveWorkout:(id)arg1;
- (id)setObjectsInMealEvent:(id)arg1 withSample:(id)arg2;
- (void)saveMealAsCorrelation:(id)arg1;
- (void)saveMeal:(id)arg1;
- (void)filterEventsFromSamples:(id)arg1;
- (id)init;

@end

@interface DXCMBlockButton : UIButton
{
    CDUnknownBlockType _clickBlock;
}

+ (void)setCommonAttributes:(id)arg1;
+ (void)applyCancelThemeToButton:(id)arg1;
+ (void)applyOkThemeToButton:(id)arg1;
+ (id)blockButtonLayoutConstraintsForOkButton:(id)arg1 cancelButton:(id)arg2;
+ (id)blockButtonCancelWithTitle:(id)arg1;
+ (id)blockButtonOKWithImage:(id)arg1;
+ (id)blockButtonOkWithTitle:(id)arg1;
- (void).cxx_destruct;
@property(copy, nonatomic) CDUnknownBlockType clickBlock; // @synthesize clickBlock=_clickBlock;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
@property(nonatomic) struct UIEdgeInsets hitTestEdgeInsets;
- (void)onBlockButton;
- (struct CGSize)intrinsicContentSize;
- (void)setEnabled:(_Bool)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)initializeDXCMBlockButton;

@end

@interface CGMAPIDataPostAPI : DSAPIBaseAPI
{
    NSString *serverURL;
}

+ (id)instance;
- (void).cxx_destruct;
- (void)deleteDeviceKey;
- (void)postServerCallForPatientData:(id)arg1 withPayload:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (id)ReadLastDataPost2;
- (id)PostPatientData2:(id)arg1;
- (id)getServer;
- (void)setServer:(id)arg1;
- (void)setServerToDefault;
- (id)init;

@end

@interface CGMInsulinEvent : CGMEventBase
{
    float _doseAmount;
}

+ (id)localNameForInsulinEventEnglish:(long long)arg1;
+ (id)localNameForInsulinEvent:(long long)arg1;
@property float doseAmount; // @synthesize doseAmount=_doseAmount;
- (id)summaryDetailForEvents:(id)arg1;
- (id)calloutDetails;
- (id)calloutTitle;
- (float)insulinUnits;
- (id)humanReadableValueWithUnits;
- (_Bool)isShortActingInsulinEvent;
- (id)dataPostSubType;
- (id)completeLocalNameForInsulinEvent;
@property(readonly, nonatomic) long long insulinType;
- (long long)event_type;

@end

@interface CGMExerciseViewController : CGMEventManagerViewController <UITableViewDelegate, UITableViewDataSource, CGMEventDurationPickerTableViewCellDelegate>
{
    UITableView *_tableView;
    NSArray *_intensityRowCells;
    NSIndexPath *_selected;
    NSMutableArray *_timeDurationRowCells;
    DXCMCGMBaseTableViewCell *_startTimeCell;
    CGMDatePickerTableViewCell *_datePickerCell;
    DXCMCGMBaseTableViewCell *_durationCell;
    CGMEventDurationPickerTableViewCell *_durationPickerCell;
}

- (void).cxx_destruct;
@property(retain, nonatomic) CGMEventDurationPickerTableViewCell *durationPickerCell; // @synthesize durationPickerCell=_durationPickerCell;
@property(retain, nonatomic) DXCMCGMBaseTableViewCell *durationCell; // @synthesize durationCell=_durationCell;
@property(retain, nonatomic) CGMDatePickerTableViewCell *datePickerCell; // @synthesize datePickerCell=_datePickerCell;
@property(retain, nonatomic) DXCMCGMBaseTableViewCell *startTimeCell; // @synthesize startTimeCell=_startTimeCell;
@property(retain, nonatomic) NSMutableArray *timeDurationRowCells; // @synthesize timeDurationRowCells=_timeDurationRowCells;
@property(copy, nonatomic) NSIndexPath *selected; // @synthesize selected=_selected;
@property(retain, nonatomic) NSArray *intensityRowCells; // @synthesize intensityRowCells=_intensityRowCells;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (id)messageForAddEventConfirmation;
- (_Bool)isValidData;
- (void)didSelectDurationWithMinutes:(int)arg1;
- (void)datePickerDidChange;
- (int)findTableViewCell:(id)arg1;
- (void)showDurationPickerCell:(_Bool)arg1 atIndexPath:(id)arg2;
- (void)showDatePickerCell:(_Bool)arg1 atIndexPath:(id)arg2;
- (void)refreshTableSectionIntensity;
- (id)intensityCellForRowAtIndexPath:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayHeaderView:(id)arg2 forSection:(long long)arg3;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)setupCells;
- (void)setupTableView;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DCGMServiceAuthenticationStatusRecord : NSObject
{
    unsigned char _authStatus;
    unsigned char _bondStatus;
    unsigned char _failureReason;
}

+ (id)recordWithData:(id)arg1;
@property(readonly, nonatomic) unsigned char failureReason; // @synthesize failureReason=_failureReason;
@property(readonly, nonatomic) unsigned char bondStatus; // @synthesize bondStatus=_bondStatus;
@property(readonly, nonatomic) unsigned char authStatus; // @synthesize authStatus=_authStatus;
- (id)initWithValues:(unsigned char)arg1 andBondStatus:(unsigned char)arg2 andFailureReason:(unsigned char)arg3;

@end

@interface CGMVideosViewController : DXCMBaseViewController <UITableViewDelegate, UITableViewDataSource>
{
    NSMutableArray *section1Cells;
    UITableView *_tableView;
    AVPlayer *_avPlayer;
}

- (void).cxx_destruct;
@property(retain, nonatomic) AVPlayer *avPlayer; // @synthesize avPlayer=_avPlayer;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DCGMServiceStopResponseRecord : NSObject
{
    unsigned char _responseStatus;
    unsigned int _sessionStopTime;
    DCGMServiceTransmitterTimeRecord *_timeRecord;
}

+ (id)recordWithData:(id)arg1;
- (void).cxx_destruct;
@property(readonly) DCGMServiceTransmitterTimeRecord *timeRecord; // @synthesize timeRecord=_timeRecord;
@property(readonly) unsigned int sessionStopTime; // @synthesize sessionStopTime=_sessionStopTime;
@property(readonly) unsigned char responseStatus; // @synthesize responseStatus=_responseStatus;
- (id)initWithValues:(unsigned char)arg1 sessionStopTime:(unsigned int)arg2;
- (id)initWithValues:(unsigned char)arg1 sessionStopTime:(unsigned int)arg2 sessionSigniture:(unsigned int)arg3 transmitterTime:(unsigned int)arg4;

@end

@interface DXCMCGMController : NSObject <DXCMTransmitterDelegate>
{
    DXCMTransmitter *_dxcmTransmitter;
}

+ (void)resetInstance;
+ (id)sharedController;
- (void).cxx_destruct;
@property(retain, nonatomic) DXCMTransmitter *dxcmTransmitter; // @synthesize dxcmTransmitter=_dxcmTransmitter;
@property(readonly, nonatomic) long long authorizationStatus;
@property(readonly, nonatomic) _Bool isBLEOn;
- (void)compabilityDidChangeNotification:(id)arg1;
- (void)dxcmTransmitter:(id)arg1 transmitterDidStopSession:(id)arg2 withType:(long long)arg3;
- (void)dxcmTransmitter:(id)arg1 transmitterDidStartSession:(id)arg2 withType:(long long)arg3;
- (void)dxcmTransmitter:(id)arg1 transmitterDidDisconnect:(id)arg2;
- (void)dxcmTransmitter:(id)arg1 transmitterDidConnect:(id)arg2;
- (void)registerTransmitterIdWithServer;
- (unsigned char)getTransmitterType;
- (id)getTransmitterSoftwareNumber;
- (id)getTransmitterVersion;
- (unsigned int)transmitterSessionTimeRemaining;
@property(readonly, nonatomic) unsigned int transmitterLife;
@property(readonly, nonatomic) unsigned int transmitterLifeRemaining;
@property(readonly, nonatomic) unsigned char calibrationMode;
@property(readonly, nonatomic) _Bool isAutoCalibration;
- (CDStruct_cc4e5495)currentCalibrationBounds;
@property(readonly, nonatomic) _Bool isInWarmup;
@property(readonly, nonatomic) _Bool isInCalibration;
@property(readonly, nonatomic) _Bool isInSession;
@property(readonly, nonatomic) long long transmitterPredictiveTimeRemaining;
@property(readonly, nonatomic) unsigned int totalWarmupTimeForTransmitter;
@property(readonly, nonatomic) unsigned int transmitterNoReadingsStartTime;
@property(readonly, nonatomic) unsigned int transmitterPredictiveStateStartTime;
@property(readonly, nonatomic) long long transmitterPredictiveState;
- (void)resetTransmitterProperties;
- (long long)trendArrowFromString:(id)arg1;
- (unsigned char)calibrationState;
@property(readonly, nonatomic) _Bool startPending;
- (_Bool)calibrationPending;
@property(readonly, nonatomic) unsigned char algorithmState;
- (unsigned int)failedConnectionCount;
- (unsigned int)lastConnectionTime;
- (id)transmitterActivateByDate;
- (id)transmitterActivationDate;
- (_Bool)transmitterBatteryLow;
- (_Bool)transmitterFatalError;
@property(readonly, nonatomic) unsigned int transmitterSessionDays;
- (unsigned int)transmitterSWNumber;
- (id)transmitterVersion;
- (id)lastBGTime;
- (id)txTicksToDisplayDate:(unsigned int)arg1;
- (unsigned short)lastBGValue;
@property(readonly, nonatomic) unsigned int transmitterTicks;
@property(readonly, nonatomic) unsigned int sessionSignature;
- (unsigned int)transmitterTimeOffset;
- (unsigned int)displaySessionStartTimeSeconds;
- (id)displaySessionStartTime;
- (_Bool)calibrateWithMeter:(id)arg1 lastMeter:(id)arg2;
- (void)stopSensor;
- (_Bool)startSensor;
- (void)clearSessionExpiry;
- (_Bool)transmitterSessionExpiry;
@property(readonly, nonatomic) _Bool isSingleSessionTransmitter;
@property(readonly, nonatomic) _Bool isLastSession;
@property(readonly, nonatomic) _Bool atLeastOneSessionLeft;
- (void)cancelTransmitterReconnect;
- (void)stopTransmitterScan;
- (void)startTransmitterScan;
@property(readonly, nonatomic) _Bool isTransmitterSetup;
@property(readonly, nonatomic) _Bool isTransmitterPaired;
- (id)getTransmitterId;
- (id)getEndOfSessionTimestamp;
- (_Bool)setupExistingTransmitter:(id)arg1 andSendDisconnect:(_Bool)arg2;
- (_Bool)setupNewTransmitter:(id)arg1;
- (id)getTransmitterRef;
- (void)startBluetooth;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AlertSoundsViewController : SetupWizardBaseViewController
{
}

- (void)toNextScreen;
- (void)viewDidLoad;

@end

@interface ErrorCircleHelpPopUps : UIView <UITextViewDelegate>
{
    UIImageView *_iPhoneBTPairingImageView;
    UIImageView *_iPodBTPairingImageView;
    UILabel *_transmitterHelpTextDesc;
    UILabel *_warmupHelpTextDesc;
    DXCMBlockButton *_goToSettings;
    UILabel *_whatHappenedTitle;
    UILabel *_whatHappenedTextDesc;
    UILabel *_sensorErrorInstructionsTextDesc;
    UILabel *_whatToDoTitle;
    UILabel *_whatToDoTextDesc;
    UITextView *_sensorErrorContacSupportTextDesc;
}

- (void).cxx_destruct;
@property(nonatomic) __weak UITextView *sensorErrorContacSupportTextDesc; // @synthesize sensorErrorContacSupportTextDesc=_sensorErrorContacSupportTextDesc;
@property(nonatomic) __weak UILabel *whatToDoTextDesc; // @synthesize whatToDoTextDesc=_whatToDoTextDesc;
@property(nonatomic) __weak UILabel *whatToDoTitle; // @synthesize whatToDoTitle=_whatToDoTitle;
@property(nonatomic) __weak UILabel *sensorErrorInstructionsTextDesc; // @synthesize sensorErrorInstructionsTextDesc=_sensorErrorInstructionsTextDesc;
@property(nonatomic) __weak UILabel *whatHappenedTextDesc; // @synthesize whatHappenedTextDesc=_whatHappenedTextDesc;
@property(nonatomic) __weak UILabel *whatHappenedTitle; // @synthesize whatHappenedTitle=_whatHappenedTitle;
@property(nonatomic) __weak DXCMBlockButton *goToSettings; // @synthesize goToSettings=_goToSettings;
@property(nonatomic) __weak UILabel *warmupHelpTextDesc; // @synthesize warmupHelpTextDesc=_warmupHelpTextDesc;
@property(nonatomic) __weak UILabel *transmitterHelpTextDesc; // @synthesize transmitterHelpTextDesc=_transmitterHelpTextDesc;
@property(nonatomic) __weak UIImageView *iPodBTPairingImageView; // @synthesize iPodBTPairingImageView=_iPodBTPairingImageView;
@property(nonatomic) __weak UIImageView *iPhoneBTPairingImageView; // @synthesize iPhoneBTPairingImageView=_iPhoneBTPairingImageView;
- (_Bool)textView:(id)arg1 shouldInteractWithURL:(id)arg2 inRange:(struct _NSRange)arg3 interaction:(long long)arg4;
- (void)setupTemporaryErrorScreen;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMDeviceInfoDetailViewController : DXCMBaseViewController
{
    NSString *_navigationTitle;
    NSString *_detailInfo;
    UITableView *_tableView;
}

- (void).cxx_destruct;
@property(nonatomic) __weak UITableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) NSString *detailInfo; // @synthesize detailInfo=_detailInfo;
@property(retain, nonatomic) NSString *navigationTitle; // @synthesize navigationTitle=_navigationTitle;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface DSAPIPublisherAPI : DSAPIBaseAPI
{
    NSString *serverURL;
}

+ (id)instance;
- (void).cxx_destruct;
- (id)getServer;
- (id)wrapArrayWithVersionAndTimestamp:(id)arg1;
- (id)wrapDictionaryWithVersionAndTimestamp:(id)arg1;
- (id)ListValueNames2;
- (int)DeleteAllAndroidNamedValues;
- (int)DeleteAllNamedValues2;
- (int)DeleteAllNamedValues2:(id)arg1;
- (void)UpdateOrCreateNamedValueWithArray:(id)arg1 withName:(id)arg2;
- (void)UpdateNamedValueWithArray:(id)arg1 withName:(id)arg2;
- (void)UpdateOrCreateNamedValueWithDict:(id)arg1 withName:(id)arg2;
- (void)UpdateNamedValueWithDict:(id)arg1 withName:(id)arg2;
- (void)UpdateNamedValue2:(id)arg1 withName:(id)arg2;
- (id)ReadArrayFromNamedValue:(id)arg1;
- (id)ReadDictFromNamedValue:(id)arg1;
- (id)ReadNamedValue2:(id)arg1;
- (void)CreateNamedValueWithArray:(id)arg1 withName:(id)arg2;
- (void)CreateNamedValueWithDict:(id)arg1 withName:(id)arg2;
- (void)CreateNamedValue2:(id)arg1 withName:(id)arg2;
- (void)surrenderTransmitterId;
- (_Bool)isTransmitterIdTaken:(id)arg1;
- (void)StopRemoteMonitoringSession2;
- (void)StopMonitoringReceiver2:(id)arg1;
- (id)ReplacePublisherAccountMonitoredReceiver2:(id)arg1;
- (id)GetMonitoredReceiverIdIfEnabled2;
- (id)ReadContactByName:(id)arg1;
- (id)CheckMonitoredReceiverAssignmentStatus2:(id)arg1;
- (id)SystemUtcTime;
- (void)checkInternet;
- (void)setServer:(id)arg1;
- (void)setServerToDefault;
- (id)init;

@end

@interface CGMInsulinEventViewController : CGMEventManagerViewController <UITableViewDelegate, UITableViewDataSource, UITextFieldDelegate>
{
    double _animDuration;
    unsigned long long _animCurve;
    UIView *keyboardSpacerView;
    NSLayoutConstraint *keyboardHeight;
    UIView *keyboardSeparatorView;
    UITableView *_tableView;
    DXCMCGMBaseTextFieldTableViewCell *_doseAmountCell;
    DXCMCGMBaseTableViewCell *_doseTimeCell;
    CGMDatePickerTableViewCell *_datePickerCell;
}

- (void).cxx_destruct;
@property(retain, nonatomic) CGMDatePickerTableViewCell *datePickerCell; // @synthesize datePickerCell=_datePickerCell;
@property(retain, nonatomic) DXCMCGMBaseTableViewCell *doseTimeCell; // @synthesize doseTimeCell=_doseTimeCell;
@property(retain, nonatomic) DXCMCGMBaseTextFieldTableViewCell *doseAmountCell; // @synthesize doseAmountCell=_doseAmountCell;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)willCancelAction;
- (id)messageForAddEventConfirmation;
- (id)titleForAddEventConfirmation;
- (_Bool)isValidData;
- (void)datePickerDidChange;
- (_Bool)doesString:(id)arg1 containSubstring:(id)arg2;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)textFieldDidChange:(id)arg1;
- (void)textFieldBeginEdit:(id)arg1;
- (void)showDatePickerCell:(_Bool)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)localNameForInsulinEvent;
- (float)maxInsulinValue;
- (float)minInsulinValue;
- (void)setupCells;
- (void)setupTableView;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface StartVideoViewController : SetupWizardBaseViewController <SetupWizardBaseViewControllerDelegate>
{
    _Bool _movieIsPlaying;
    DXCMBlockButton *_startVideo;
    DXCMBlockButton *_nextButton;
}

- (void).cxx_destruct;
@property(retain, nonatomic) DXCMBlockButton *nextButton; // @synthesize nextButton=_nextButton;
@property(retain, nonatomic) DXCMBlockButton *startVideo; // @synthesize startVideo=_startVideo;
@property _Bool movieIsPlaying; // @synthesize movieIsPlaying=_movieIsPlaying;
- (void)presentSensorInsertionVideo;
- (void)videoImageTapped;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)moviePlaybackDidFinish:(id)arg1;
- (void)dealloc;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly) UIView *view;

@end

@interface UAMWebAPI : NSObject
{
    NSString *_uamAPIBaseURL;
    NSString *_baseURL;
    NSObject<OS_dispatch_semaphore> *_synchronousSemaphore;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(retain) NSObject<OS_dispatch_semaphore> *synchronousSemaphore; // @synthesize synchronousSemaphore=_synchronousSemaphore;
@property(retain, nonatomic) NSString *baseURL; // @synthesize baseURL=_baseURL;
@property(retain, nonatomic) NSString *uamAPIBaseURL; // @synthesize uamAPIBaseURL=_uamAPIBaseURL;
- (id)sendRequest:(id)arg1 httpMethodType:(id)arg2 timeout:(double)arg3;
- (id)readAccountInformation;
@property(readonly, nonatomic) NSString *accessToken;
- (id)init;

@end

@interface CGMCalibrationHelper : NSObject
{
    double _weight;
    struct bounds _bounds1;
    struct bounds _bounds2;
}

+ (id)nextRecalibrationTimeString;
@property(readonly) struct bounds bounds2; // @synthesize bounds2=_bounds2;
@property(readonly) struct bounds bounds1; // @synthesize bounds1=_bounds1;
@property(readonly) double weight; // @synthesize weight=_weight;
- (id)init;

@end

@interface CGMBondedDevice : CGMBaseDataObject
{
    _Bool _device_is_bonded;
    NSString *_device_name;
    NSString *_device_id;
    NSString *_device_bonded_uuid;
    unsigned long long _record_id;
}

- (void).cxx_destruct;
@property(nonatomic) unsigned long long record_id; // @synthesize record_id=_record_id;
@property(nonatomic) _Bool device_is_bonded; // @synthesize device_is_bonded=_device_is_bonded;
@property(copy, nonatomic) NSString *device_bonded_uuid; // @synthesize device_bonded_uuid=_device_bonded_uuid;
@property(copy, nonatomic) NSString *device_id; // @synthesize device_id=_device_id;
@property(copy, nonatomic) NSString *device_name; // @synthesize device_name=_device_name;

@end

@interface CGMSessionRecord : CGMBaseDataObject
{
    unsigned char _calibration_mode;
    unsigned int _recorded_system_time_sec;
    unsigned int _transmitter_sessionstarttime;
    unsigned int _transmitter_sessionoffset;
    unsigned int _transmitter_time;
    unsigned int _session_warmup_time;
    unsigned int _session_length;
    unsigned long long _record_id;
    NSString *_guid;
    NSString *_recorded_system_time;
    NSString *_recorded_display_time;
    NSString *_transmitter_id;
    NSString *_logType;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *logType; // @synthesize logType=_logType;
@property(nonatomic) unsigned int session_length; // @synthesize session_length=_session_length;
@property(nonatomic) unsigned int session_warmup_time; // @synthesize session_warmup_time=_session_warmup_time;
@property(nonatomic) unsigned char calibration_mode; // @synthesize calibration_mode=_calibration_mode;
@property(nonatomic) unsigned int transmitter_time; // @synthesize transmitter_time=_transmitter_time;
@property(nonatomic) unsigned int transmitter_sessionoffset; // @synthesize transmitter_sessionoffset=_transmitter_sessionoffset;
@property(nonatomic) unsigned int transmitter_sessionstarttime; // @synthesize transmitter_sessionstarttime=_transmitter_sessionstarttime;
@property(retain, nonatomic) NSString *transmitter_id; // @synthesize transmitter_id=_transmitter_id;
@property(retain, nonatomic) NSString *recorded_display_time; // @synthesize recorded_display_time=_recorded_display_time;
@property(retain, nonatomic) NSString *recorded_system_time; // @synthesize recorded_system_time=_recorded_system_time;
@property(nonatomic) unsigned int recorded_system_time_sec; // @synthesize recorded_system_time_sec=_recorded_system_time_sec;
@property(retain, nonatomic) NSString *guid; // @synthesize guid=_guid;
@property(nonatomic) unsigned long long record_id; // @synthesize record_id=_record_id;

@end

@interface CGMCircleView : UIView <CGMEGVErrorStateDelegate>
{
    UIView *_masterCGMSquareView;
    EGVCircleView *_egvCircleView;
    CGMEGVErrorStateView *_errorCircleView;
    WarmUpCircleView *_warmUpCircleView;
    PairingCircleView *_pairingCircleView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) PairingCircleView *pairingCircleView; // @synthesize pairingCircleView=_pairingCircleView;
@property(retain, nonatomic) WarmUpCircleView *warmUpCircleView; // @synthesize warmUpCircleView=_warmUpCircleView;
@property(retain, nonatomic) CGMEGVErrorStateView *errorCircleView; // @synthesize errorCircleView=_errorCircleView;
@property(retain, nonatomic) EGVCircleView *egvCircleView; // @synthesize egvCircleView=_egvCircleView;
@property(retain, nonatomic) UIView *masterCGMSquareView; // @synthesize masterCGMSquareView=_masterCGMSquareView;
- (void)showEGV:(id)arg1;
- (void)showPairing;
- (void)showWarmUpState;
- (void)showErrorState:(unsigned long long)arg1;
- (void)openErrorInitialHelpTextWithIdentifier:(id)arg1;
- (void)onErrorButton:(unsigned long long)arg1;
- (void)onHelpButton:(unsigned long long)arg1;
- (void)updateWarmUpCircle;
- (void)openCalibrationHelpWithIdentifier:(id)arg1;
- (void)openErrorCircleHelpWithIdentifier:(id)arg1;
- (void)initAllCircle;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface CGMMenuItemsManager : NSObject
{
    NSMutableArray *_menuList;
}

+ (id)sharedManager;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableArray *menuList; // @synthesize menuList=_menuList;
- (id)footerAccessibilityIdInSection:(long long)arg1;
- (id)footerTitleOfItemsInSection:(long long)arg1;
- (id)headerAccessibilityIdInSection:(long long)arg1;
- (id)headerTitleOfItemsInSection:(long long)arg1;
- (id)itemsAtIndexPath:(id)arg1;
- (long long)numberOfItemsInSection:(long long)arg1;
- (long long)numberOfSection;
- (void)initCGMMenuList;

@end

@interface DXCMSensorCodeHelper : NSObject
{
}

+ (void)resetSensorCodeEntryValues;
+ (long long)getStatusForSensorCode:(id)arg1;
+ (void)getSensitivityValuesForSensorCode:(id)arg1 m0:(unsigned long long *)arg2 mf:(unsigned long long *)arg3;
+ (id)getSensorCodes;
+ (id)sensorCodesDictionary;

@end

@interface CGMMoreViewController : DXCMBaseViewController <UITableViewDataSource, UITableViewDelegate>
{
    _Bool _needsReload;
    long long _trendGraphMaxRange;
    UITableView *_tableView;
    UIView *_sectionHeaderViews;
    NSString *_updatedShareStatus;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool needsReload; // @synthesize needsReload=_needsReload;
@property(retain, nonatomic) NSString *updatedShareStatus; // @synthesize updatedShareStatus=_updatedShareStatus;
@property(retain, nonatomic) UIView *sectionHeaderViews; // @synthesize sectionHeaderViews=_sectionHeaderViews;
@property(nonatomic) __weak UITableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) long long trendGraphMaxRange; // @synthesize trendGraphMaxRange=_trendGraphMaxRange;
- (void)dataConsentStatusChangedRemotely;
- (void)sessionStatusChanged;
- (void)unwindToSettings:(id)arg1;
- (void)getShareStatus;
- (void)setupMenuTableViewCell:(id)arg1 withMenuItem:(id)arg2;
- (id)getStringFromDate:(id)arg1;
- (void)pushViewControllerNamed:(id)arg1 storyBoardNamed:(id)arg2 viewControllerTitleNamed:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)menuItemAtIndexPath:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (void)setupTableView;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (_Bool)saveGraphHeightChanges;
- (void)graphHeightChanged:(id)arg1;
- (void)viewDidLoad;
- (unsigned long long)supportedInterfaceOrientations;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DPMeterRecord : DPBaseRecord
{
    NSString *_TransmitterId;
    long long _TransmitterTime;
    NSString *_MeterSystemTime;
    NSString *_MeterDisplayTime;
    long long _Value;
    NSString *_EntryType;
}

- (void).cxx_destruct;
@property(retain) NSString *EntryType; // @synthesize EntryType=_EntryType;
@property long long Value; // @synthesize Value=_Value;
@property(retain) NSString *MeterDisplayTime; // @synthesize MeterDisplayTime=_MeterDisplayTime;
@property(retain) NSString *MeterSystemTime; // @synthesize MeterSystemTime=_MeterSystemTime;
@property long long TransmitterTime; // @synthesize TransmitterTime=_TransmitterTime;
@property(retain) NSString *TransmitterId; // @synthesize TransmitterId=_TransmitterId;

@end

@interface CGMSessionDao : CGMBaseDao
{
}

+ (id)getRecordedSystemTimeFrom:(id)arg1;
- (void)resetDataModel;
- (void)setupDataModelIfNeeded;
- (void)eraseData;
- (id)getLastStoppedRecordForTxID:(id)arg1;
- (id)getCGMSessionRecordDicts;
- (id)getRecordsBetweenStartTime:(int)arg1 andEndTime:(int)arg2;
- (id)getCGMSessionRecordDictsInRange:(unsigned long long)arg1 last:(unsigned long long)arg2;
- (id)getCGMSessionRecordDictWithRecordId:(unsigned long long)arg1;
- (id)sessionsWithTransmitterId:(id)arg1;
- (unsigned long long)insertSession:(id)arg1 txId:(id)arg2 txStartTimeSeconds:(unsigned int)arg3 txOffsetSeconds:(unsigned int)arg4 txTimeStamp:(unsigned int)arg5 warmupLength:(unsigned int)arg6 sessionLength:(unsigned int)arg7 calMode:(unsigned char)arg8 logType:(long long)arg9;
- (unsigned int)getMaxRecordId;
- (unsigned int)getMinRecordId;

@end

@interface DPDeviceSettingsLogRecord : DPBaseRecord
{
    NSString *_Language;
    NSNumber *_IsMmolDisplayMode;
    NSNumber *_Is24HourMode;
    NSNumber *_IsBlindedMode;
    NSString *_TransmitterId;
    long long _SystemTimeOffset;
    long long _DisplayTimeOffset;
    NSString *_SoftwareNumber;
    NSString *_SoftwareVersion;
}

- (void).cxx_destruct;
@property(retain) NSString *SoftwareVersion; // @synthesize SoftwareVersion=_SoftwareVersion;
@property(retain) NSString *SoftwareNumber; // @synthesize SoftwareNumber=_SoftwareNumber;
@property long long DisplayTimeOffset; // @synthesize DisplayTimeOffset=_DisplayTimeOffset;
@property long long SystemTimeOffset; // @synthesize SystemTimeOffset=_SystemTimeOffset;
@property(retain) NSString *TransmitterId; // @synthesize TransmitterId=_TransmitterId;
@property(retain) NSNumber *IsBlindedMode; // @synthesize IsBlindedMode=_IsBlindedMode;
@property(retain) NSNumber *Is24HourMode; // @synthesize Is24HourMode=_Is24HourMode;
@property(retain) NSNumber *IsMmolDisplayMode; // @synthesize IsMmolDisplayMode=_IsMmolDisplayMode;
@property(retain) NSString *Language; // @synthesize Language=_Language;
- (id)initWithDeviceInfo:(id)arg1;
- (id)init;

@end

@interface CGMShareRTEventsDao : CGMBaseDao
{
}

- (void)updateRealTimeEvents:(long long)arg1 withRecords:(id)arg2;
- (void)deleteDuplicateRealTimeEvents;
- (void)deleteRealTimeEventsAfterTime:(double)arg1;
- (void)deleteRealTimeEventsBeforeTime:(double)arg1;
- (id)dictDataRecordTypes;
- (unsigned long long)dataRecordTypeString:(id)arg1;
- (id)getUnuploadedRealTimeEvents;
- (long long)insertRealTimeEvent:(id)arg1 withSubType:(id)arg2 andRecords:(id)arg3;
- (void)eraseData;
- (void)resetDataModel;
- (void)setupDataModelIfNeeded;

@end

@interface CGMTrendNavigationController : UINavigationController
{
    _Bool _allowsRotation;
}

@property(nonatomic) _Bool allowsRotation; // @synthesize allowsRotation=_allowsRotation;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)hasBeenDismissedViewController:(id)arg1;
- (long long)preferredStatusBarStyle;
- (_Bool)prefersStatusBarHidden;
- (void)viewDidLoad;

@end

@interface DXCMBaseErrorModalViewController : DXCMBaseViewController
{
    CDUnknownBlockType _okPressedBlock;
    UIView *_topBarView;
    UIImageView *_bannerIconImageView;
    UILabel *_barTitleLabel;
    UIView *_contentView;
    UIScrollView *_scrollView;
    UIView *_scrollContentView;
    UILabel *_errorTitleLabel;
    UILabel *_descriptionLabel;
    DXCMBlockButton *_linkButton;
    DXCMBlockButton *_okButton;
    NSDictionary *_metricsDictionary;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSDictionary *metricsDictionary; // @synthesize metricsDictionary=_metricsDictionary;
@property(retain, nonatomic) DXCMBlockButton *okButton; // @synthesize okButton=_okButton;
@property(retain, nonatomic) DXCMBlockButton *linkButton; // @synthesize linkButton=_linkButton;
@property(retain, nonatomic) UILabel *descriptionLabel; // @synthesize descriptionLabel=_descriptionLabel;
@property(retain, nonatomic) UILabel *errorTitleLabel; // @synthesize errorTitleLabel=_errorTitleLabel;
@property(retain, nonatomic) UIView *scrollContentView; // @synthesize scrollContentView=_scrollContentView;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) UILabel *barTitleLabel; // @synthesize barTitleLabel=_barTitleLabel;
@property(retain, nonatomic) UIImageView *bannerIconImageView; // @synthesize bannerIconImageView=_bannerIconImageView;
@property(retain, nonatomic) UIView *topBarView; // @synthesize topBarView=_topBarView;
@property(copy, nonatomic) CDUnknownBlockType okPressedBlock; // @synthesize okPressedBlock=_okPressedBlock;
- (void)setCommonAttributesForLabel:(id)arg1;
- (void)layoutConstraintsWithTopBarView:(id)arg1 barTitleLabel:(id)arg2 bannerIconImageView:(id)arg3 errorTitleLabel:(id)arg4 scrollView:(id)arg5 scrollContentView:(id)arg6 descriptionLabel:(id)arg7 okButton:(id)arg8 linkButton:(id)arg9;
- (void)layoutConstraintsWithContentView:(id)arg1;
- (void)linkButtonPressed;
- (void)okButtonPressed;
- (void)addContentWithBarTitle:(id)arg1 errorTitle:(id)arg2 description:(id)arg3 accessibilityIdentifier:(id)arg4;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface CGMBaseEGVView : UIView
{
    UILabel *_circleLabel;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UILabel *circleLabel; // @synthesize circleLabel=_circleLabel;
- (void)initCircleLabelWithFrame:(struct CGRect)arg1;
- (void)initEGVStateLabelWithFrame:(struct CGRect)arg1;
- (void)sharedInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface DXCMCGMBaseTextFieldTableViewCell : DXCMCGMBaseTableViewCell
{
    UITextField *_valueTextField;
    UITextField *_unitLabel;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UITextField *unitLabel; // @synthesize unitLabel=_unitLabel;
@property(retain, nonatomic) UITextField *valueTextField; // @synthesize valueTextField=_valueTextField;
- (void)addAccessibilityIdWithSuffix:(id)arg1;
- (void)updateConstraints;
- (void)setup;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

@end

@interface DPPublicDataSource : NSObject <_TtP3CGM26DPPublicDataSourceProtocol_>
{
}

- (id)getAlertStatusRecordsFrom:(int)arg1 to:(int)arg2;
- (id)getWorkoutEventRecordsFrom:(int)arg1 to:(int)arg2;
- (id)getNutritionRecordsFrom:(int)arg1 to:(int)arg2;
- (id)getDeviceInfoRecordFrom:(int)arg1 to:(int)arg2;
- (id)getAlertScheduleInfo;
- (id)getUserEventRecordsFrom:(int)arg1 to:(int)arg2;
- (id)getSensorSessionRecordsFrom:(int)arg1 to:(int)arg2;
- (id)getMeterDataRecordsFrom:(int)arg1 to:(int)arg2;
- (id)getGlucoseRecordsFrom:(int)arg1 to:(int)arg2;

@end

@interface DCSAPIExceptionTypeNamesArray : NSObject
{
}

+ (id)desc:(id)arg1;
+ (int)toExceptionType:(id)arg1;
+ (void)init;

@end

@interface DCSAPIException : NSException
{
    int _codeEnum;
    long long _httpResponseCode;
}

+ (id)exception:(id)arg1 message:(id)arg2;
+ (id)exception:(id)arg1 httpResponseCode:(long long)arg2 message:(id)arg3;
@property long long httpResponseCode; // @synthesize httpResponseCode=_httpResponseCode;
@property int codeEnum; // @synthesize codeEnum=_codeEnum;
- (id)description;
- (id)initWithReason:(id)arg1 reason:(id)arg2 httpResponse:(long long)arg3 userInfo:(id)arg4;

@end

@interface DXCMLayout : NSObject
{
}

+ (void)addButtonsToView:(id)arg1 okButton:(id)arg2 helpText:(id)arg3 secondOkButton:(id)arg4;
+ (void)addButtonsToView:(id)arg1 okButton:(id)arg2 secondButton:(id)arg3 cancelButton:(id)arg4;
+ (void)addButtonsToView:(id)arg1 okButton:(id)arg2 cancelButton:(id)arg3;

@end

@interface PushNoAnimationSegue : UIStoryboardSegue
{
}

- (void)perform;

@end

@interface CGMStartSessionHelpPopUpView : DXCMBaseView
{
    UISwitch *_dontShowSwitch;
}

- (void).cxx_destruct;
@property(nonatomic) __weak UISwitch *dontShowSwitch; // @synthesize dontShowSwitch=_dontShowSwitch;
- (void)onDontShowSwitch:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SendInviteViewController : DXCMBaseShareViewController <UITableViewDataSource, UITableViewDelegate>
{
    _Bool _isInvitingFirstFollower;
    UITableView *_tableView;
    NSArray *_sections;
    UIView *_trendGraphSectionHeaderView;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool isInvitingFirstFollower; // @synthesize isInvitingFirstFollower=_isInvitingFirstFollower;
@property(retain, nonatomic) UIView *trendGraphSectionHeaderView; // @synthesize trendGraphSectionHeaderView=_trendGraphSectionHeaderView;
@property(retain, nonatomic) NSArray *sections; // @synthesize sections=_sections;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (_Bool)inviteContactWithStatusHUD:(id)arg1;
- (id)createTrendGraphSectionHeaderView;
- (id)configureNoDataSection;
- (id)configureHighSection;
- (id)configureLowSection;
- (id)configureUrgentLowSection;
- (id)configureTrendGraphViewSection;
- (id)getValueFromBool:(_Bool)arg1;
- (void)configureTableView;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SetupWizardBaseViewController : DXCMBaseViewController <UIScrollViewDelegate>
{
    _Bool _forbidSwipeGestureBackward;
    _Bool _pageLabelNotIncrementedOnSegue;
    UIView *_safeAreaView;
    unsigned long long _currentPageIndex;
    NSString *_additionalLoggingInformation;
    NSMutableDictionary *_alertDefaultLimitData;
    UIViewController *_popFromNavigationStack;
    UIScrollView *_scrollView;
    UIView *_contentView;
    NSArray *_contentConstraints;
    double _dexcomLogoOffsetTop;
    UIImageView *_dexcomLogo;
    MBProgressHUD *_progressHUD;
    UILabel *_currentPageLabel;
    NSDictionary *_wizardTypeLogName;
    UILabel *_captionLabel;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UILabel *captionLabel; // @synthesize captionLabel=_captionLabel;
@property(retain, nonatomic) NSDictionary *wizardTypeLogName; // @synthesize wizardTypeLogName=_wizardTypeLogName;
@property(retain, nonatomic) UILabel *currentPageLabel; // @synthesize currentPageLabel=_currentPageLabel;
@property(retain, nonatomic) MBProgressHUD *progressHUD; // @synthesize progressHUD=_progressHUD;
@property(retain, nonatomic) UIImageView *dexcomLogo; // @synthesize dexcomLogo=_dexcomLogo;
@property(nonatomic) double dexcomLogoOffsetTop; // @synthesize dexcomLogoOffsetTop=_dexcomLogoOffsetTop;
@property(retain, nonatomic) NSArray *contentConstraints; // @synthesize contentConstraints=_contentConstraints;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(retain, nonatomic) UIViewController *popFromNavigationStack; // @synthesize popFromNavigationStack=_popFromNavigationStack;
@property(nonatomic) _Bool pageLabelNotIncrementedOnSegue; // @synthesize pageLabelNotIncrementedOnSegue=_pageLabelNotIncrementedOnSegue;
@property _Bool forbidSwipeGestureBackward; // @synthesize forbidSwipeGestureBackward=_forbidSwipeGestureBackward;
@property(retain, nonatomic) NSMutableDictionary *alertDefaultLimitData; // @synthesize alertDefaultLimitData=_alertDefaultLimitData;
@property(retain, nonatomic) NSString *additionalLoggingInformation; // @synthesize additionalLoggingInformation=_additionalLoggingInformation;
@property(nonatomic) unsigned long long currentPageIndex; // @synthesize currentPageIndex=_currentPageIndex;
@property(retain, nonatomic) UIView *safeAreaView; // @synthesize safeAreaView=_safeAreaView;
- (void)finishedSensorCodeEntry;
- (void)finishedNoSensorCode;
- (void)resetSensorCode;
- (void)removePlayVideoText;
- (id)localizedPlayVideoText;
- (void)setupVideoImageButton:(id)arg1;
- (void)setupVideoImageView:(id)arg1;
- (void)displayModalViewWithDescription:(id)arg1 navigationTitle:(id)arg2 okPressedBlock:(CDUnknownBlockType)arg3 viewControllerToPresent:(id)arg4;
- (id)getLogName:(id)arg1;
- (id)getMaximumPagesForWizardType;
- (unsigned long long)numSetupWizardScreens;
- (void)resetViewHierarchy;
- (id)createCurrentPageLabel;
- (id)createLabelWithAttributedText:(id)arg1;
- (void)layoutConstraintsWithDexcomLogo:(id)arg1 scrollView:(id)arg2 contentView:(id)arg3 secondOkButton:(id)arg4 helpText:(id)arg5;
- (void)layoutConstraintsWithDexcomLogo:(id)arg1 scrollView:(id)arg2 contentView:(id)arg3 okButton:(id)arg4;
- (void)onWizardFinished;
- (void)dismissSelf;
- (void)displayWebViewWithKey:(id)arg1;
- (void)displayModalViewWithDescription:(id)arg1 navigationTitle:(id)arg2 imageView:(id)arg3 caption:(id)arg4 accessibilityIdentifier:(id)arg5;
- (void)displayModalViewWithDescription:(id)arg1 navigationTitle:(id)arg2;
- (void)displayModalViewWithDescription:(id)arg1 navigationTitle:(id)arg2 imageView:(id)arg3 caption:(id)arg4;
- (void)displayModalViewWithDescription:(id)arg1 imageView:(id)arg2 caption:(id)arg3;
- (void)displayModalViewWithDescription:(id)arg1 descriptionLabelAccessibilityId:(id)arg2;
- (void)addLayoutConstraintsWithOkButton:(id)arg1 helpText:(id)arg2 secondOkButton:(id)arg3;
- (void)addLayoutConstraintsWithOkButton:(id)arg1 secondButton:(id)arg2 cancelButton:(id)arg3;
- (void)addLayoutConstraintsWithOkButton:(id)arg1 okButtonTwo:(id)arg2;
- (void)addLayoutConstraintsWithOkButton:(id)arg1 cancelButton:(id)arg2;
- (void)layoutConstraintsWithScrollLabel:(id)arg1 scrollView:(id)arg2 contentView:(id)arg3;
- (void)addLayoutConstraintsWithLabel:(id)arg1;
- (void)addContentWithCustomView:(id)arg1 constraints:(id)arg2;
- (void)addContentWithDescription:(id)arg1 imageView:(id)arg2 caption:(id)arg3 accessibilityIdentifier:(id)arg4;
- (void)addDexcomLogo:(_Bool)arg1;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)showHUDSuccessWithTitle:(id)arg1 okToSegueBlock:(CDUnknownBlockType)arg2;
- (id)createBoldedLabelWithText:(id)arg1;
- (id)createLabelWithText:(id)arg1;
- (void)hidePageLabel:(_Bool)arg1;
- (void)saveTransmitterComplete;
- (void)enableAlwaysShareIfNeeded;
- (void)resetGraphHeightSettings;
- (void)updateUserSettingsIfNeededForCurrentTransmitterType:(unsigned char)arg1 andLastProductMode:(long long)arg2;
- (void)updateTransmitterMode:(unsigned char)arg1;
- (void)saveTransmitterId:(id)arg1;
- (id)getEntryPoint;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BusinessAnalytics : NSObject
{
    _Bool _analyticsEngineEnabled;
    NSString *_logName;
}

+ (id)readableViewName:(id)arg1;
+ (id)sharedInstance;
- (void).cxx_destruct;
@property(nonatomic) _Bool analyticsEngineEnabled; // @synthesize analyticsEngineEnabled=_analyticsEngineEnabled;
@property(retain, nonatomic) NSString *logName; // @synthesize logName=_logName;
- (id)fullEventNameForSender:(id)arg1 eventName:(id)arg2;
- (void)logEventWithTime:(id)arg1 startTime:(id)arg2 endTime:(id)arg3 fromSender:(id)arg4;
- (void)endTimedEvent:(id)arg1 withParameters:(id)arg2 fromSender:(id)arg3;
- (void)endTimedEvent:(id)arg1 fromSender:(id)arg2;
- (void)logEvent:(id)arg1 timed:(_Bool)arg2 withParameters:(id)arg3 fromSender:(id)arg4;
- (void)logEvent:(id)arg1 timed:(_Bool)arg2 fromSender:(id)arg3;
- (void)logEvent:(id)arg1 withParameters:(id)arg2 fromSender:(id)arg3;
- (void)logEvent:(id)arg1 fromSender:(id)arg2;
- (id)init;

@end

@interface CGMDatabaseException : NSException
{
}

- (id)initWithName:(id)arg1 originalError:(id)arg2;

@end

@interface CGMAlertScheduleEditTimeViewController : DXCMBaseViewController <UITableViewDelegate, UITableViewDataSource>
{
    CGMAlertSchedule *_alertSchedule;
    UIDatePicker *_timePicker;
    UITableView *_tableView;
    NSDateFormatter *_dateFormatter24hr;
    DXCMAlertScheduleTimeTableViewCell *_startTimeCell;
    DXCMAlertScheduleTimeTableViewCell *_endTimeCell;
    struct timeOfDay _selectedStartTime;
    struct timeOfDay _selectedEndTime;
    NSDateFormatter *_timeFormatter;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSDateFormatter *timeFormatter; // @synthesize timeFormatter=_timeFormatter;
@property(nonatomic) struct timeOfDay selectedEndTime; // @synthesize selectedEndTime=_selectedEndTime;
@property(nonatomic) struct timeOfDay selectedStartTime; // @synthesize selectedStartTime=_selectedStartTime;
@property(retain, nonatomic) DXCMAlertScheduleTimeTableViewCell *endTimeCell; // @synthesize endTimeCell=_endTimeCell;
@property(retain, nonatomic) DXCMAlertScheduleTimeTableViewCell *startTimeCell; // @synthesize startTimeCell=_startTimeCell;
@property(retain, nonatomic) NSDateFormatter *dateFormatter24hr; // @synthesize dateFormatter24hr=_dateFormatter24hr;
@property(nonatomic) __weak UITableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) __weak UIDatePicker *timePicker; // @synthesize timePicker=_timePicker;
@property(retain, nonatomic) CGMAlertSchedule *alertSchedule; // @synthesize alertSchedule=_alertSchedule;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)setupTableView;
- (void)initDataSource;
- (_Bool)isEndTimeRowSelected;
- (_Bool)isStartTimeRowSelected;
- (void)timePickerValueChanged;
- (void)setupTimePicker;
- (void)willMoveToParentViewController:(id)arg1;
- (void)saveAlertScheduleTime;
- (void)setPickerTime:(struct timeOfDay)arg1 animated:(_Bool)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMCarbsEventViewController : CGMEventManagerViewController <UITableViewDelegate, UITableViewDataSource>
{
    double _animDuration;
    unsigned long long _animCurve;
    UIView *keyboardSpacerView;
    NSLayoutConstraint *keyboardHeight;
    UIView *keyboardSeparatorView;
    UITableView *_tableView;
    DXCMCGMBaseTextFieldTableViewCell *_carbsAmountCell;
    DXCMCGMBaseTableViewCell *_carbsTimeCell;
    CGMDatePickerTableViewCell *_datePickerCell;
}

- (void).cxx_destruct;
@property(retain, nonatomic) CGMDatePickerTableViewCell *datePickerCell; // @synthesize datePickerCell=_datePickerCell;
@property(retain, nonatomic) DXCMCGMBaseTableViewCell *carbsTimeCell; // @synthesize carbsTimeCell=_carbsTimeCell;
@property(retain, nonatomic) DXCMCGMBaseTextFieldTableViewCell *carbsAmountCell; // @synthesize carbsAmountCell=_carbsAmountCell;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)willCancelAction;
- (id)messageForAddEventConfirmation;
- (_Bool)isValidData;
- (void)datePickerDidChange;
- (_Bool)doesString:(id)arg1 containSubstring:(id)arg2;
- (void)textFieldDidChange:(id)arg1;
- (void)textFieldBeginEdit:(id)arg1;
- (void)showDatePickerCell:(_Bool)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)setupCells;
- (void)setupTableView;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CGMShareEngine : NSObject
{
    _Bool _phoneError;
    _Bool _internetError;
    _Bool _cloudError;
    _Bool _noActiveContacts;
    UIViewController *_entrypointRootViewController;
    NSString *_logName;
    DSAPIEgv *_latestServerEGV;
    CGMEGV *_latestCurrentEGV;
    double _lastRealTimeEventTimestamp;
    unsigned long long _backgroundTask;
    unsigned long long _backgroundTaskForTimer;
    double _lastFollowerUpdateTime;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property double lastFollowerUpdateTime; // @synthesize lastFollowerUpdateTime=_lastFollowerUpdateTime;
@property(nonatomic) _Bool noActiveContacts; // @synthesize noActiveContacts=_noActiveContacts;
@property unsigned long long backgroundTaskForTimer; // @synthesize backgroundTaskForTimer=_backgroundTaskForTimer;
@property unsigned long long backgroundTask; // @synthesize backgroundTask=_backgroundTask;
@property double lastRealTimeEventTimestamp; // @synthesize lastRealTimeEventTimestamp=_lastRealTimeEventTimestamp;
@property(retain) CGMEGV *latestCurrentEGV; // @synthesize latestCurrentEGV=_latestCurrentEGV;
@property(retain, nonatomic) DSAPIEgv *latestServerEGV; // @synthesize latestServerEGV=_latestServerEGV;
@property(retain, nonatomic) NSString *logName; // @synthesize logName=_logName;
@property(retain, nonatomic) UIViewController *entrypointRootViewController; // @synthesize entrypointRootViewController=_entrypointRootViewController;
@property(nonatomic) _Bool cloudError; // @synthesize cloudError=_cloudError;
@property(nonatomic) _Bool internetError; // @synthesize internetError=_internetError;
@property(nonatomic) _Bool phoneError; // @synthesize phoneError=_phoneError;
- (void)resetShareTutorialWithNoFollower;
- (void)disableShare;
- (void)enableShare;
- (void)handleNotConsented;
- (void)endBackgroundTaskTimer;
- (void)performActionsWhenTransmitterIsFound;
- (void)performActionsWhenTransmitterIsNotFound;
- (void)performActionsWhenBluetoothIsEnabled;
- (void)performActionsWhenBluetoothIsDisabled;
- (void)deleteEventsInserted;
- (id)latestServerEgvFromDictionary:(id)arg1;
- (_Bool)serverUploadRealTimeEvents:(id)arg1;
- (_Bool)uploadEvents;
- (void)endBackgroundTask;
- (void)beginBackgroundTask;
- (void)doSomethingOnBackgroundTask:(CDUnknownBlockType)arg1;
- (id)serverReadLatestGlucoseValue;
- (id)determineEgvsToShare;
- (void)updateShareFollowerStates;
- (void)updatePhoneStatus;
- (long long)getArrowForFollowFromTrend:(BOOL)arg1;
- (void)doUploadRecordsWithEvent;
- (void)uploadRealTimeEventRecords;
- (void)triggerUploadOfEvents:(id)arg1;
- (void)resetUploadTimestampToNow;
- (void)onResetToOOBE;
@property(readonly, nonatomic) NSString *localizedStatus;
@property(readonly, nonatomic) unsigned long long status;
@property(readonly, nonatomic) _Bool isConsentRequired;
- (id)init;

@end

@interface DPManifest : DPBaseObject
{
    NSArray *_Entries;
}

- (void).cxx_destruct;
@property(retain) NSArray *Entries; // @synthesize Entries=_Entries;

@end

@interface CGMTrendGraphIntentIntent : INIntent
{
}


// Remaining properties
@property(nonatomic) long long duration; // @dynamic duration;
@end

@interface CGMTrendGraphIntentIntentResponse : INIntentResponse
{
    long long _code;
}

@property(nonatomic) long long code; // @synthesize code=_code;
- (id)initWithCode:(long long)arg1 userActivity:(id)arg2;

@end

@interface CGMDurationResolutionResult : INEnumResolutionResult
{
}

+ (id)confirmationRequiredWithDurationToConfirm:(long long)arg1;
+ (id)successWithResolvedDuration:(long long)arg1;

@end

@interface CGMViewGlucoseIntent : INIntent
{
}

@end

@interface CGMViewGlucoseIntentResponse : INIntentResponse
{
    long long _code;
}

+ (id)readingErrorNoTrendIntentResponseWithGlucose:(id)arg1 readingErrorMessage:(long long)arg2;
+ (id)urgentLowNoTrendIntentResponseWithGlucose:(id)arg1;
+ (id)successNoTrendIntentResponseWithGlucose:(id)arg1;
+ (id)readingErrorIntentResponseWithGlucose:(id)arg1 rate:(long long)arg2 readingErrorMessage:(long long)arg3;
+ (id)urgentLowSoonIntentResponseWithGlucose:(id)arg1 predictedTimeLeft:(id)arg2;
+ (id)urgentLowIntentResponseWithGlucose:(id)arg1 rate:(long long)arg2;
+ (id)warmUpIntentResponseWithTime:(id)arg1;
+ (id)edgeCasesIntentResponseWithErrorMessage:(long long)arg1;
+ (id)successIntentResponseWithGlucose:(id)arg1 rate:(long long)arg2;
@property(nonatomic) long long code; // @synthesize code=_code;
- (id)initWithCode:(long long)arg1 userActivity:(id)arg2;

// Remaining properties
@property(nonatomic) long long errorMessage; // @dynamic errorMessage;
@property(copy, nonatomic) INObject *glucose; // @dynamic glucose;
@property(copy, nonatomic) NSString *predictedTimeLeft; // @dynamic predictedTimeLeft;
@property(nonatomic) long long rate; // @dynamic rate;
@property(nonatomic) long long readingErrorMessage; // @dynamic readingErrorMessage;
@property(copy, nonatomic) NSNumber *time; // @dynamic time;

@end

@interface CGMTrendArrowResolutionResult : INEnumResolutionResult
{
}

+ (id)confirmationRequiredWithTrendArrowToConfirm:(long long)arg1;
+ (id)successWithResolvedTrendArrow:(long long)arg1;

@end

@interface CGMExpirationStatusResolutionResult : INEnumResolutionResult
{
}

+ (id)confirmationRequiredWithExpirationStatusToConfirm:(long long)arg1;
+ (id)successWithResolvedExpirationStatus:(long long)arg1;

@end

@interface CGMReadingErrorStatusResolutionResult : INEnumResolutionResult
{
}

+ (id)confirmationRequiredWithReadingErrorStatusToConfirm:(long long)arg1;
+ (id)successWithResolvedReadingErrorStatus:(long long)arg1;

@end

@interface _TtC3CGM25CGMEditTimeViewController (CGM) <UIPickerViewAccessibilityDelegate>
- (id)pickerView:(id)arg1 accessibilityLabelForComponent:(long long)arg2;
@end

@interface _TtC3CGM22UAMLoginViewController (CGM) <_TtP16DXCMUAMFramework28UAMWebViewControllerDelegate_>
- (void)errorButtonPressed;
@end

@interface NSDictionary (DxcmExt)
+ (id)dictionaryFromJsonString:(id)arg1;
+ (id)removeObjectsNotOfType:(Class)arg1 fromDictionary:(id)arg2;
@end

@interface NSAttributedString (DXCMFormat)
+ (id)formatAsNumberedList:(id)arg1 withBulletPrefix:(id)arg2 attributes:(id)arg3 spacing:(double)arg4 indentation:(double)arg5;
+ (id)formatAttributedBulletedList:(id)arg1 withBulletPrefix:(id)arg2 spacing:(double)arg3 indentation:(double)arg4;
+ (id)format:(id)arg1 withBulletPrefix:(id)arg2 attributes:(id)arg3 spacing:(double)arg4 indentation:(double)arg5;
+ (id)italicDefaultTextAttributes;
+ (id)boldTitleTextAttributes;
+ (id)boldDefaultTextAttributes;
+ (id)warningBoldTextAttributes;
+ (id)warningTextAttributes;
+ (id)boldString:(id)arg1 withAppendedString:(id)arg2;
+ (id)boldSubstringUsingPredefinedTags:(id)arg1 boldTextColor:(id)arg2;
+ (id)getItalicDefaultAttributedString:(id)arg1;
+ (id)getBoldTitleAttributedString:(id)arg1;
+ (id)getBoldDefaultAttributedString:(id)arg1;
+ (id)getWarningAttributedString:(id)arg1;
+ (id)getDefaultAttributedString:(id)arg1;
@end

@interface NSDate (DXCMDateTime)
+ (_Bool)dxcm_using24HourClock;
+ (id)dxcm_dateWithTimeIntervalSinceNow:(double)arg1;
+ (_Bool)isTimeFixed;
+ (void)setFixedTime:(id)arg1;
+ (void)clearFixedTime;
+ (id)dxcm_dateAtEndfOfDay;
+ (id)dateFromISO8601String:(id)arg1;
+ (id)dateWithNoDelta;
+ (id)dxcm_date;
+ (double)getOffset;
+ (void)setOffset:(double)arg1;
+ (void)accelerateTime:(double)arg1;
+ (id)dateComponentsFromDate:(id)arg1 withTimeZone:(id)arg2;
+ (id)dateComponentsFromDate:(id)arg1;
+ (id)dxcm_localizedDateString:(id)arg1 withStyle:(unsigned long long)arg2;
+ (id)dateWithTimeOfDay:(struct timeOfDay)arg1;
- (id)initWithDxcm_TimeIntervalSinceNow:(double)arg1;
- (double)dxcm_timeIntervalSinceNow;
- (id)ISO8601DateStringNative;
- (id)ISO8601DateStringUTC;
- (id)dxcm_dateWithZeroSeconds;
- (_Bool)isSameDayAsDate:(id)arg1;
- (id)dxcm_stringTodayOrDatePlusTime;
- (id)dxcm_stringForDateTime;
@property(readonly, nonatomic) struct timeOfDay timeOfDay;
@end

@interface RNEncryptor (DXCM)
+ (id)encryptBase64String:(id)arg1;
+ (id)encryptData:(id)arg1;
@end

@interface MBProgressHUD (MBProgressHUDDXCM)
+ (void)showHUDAddedToView:(id)arg1 withSettingsBlock:(CDUnknownBlockType)arg2 whileExecutingBlock:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
+ (void)showHUDAddedToView:(id)arg1 whileExecutingBlock:(CDUnknownBlockType)arg2;
+ (_Bool)isHUDVisibleForView:(id)arg1;
+ (void)setAdditionalDisplayTime:(double)arg1;
+ (double)additionalDisplayTime;
- (_Bool)isVisible;
- (void)showCompletionMessage:(id)arg1 andImage:(id)arg2 andDuration:(double)arg3;
- (void)setLabelText:(id)arg1;
@end

@interface NSIndexPath (Accessibility)
- (id)stringValue;
@end

@interface RNDecryptor (DXCM)
+ (id)decryptBase64String:(id)arg1;
+ (id)decryptData:(id)arg1;
@end

@interface UITableViewCell (Accessibility)
- (void)addCommonIdWithSuffix:(id)arg1;
- (void)addAccessibilityIdWithSuffix:(id)arg1;
@end

@interface UIColor (Additions)
- (id)dxcm_darkerColor;
- (id)dxcm_lighterColor;
@end

@interface NSString (DxcmExt)
+ (id)limitVisibleCharactersOf:(id)arg1 withLimit:(unsigned long long)arg2;
+ (unsigned long long)numOfVisibleCharacters:(id)arg1;
- (id)stringByAppendingUrlQueryParams:(id)arg1;
- (_Bool)isGreaterOrEqualTo:(id)arg1 andLessThanOrEqualTo:(id)arg2;
- (id)stringWithNoCarriageReturns;
- (_Bool)containsString:(id)arg1;
@end

@interface NSMutableAttributedString (LinkString)
- (void)makeDefaultFontSize;
- (_Bool)addLinkWithText:(id)arg1 url:(id)arg2;
@end

@interface MMWormhole (DXCM)
- (id)getAllIdentifiers;
@end

@interface FMDatabase (CGMDataMgr)
- (void)installCGMISODisplayTimestampFunction;
- (void)installCGMISOSystemTimestampFunction;
- (void)installCGMUnixTimestampFunction;
- (void)installCGMTimestampFunctions;
- (void)updateWithSQL:(id)arg1;
- (id)selectManyRowsWithSQL:(id)arg1;
- (id)selectOneRowWithSQL:(id)arg1;
- (id)selectManyValuesWithSQL:(id)arg1;
- (id)selectOneValueSQL:(id)arg1;
- (void)updateWithSQL:(id)arg1 args:(id)arg2;
- (id)selectManyRowsWithSQL:(id)arg1 args:(id)arg2;
- (id)selectOneRowWithSQL:(id)arg1 args:(id)arg2;
- (id)selectManyValuesWithSQL:(id)arg1 args:(id)arg2;
- (id)selectOneValueSQL:(id)arg1 args:(id)arg2;
- (void)executeSQL:(id)arg1 args:(id)arg2 context:(id)arg3;
- (void)cgm_executeUpdate:(id)arg1 withParameterDictionary:(id)arg2;
- (void)cgm_executeUpdate:(id)arg1 withArgumentsInArray:(id)arg2;
@end

@interface NSData (MD5)
- (id)md5DigestStr;
@end

@interface UIImage (CGMExtensions)
+ (id)cgmFallbacktoEnglishImageNamed:(id)arg1;
+ (id)cgmFallbackToEnglishImageWithUnitsNamed:(id)arg1;
+ (id)cgmNameWithLanguageSuffix:(id)arg1;
+ (id)cgmUnitsImageNamed:(id)arg1;
+ (id)cgmLocalImageNamed:(id)arg1;
@end

@interface UIView (EZFrame)
- (void)setHeight:(double)arg1;
- (void)setWidth:(double)arg1;
- (void)setYPos:(double)arg1;
- (void)setXPos:(double)arg1;
@end

